[{"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js":"1","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js":"2","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js":"3","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js":"4","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js":"5","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js":"6","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js":"7","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js":"8","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js":"9","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js":"10","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js":"11","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Body.js":"12","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js":"13","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js":"14","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js":"15","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/SearchBox.js":"16","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Likes.js":"17","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Comments.js":"18"},{"size":573,"mtime":1610686777038,"results":"19","hashOfConfig":"20"},{"size":364,"mtime":1607610187552,"results":"21","hashOfConfig":"20"},{"size":5064,"mtime":1607610187552,"results":"22","hashOfConfig":"20"},{"size":983,"mtime":1610686747405,"results":"23","hashOfConfig":"20"},{"size":11748,"mtime":1610555442674,"results":"24","hashOfConfig":"20"},{"size":575,"mtime":1609166041917,"results":"25","hashOfConfig":"20"},{"size":2453,"mtime":1610735001502,"results":"26","hashOfConfig":"20"},{"size":979,"mtime":1608570968735,"results":"27","hashOfConfig":"20"},{"size":429,"mtime":1610686723443,"results":"28","hashOfConfig":"20"},{"size":5361,"mtime":1610629258464,"results":"29","hashOfConfig":"20"},{"size":243,"mtime":1610641084844,"results":"30","hashOfConfig":"20"},{"size":2560,"mtime":1610733667077,"results":"31","hashOfConfig":"20"},{"size":923,"mtime":1610454479416,"results":"32","hashOfConfig":"20"},{"size":8247,"mtime":1610735000272,"results":"33","hashOfConfig":"20"},{"size":7298,"mtime":1610694648172,"results":"34","hashOfConfig":"20"},{"size":1140,"mtime":1610734999173,"results":"35","hashOfConfig":"20"},{"size":4318,"mtime":1610733265282,"results":"36","hashOfConfig":"20"},{"size":4316,"mtime":1610734997863,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1y60pkv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js",[],["77","78"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js",["79","80","81","82","83","84"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js",["85","86","87"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '80%',\n            position: 'relative',\n            paddingTop: '10ch',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeFlexBox: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n            height: '100%',\n        },\n        themesButtons: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n        },\n        cancelFiltersButton: {\n            backgroundColor: '#D64F30',\n            color: 'white',\n            \"&:hover\": {\n                backgroundColor: '#FF5F39'\n            },\n            marginLeft: '1ch',\n            marginRight: '1ch',\n            marginTop: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            \"&:hover\": {\n                backgroundColor: '#D64F30',\n                color: '#FFFFFE',\n            },\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n}));\n\n// LOGIQUE :\n\nconst PageBodyContainer = () => {\n    \n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n    const [userList, setUserList] = useState();\n\n    const classes = useStyles();\n    \n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => result.data)\n        .then(data => setPostList(data));\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data))\n    }, []);\n\n    const cancelFilters = () => {\n        setSelectedThemes([]);\n    };\n\n    return (\n        <>\n            <CssBaseline />\n                <div className= { classes.postContainer }>\n                    <CreatePost themes={themeList} />\n                    {postList && postList.filter(post => ((selectedThemes.includes(post.theme))||(selectedThemes.length == 0))).map(post => { \n                        return <Post key={post.id} post={post} />;\n                    })}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                    <div className={classes.themeFlexBox}>\n                        <div className={classes.themesButtons}>\n                            {themeList && themeList.map((theme) => { \n                                return (\n                                    <Button key={theme.id} \n                                        className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                                        onClick={() => { \n                                            if (!selectedThemes.includes(theme.id)) {\n                                                setSelectedThemes([...selectedThemes, theme.id]);\n                                            }\n                                            else {\n                                                setSelectedThemes(selectedThemes.filter(item => { \n                                                    return item !== theme.id; \n                                                }));\n                                            }\n                                        }} > \n                                        {theme && theme.name} \n                                    </Button>\n                                )\n                            })}\n                        </div>\n                        <Button className={classes.cancelFiltersButton} onClick={cancelFilters} >Retirer tous les filtres</Button>\n                    </div>\n            </div>\n        </>\n    )\n};\n\nexport default PageBodyContainer;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Body.js",["88","89","90"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js",["91","92","93","94","95","96","97","98"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js",["99","100","101","102","103"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport ImageUploader from 'react-images-upload';\n\nconst UrlAPI = 'http://localhost:3000/api';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    createPostBlock: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '70%',\n            margin: 'auto',  \n            marginTop: '4ch',\n        },\n        createPostHeader: {\n            backgroundColor: '#D75030',\n            color: 'white',\n            width: '25%',\n            padding: '1ch',\n            textAlign: 'left',\n            fontSize: '12px',\n        },\n        createPostBody: {\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: '#F2D3D4',\n            padding: '2ch',\n            width: '100%',\n            margin: 'auto',\n            marginBottom: '10ch',\n        },\n        createPostBodyContent: {\n            backgroundColor: '#FFFFFE',\n            width: '95%',\n            margin: 'auto',\n            padding: '2ch',\n            textAlign: 'left',\n        },  \n        postTextarea: {\n            width: '100%',\n            height: 'auto',\n            fontFamily: 'Avenir, Segoe, UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n            border: 'none',\n            \"&:focus\": {\n                outline: 'none',\n            },\n        },\n        buttons: {\n            display: 'flex',\n            width: '95%',\n            height: '3.5ch',\n            margin: 'auto',\n            marginTop: '2ch',\n            justifyContent: 'space-between',\n        },\n        buttonsText: {\n            color: '#D75030',\n            fontWeight: '600',\n            fontSize: '14px',   \n            marginRight: '1ch',\n            marginTop: '0.5ch',\n        },\n        dropDownList: {\n            width: '30%',\n            backgroundColor: '#D75030',\n            borderStyle: 'none',\n            color: '#FFFFFE',\n            paddingLeft: '1ch',\n            marginRight: '1ch',\n            fontSize: '14px',   \n            cursor: 'pointer',\n        },\n        createTheme: {\n            color: '#686A6C',\n            width: '35%',\n            fontSize: '14px',   \n            borderStyle: 'none',\n            paddingLeft: '1ch',\n        },\n        publish: {\n            backgroundColor: '#D75030',\n            color: '#FFFFFE',\n            borderRadius: '5px',\n            width: '15%',\n            fontWeight: '400',\n            \"&:hover\": {\n                backgroundColor: '#B85030',\n            },\n        },\n}));\n\n// LOGIQUE :\n\nconst CreatePost = props => {\n\n    const classes = useStyles();\n    const [content, setContent] = useState('');\n    const [user, setUser] = useState('');\n    const [theme, setTheme] = useState('');\n    const [pictures, setPictures] = useState([]);\n\n    const currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    const handleChange = (event) => {\n        setTheme(event.target.value);\n    };\n\n    const handleContent = (event) => {\n        setContent(event.target.value);\n    };\n    \n    //Gestion d'import d'image(s) lors de la création d'un post.\n    const onDrop = picture => {\n        setPictures(picture);\n    };\n\n    const handlePublication = () => {\n            axios({\n                method: 'post',\n                url: UrlAPI + '/posts',\n                data: { content : content, theme: theme, user: currentUser.id }\n            })\n            .then(function (response) {\n                //On traite la suite une fois la réponse obtenue \n                let postId = response.data.id;\n                if (pictures.length >0) {\n                    const fd = new FormData();\n                    let pictureList = [];\n                    pictureList = pictures.map(p => {\n                        fd.append('image', p);\n                    });                    \n                    const config = {\n                        headers: {\n                            'Content-Type' : 'multipart/form-data'\n                        }\n                    }\n                     axios.post(UrlAPI + '/posts/' + postId + '/images', fd, config)\n                        .then(function (response) {\n                            console.log('image:', response);\n                        })\n                        .catch(function (error) {\n                            //On traite ici les erreurs éventuellement survenues\n                            console.log(error);\n                        });\n                }\n\n            })\n            .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error);\n            });\n        };\n\n    return(\n        <div className= { classes.createPostBlock }>\n            <div className={classes.createPostHeader}>\n                <h2>PUBLIER UN POST</h2>\n            </div>\n            <div className={classes.createPostBody} >\n                <div className={classes.createPostBodyContent} >\n                    <textarea className={classes.postTextarea} placeholder=\"Ecrivez le contenu de votre post ici...\" value={content} onChange={handleContent}/>\n                    <ImageUploader\n                        withIcon={false}\n                        buttonText='Ajoutez des images'\n                        onChange={onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                        withLabel={false}\n                        fileSizeError='Image trop volumineuse'\n                        buttonStyles={{backgroundColor: '#757575', borderRadius: '5px', position: \"relative\", margin: \"0\", height: '30px'}}\n                    />\n                </div>\n                <div className={classes.buttons}>\n                    <select className={classes.dropDownList} value={theme} placeholder=\"Choisissez un thème\" onChange={handleChange}>\n                        <option value=\"\" defaultValue data-default>Choisissez un thème</option>\n                        {props.themes && props.themes.map((theme) => { \n                        return (\n                            <option key={theme.id} value={theme.id}>{theme.name}</option>\n                        ); })}\n                    </select>\n                    <div className={classes.buttonsText}>OU</div>\n                    <input className={classes.createTheme} type=\"text\" id=\"new-theme\" placeholder=\"Saisissez un nouveau thème...\" />\n                    <Button onClick={handlePublication} className={classes.publish} >PUBLIER</Button>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n{/* <div \n    style={{ height: \"auto\", width: \"40ch\", border: \"dotted 1px black\", textAlign: \"center\" }} \n    onClick={() => imageUploader.current.click()  }\n>\n    Cliquez ici pour ajouter des images...\n    <img ref={uploadedImage} style={{ maxHeight: \"30ch\", maxWidth: \"40ch\", border: \"none\" }} />\n</div>\n<input \n    type=\"file\" \n    accept=\"image/*\" \n    multiple = \"true\" \n    ref={imageUploader} \n    style={{ display: \"none\" }}\n    onChange={handleImageUpload}\n/> */}\nexport default CreatePost;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/SearchBox.js",["104"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Likes.js",["105","106","107","108","109","110","111","112","113","114"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Comments.js",["115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":13},{"ruleId":"121","severity":1,"message":"125","line":8,"column":7,"nodeType":"123","messageId":"124","endLine":8,"endColumn":13},{"ruleId":"121","severity":1,"message":"126","line":53,"column":12,"nodeType":"123","messageId":"124","endLine":53,"endColumn":21},{"ruleId":"121","severity":1,"message":"127","line":53,"column":23,"nodeType":"123","messageId":"124","endLine":53,"endColumn":35},{"ruleId":"128","severity":1,"message":"129","line":63,"column":8,"nodeType":"130","endLine":63,"endColumn":10,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":76,"column":21,"nodeType":"134","endLine":76,"endColumn":92},{"ruleId":"121","severity":1,"message":"135","line":93,"column":12,"nodeType":"123","messageId":"124","endLine":93,"endColumn":20},{"ruleId":"121","severity":1,"message":"136","line":93,"column":22,"nodeType":"123","messageId":"124","endLine":93,"endColumn":33},{"ruleId":"137","severity":1,"message":"138","line":120,"column":121,"nodeType":"139","messageId":"140","endLine":120,"endColumn":123},{"ruleId":"128","severity":1,"message":"141","line":60,"column":24,"nodeType":"142","endLine":60,"endColumn":51},{"ruleId":"128","severity":1,"message":"143","line":61,"column":23,"nodeType":"144","endLine":61,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":75,"column":29,"nodeType":"134","endLine":75,"endColumn":100},{"ruleId":"145","severity":1,"message":"146","line":26,"column":13,"nodeType":"147","messageId":"140","endLine":26,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":72,"column":13,"nodeType":"147","messageId":"140","endLine":72,"endColumn":21},{"ruleId":"121","severity":1,"message":"148","line":142,"column":9,"nodeType":"123","messageId":"124","endLine":142,"endColumn":20},{"ruleId":"128","severity":1,"message":"141","line":163,"column":24,"nodeType":"142","endLine":163,"endColumn":51},{"ruleId":"128","severity":1,"message":"143","line":164,"column":23,"nodeType":"144","endLine":164,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":191,"column":21,"nodeType":"134","endLine":191,"endColumn":92},{"ruleId":"137","severity":1,"message":"138","line":206,"column":79,"nodeType":"139","messageId":"140","endLine":206,"endColumn":81},{"ruleId":"137","severity":1,"message":"138","line":206,"column":164,"nodeType":"139","messageId":"140","endLine":206,"endColumn":166},{"ruleId":"121","severity":1,"message":"149","line":102,"column":12,"nodeType":"123","messageId":"124","endLine":102,"endColumn":16},{"ruleId":"121","severity":1,"message":"150","line":102,"column":18,"nodeType":"123","messageId":"124","endLine":102,"endColumn":25},{"ruleId":"121","severity":1,"message":"151","line":133,"column":21,"nodeType":"123","messageId":"124","endLine":133,"endColumn":32},{"ruleId":"152","severity":1,"message":"153","line":133,"column":50,"nodeType":"154","messageId":"155","endLine":133,"endColumn":52},{"ruleId":"156","severity":1,"message":"157","line":195,"column":1,"nodeType":"158","messageId":"159","endLine":209,"endColumn":7},{"ruleId":"121","severity":1,"message":"160","line":13,"column":9,"nodeType":"123","messageId":"124","endLine":13,"endColumn":16},{"ruleId":"128","severity":1,"message":"161","line":59,"column":8,"nodeType":"130","endLine":59,"endColumn":10,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":62,"column":9,"nodeType":"165","messageId":"166","endLine":90,"endColumn":10},{"ruleId":"137","severity":1,"message":"138","line":64,"column":33,"nodeType":"139","messageId":"140","endLine":64,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":67,"column":40,"nodeType":"139","messageId":"140","endLine":67,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":73,"column":33,"nodeType":"139","messageId":"140","endLine":73,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":76,"column":40,"nodeType":"139","messageId":"140","endLine":76,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":82,"column":33,"nodeType":"139","messageId":"140","endLine":82,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":85,"column":40,"nodeType":"139","messageId":"140","endLine":85,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":95,"column":17,"nodeType":"139","messageId":"140","endLine":95,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":104,"column":25,"nodeType":"139","messageId":"140","endLine":104,"endColumn":27},{"ruleId":"145","severity":1,"message":"167","line":80,"column":9,"nodeType":"147","messageId":"140","endLine":80,"endColumn":20},{"ruleId":"128","severity":1,"message":"168","line":101,"column":8,"nodeType":"130","endLine":101,"endColumn":10,"suggestions":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'UrlAPI' is assigned a value but never used.","'userInfos' is assigned a value but never used.","'setUserInfos' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.profilePic.data'. Either include it or remove the dependency array.","ArrayExpression",["172"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'userList' is assigned a value but never used.","'setUserList' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assignments to the 'buff' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'src' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","'currentUser' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'pictureList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.id' and 'postId'. Either include them or remove the dependency array.",["173"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Duplicate key 'paddingLeft'.","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [currentUser.profilePic.data]",{"range":"181","text":"182"},"Update the dependencies array to be: [currentUser.id, postId]",{"range":"183","text":"184"},"Update the dependencies array to be: [postId]",{"range":"185","text":"186"},[1555,1557],"[currentUser.profilePic.data]",[1554,1556],"[currentUser.id, postId]",[2554,2556],"[postId]"]