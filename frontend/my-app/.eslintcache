[{"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js":"1","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js":"2","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js":"3","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js":"4","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js":"5","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js":"6","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js":"7","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js":"8","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js":"9","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js":"10","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js":"11","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js":"12","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js":"13","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/SearchBox.js":"14","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Likes.js":"15","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Comments.js":"16","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthHeader.js":"17","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js":"18"},{"size":573,"mtime":1610909539000,"results":"19","hashOfConfig":"20"},{"size":364,"mtime":1610909539000,"results":"21","hashOfConfig":"20"},{"size":5064,"mtime":1610909539000,"results":"22","hashOfConfig":"20"},{"size":983,"mtime":1611174234489,"results":"23","hashOfConfig":"20"},{"size":16032,"mtime":1611178381121,"results":"24","hashOfConfig":"20"},{"size":999,"mtime":1611163916380,"results":"25","hashOfConfig":"20"},{"size":2815,"mtime":1611071789625,"results":"26","hashOfConfig":"20"},{"size":979,"mtime":1610909539000,"results":"27","hashOfConfig":"20"},{"size":1015,"mtime":1610909539000,"results":"28","hashOfConfig":"20"},{"size":6049,"mtime":1611181984969,"results":"29","hashOfConfig":"20"},{"size":927,"mtime":1610966692871,"results":"30","hashOfConfig":"20"},{"size":9905,"mtime":1611179198349,"results":"31","hashOfConfig":"20"},{"size":11463,"mtime":1611071794171,"results":"32","hashOfConfig":"20"},{"size":883,"mtime":1610909539000,"results":"33","hashOfConfig":"20"},{"size":4570,"mtime":1611046523916,"results":"34","hashOfConfig":"20"},{"size":8526,"mtime":1611178901080,"results":"35","hashOfConfig":"20"},{"size":254,"mtime":1610909539000,"results":"36","hashOfConfig":"20"},{"size":4692,"mtime":1611183700982,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"713fjp",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js",[],["83","84"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js",["85","86","87","88","89","90","91","92","93"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { Button, IconButton, Input, InputLabel, InputAdornment, Link, FormControl, FormControlLabel, FormHelperText, Checkbox } from '@material-ui/core/';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport logo from '../../portalLogo.png';\n\nconst UrlAPI = 'http://localhost:3000/api/auth';\n\n// STYLE DU COMPOSANT :\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        height: '10ch',\n        marginTop: '23ch',\n    },\n    loginRoot: {\n        display: 'flex',\n        flexDirection : 'column',\n        alignItems: 'center',\n        backgroundColor: '#F1D4D4',\n        color: '#9C9D9C',\n        width: '50ch',\n        height: '30ch',\n        position: 'absolute',\n        top: 50,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        paddingTop: '5ch',\n    },\n    signupRoot: {\n        display: 'none',\n        flexDirection : 'column',\n        alignItems: 'center',\n        backgroundColor: '#F1D4D4',\n        color: '#9C9D9C',\n        width: '50ch',\n        height: '75ch',\n        position: 'absolute',\n        top: 180,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        paddingTop: '3ch',\n    },\n    formField: {\n        width: '30ch',\n        marginBottom: '2ch',\n        backgroundColor: '#F6F5F5',\n        borderRadius: '10px',\n    },\n    label: {\n        marginLeft: '15px',\n    },\n    icon: {\n        marginRight: '10px',\n    },\n    checkbox: {\n        backgroundColor: 'white',\n        width: '40ch',\n        borderRadius: '10px',\n        padding: '10px',\n        marginBottom: '3ch',\n        marginTop: '1ch',\n    },\n    loginButton: {\n        backgroundColor: '#D75030',\n        width: '25ch',\n        color: 'white',\n        marginBottom: '4ch',\n        position: 'relative',\n        top: '20px',\n        '&:hover': {\n            backgroundColor: '#BF5438'\n        },\n    },\n    signupButton: {\n        backgroundColor: '#D75030',\n        width: '25ch',\n        color: 'white',\n        marginBottom: '2ch',\n        position: 'relative',\n        top: '-8px',\n        '&:hover': {\n            backgroundColor: '#BF5438'\n        },\n    },\n    link: {\n        color: '#D75030',\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n}));\n\n// LOGIQUE DU COMPOSANT :\n\nconst AuthForm = () => {\n\n    let history = useHistory();\n    const classes = useStyles();\n\n    //On crée les constantes login, password, etc et on les initialise. Ce sont des strings vides au départ mais elles seront mises à jour avec setName().\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [hiringDate, setHiringDate] = useState(\"\");\n    let emailIsValid;\n    let passwordIsValid;\n    let firstnameIsValid;\n    let lastnameIsValid;\n    let statusIsValid;\n    let formIsValid = 0;\n\n    const showSignup = () => { \n        document.getElementById('loginError').style.display=\"none\";\n        document.getElementById(\"login-form\").style.display=\"none\";\n        document.getElementById(\"signup-form\").style.display=\"flex\"; \n        document.getElementById(\"logo\").style.marginTop=\"10ch\";\n    };\n\n    const showLogin = () => { \n        document.getElementById(\"login-form\").style.display=\"flex\";\n        document.getElementById(\"signup-form\").style.display=\"none\"; \n        document.getElementById(\"logo\").style.marginTop=\"23ch\";\n    }\n\n    const displaySuccessMessage = () => {\n        let signedUpMessage = document.getElementById('sign-up-ok');\n        signedUpMessage.style.cssText='display: block; width: 35%; margin: auto; position: relative; top: 30px; color: green; background-color: #D5EDD1; border: green 1px solid; border-radius: 5px; padding: 5px 0px 5px 0px;';\n    };\n\n    const emailValidation = () => {\n        let emailRegEx = /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/;\n        emailIsValid = emailRegEx.test(email);\n        if (emailIsValid == false) {\n            document.getElementById('emailError').style.display=\"block\";\n        } else formIsValid++;\n        return;\n    };\n\n    const textValidation = () => {\n        let textRegEx = /^[A-Za-z\\-_\\s]+$/;\n        let passwordRegEx = /^[\\w]+$/;\n        passwordIsValid = passwordRegEx.test(password);\n        firstnameIsValid = textRegEx.test(firstname);\n        lastnameIsValid = textRegEx.test(lastname);\n        statusIsValid = textRegEx.test(status);\n        if (passwordIsValid == false) { \n            document.getElementById('passwordError').style.display=\"block\"; \n        } else { \n            formIsValid++ \n        };\n        if (firstnameIsValid == false) { \n            document.getElementById('firstnameError').style.display=\"block\"; \n        } else { \n            formIsValid++ \n        };\n        if (lastnameIsValid == false) { \n            document.getElementById('lastnameError').style.display=\"block\"; \n        } else { \n            formIsValid++ \n        };\n        if (statusIsValid == false) { \n            document.getElementById('statusError').style.display=\"block\"; \n        } else { \n            formIsValid++ \n        };\n        return;\n    };\n\n    const handleLoginSubmit = (e) => {\n        //On place ici la logique à appliquer lorsque le user clique sur 'Se connecter'.\n        axios({\n            method: 'post',\n            url: UrlAPI + '/login',\n            data: { email : email, password: password}\n        })\n        //Si la connexion réussie, le backend nous renvoi un token et les infos du user connecté (que l'on stocke dans le session storage) et celui-ci accède à l'application.\n        .then(response => {\n            let user = response.data.user;\n            user.token = response.data.token;\n            sessionStorage.setItem(\"currentUser\", JSON.stringify(user));\n            history.push('/accueil');\n        })\n        //Si la connexion échoue, un message d'erreur s'affiche.\n        .catch(error => {\n            console.log(error);\n            let loginError = document.getElementById('loginError');\n            loginError.style.cssText='display: block; width: 35%; margin: auto; position: relative; top: 30px; color: red; background-color: #E7E3E3; border: red 1px solid; border-radius: 5px; padding: 5px 0px 5px 0px';\n        });\n    };\n    const handleSignupSubmit = async (e) => {\n        emailValidation();\n        textValidation();\n        /* if (formIsValid == 5) {\n            console.log('yayy');\n            return; */\n            //On envoi à l'API une requête POST contenant les infos du nouveau user pour qu'il soit ajouté en base.\n            await axios({\n                method: 'post',\n                url: UrlAPI + '/signup',\n                data: { email : email, password: password, firstname: firstname, lastname: lastname, status: status, hiringDate: hiringDate }\n            })\n            //Si l'inscription se passe bien, le user est renvoyée sur la page de login avec un message de succès et doit se connecter.\n            .then(response => {\n                console.log(response);\n                document.getElementById('loginError').style.display=\"none\";\n                setPassword(\"\");\n                showLogin();\n                displaySuccessMessage();\n            })\n            //Si non, un message d'erreur s'affiche et il n'est pas redirigé vers la page de login.\n            .catch(error => {\n                console.log(error);\n                document.getElementById(\"logo\").style.marginTop=\"7ch\";\n                document.getElementById('loginError').style.display=\"block\";\n            });\n        /* } else {console.log('form invalid...')}; */\n    }\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n            <div id=\"form-container\">\n                <p id=\"sign-up-ok\" style={{display: 'none'}}>Félicitations, vous êtes inscrit ! Connectez-vous pour accéder à Postmania.</p>\n                <p id=\"loginError\" style={{display: 'none', width: '35%', margin: 'auto', position: 'relative', top: '30px', color: '#FF0000', backgroundColor: '#FFC1C1', border: '#FF0000 1px solid', borderRadius: '5px', padding: '5px 0px 5px 0px' }} >La connexion a échouée, veuillez réessayer.</p>\n                <p id=\"signupError\" style={{display: 'none'}} >L'inscription a échouée, veuillez réessayer.</p>\n                <img src={ logo } alt='[ logo Postmania ]' className={classes.logo} id=\"logo\" />\n                <form id=\"login-form\" className={classes.loginRoot} noValidate autoComplete=\"off\">\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} value={email} htmlFor=\"standard-adornment-login\">Email</InputLabel>\n                        <Input  className={classes.label} id=\"login-email-field\" type=\"email\" endAdornment={\n                            <InputAdornment position=\"end\">\n                                <AccountCircle className={classes.icon} />\n                            </InputAdornment>\n                        } onChange={(e) => setEmail(e.target.value)}/>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-password\">Mot de passe</InputLabel>\n                        <Input className={classes.label} id=\"passwordInput\" value={password} type={showPassword ? 'text' : 'password'} endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton aria-label=\"toggle password visibility\" onClick={handleClickShowPassword} onMouseDown={handleMouseDownPassword}>\n                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        } onChange={(e) => setPassword(e.target.value)}/>\n                    </FormControl>\n                    <Button id=\"loginButton\" size=\"large\" className={classes.loginButton} onClick={handleLoginSubmit}>Se connecter</Button>\n                    <Link className={classes.link} href=\"#\" onClick={showSignup} >Vous n'avez pas encore de compte ? S'inscrire.</Link>\n                </form>\n                <form id=\"signup-form\" className={classes.signupRoot} noValidate autoComplete=\"off\">\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-login\">Email</InputLabel>\n                        <Input className={classes.label} id=\"signup-email-field\" value={email} type=\"email\" endAdornment={\n                            <InputAdornment position=\"end\">\n                                <AccountCircle className={classes.icon} />\n                            </InputAdornment>\n                        } \n                        onChange={(e) => setEmail(e.target.value)} />\n                        <p id=\"emailError\" style={{display: 'none', color: 'red', fontSize: '12px'}}>Veuillez saisir une adresse mail valide.</p>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-password\">Mot de passe</InputLabel>\n                        <Input className={classes.label} id=\"signup-password-field\" value={password} type={showPassword ? 'text' : 'password'} endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton aria-label=\"toggle password visibility\" onClick={handleClickShowPassword} onMouseDown={handleMouseDownPassword}>\n                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        } onChange={(e) => setPassword(e.target.value)}/>\n                        <p id=\"passwordError\" style={{display: 'none', color: 'red', fontSize: '12px'}}>Mot de passe invalide ( chiffres et lettres uniquement ).</p>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-firstname\">Prénom</InputLabel>\n                        <Input className={classes.label} id=\"firstname-field\" value={firstname} type=\"text\" onChange={(e) => setFirstname(e.target.value)}/>\n                        <p id=\"firstnameError\" style={{display: 'none', color: 'red', fontSize: '12px'}}>Saisie invalide (lettres, tirets et espaces uniquement).</p>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-lastname\">Nom</InputLabel>\n                        <Input className={classes.label} id=\"lastname-field\" value={lastname} type=\"text\" onChange={(e) => setLastname(e.target.value)}/>\n                        <p id=\"lastnameError\" style={{display: 'none', color: 'red', fontSize: '12px'}}>Saisie invalide (lettres, tirets et espaces uniquement).</p>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-status\">Statut</InputLabel>\n                        <Input className={classes.label} id=\"status-field\" value={status} type=\"text\" onChange={(e) => setStatus(e.target.value)}/>\n                        <FormHelperText className={classes.label} id=\"outlined-weight-helper-text\">Ex : Directeur commerciale.</FormHelperText>\n                        <p id=\"statusError\" style={{display: 'none', color: 'red', fontSize: '12px'}}>Saisie invalide (lettres, tirets et espaces uniquement).</p>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <Input className={classes.label} id=\"hiringDate-field\" value={hiringDate} type=\"date\" onChange={(e) => setHiringDate(e.target.value)}/>\n                        <FormHelperText className={classes.label} id=\"outlined-weight-helper-text\">Date d'embauche</FormHelperText>\n                        <p id=\"dateError\" style={{display: 'none', color: 'red', fontSize: '12px'}}>Veuillez saisir une date d'embauche valide.</p>\n                    </FormControl>\n                    {/* <FormControl className={ classes.checkbox}>\n                        <FormControlLabel required control={ \n                            <Checkbox name=\"RGPD\" color=\"default\" inputProps={{ 'aria-label': 'checkbox with default color' }} />\n                            } label=\"En cochant cette case, je reconnais avoir pris connaissance de la charte RGPD de CAP Formation et en accepte les termes.\"/>\n                    </FormControl> */}\n                    <Button size=\"large\" className={classes.signupButton} onClick={handleSignupSubmit}>S'inscrire</Button>\n                    <Link className={classes.link} href=\"/\" onClick={showLogin} >Vous avez déjà un compte ? Se connecter.</Link>\n                </form>\n            </div>\n    );\n};\n\nexport default AuthForm;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js",["94","95"],"import React, { useState, useEffect } from 'react';\nimport authHeader from '../components/AuthForm/AuthHeader';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport PageBodyContainer from '../components/PostAndTheme/PageBodyContainer';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\nconst Accueil = () => {\n\n  const [userList, setUserList] = useState(null);\n\n  const getUsers = async () => {\n    let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n    const response = await axios.get(UrlAPI + currentUser.id + '/users', { headers: authHeader() })\n        .then(result => result.data)\n        .then(data => setUserList(data))\n  }\n\n  useEffect ( () => {\n      if (!userList) getUsers();\n  }, []);\n\n    return (\n      <>\n        {userList && <Header userList={userList} />}\n        {userList && <PageBodyContainer userList={userList} />}\n        <Footer /> \n      </>\n    );\n};\n\nexport default Accueil;\n","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js",["96","97","98","99"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from '../../header-logo.png';\nimport SearchBox from \"./SearchBox\";\nimport { Avatar, Link } from '@material-ui/core';\nimport { Person } from '@material-ui/icons';\n\n// STYLE DU COMPOSANT :\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        position: 'fixed',\n        alignItems: 'center',\n        backgroundColor: '#F2D3D4',\n        height: '10ch',\n        width: '100%',\n        justifyContent: 'space-between',\n        paddingLeft: '30px',\n        paddingRight: '30px',\n        zIndex: '2',\n    },\n    logo: {\n        height: '6ch',\n    },\n    leftPart: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n    },\n    centerPart: {\n        width: '50ch',\n        justifyContent: 'center',\n    },\n    rightPart: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    avatar: {\n        cursor: 'pointer',\n        width: '5ch',\n        height: '5ch',\n        border: 'solid 3px #445760',\n    },\n    link: {\n        color: '#0E0C0C',\n        fontWeight: '500',\n        fontSize: '20px',\n        marginLeft: '15px',\n    },\n}));\n\n// LOGIQUE DU COMPOSANT :\nconst Header = (props) => {\n\n    const [userInfos, setUserInfos] = useState(null);\n    const [image, setImage] = useState(\"\");\n    const classes = useStyles();\n\n    let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n    \n   useEffect ( () => {\n        if (currentUser && currentUser.profilePic) {\n            let buff = currentUser.profilePic.data;\n            let src = Buffer.from(buff).toString();\n            setImage(src);\n        }\n    }, []);\n\n    const handleLogout = () => {\n        sessionStorage.removeItem(\"currentUser\");\n    };\n\n    return (\n    <>\n        <div id=\"header-container\" className={ classes.root } >\n            <div id=\"left-part\" className={ classes.leftPart } >\n                <Link href='/accueil'><img src={ logo } alt='[ logo Postmania ]' className={classes.logo} id=\"logo\" /></Link>\n            </div>\n            <div id=\"center-part\" className={ classes.centerPart } >\n                <SearchBox userList={props.userList} className={classes.centerPart} />\n            </div>\n            <div id=\"right-part\" className={ classes.rightPart } >\n                <Avatar id=\"profile-picture\" className={ classes.avatar }  alt=\"[ votre photo de profile ]\">\n                    {!image && <Person style={{fontSize: 40}} id=\"avatar\"/>}\n                    {image && <img id=\"image\" src={image} style={{ width: '60px', height: '60px'}} />}\n                </Avatar>\n                <Link className={classes.link} href=\"/\" onClick={handleLogout} >Se déconnecter</Link>\n            </div>\n        </div>\n    </>\n    );\n};\n\nexport default Header;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js",["100","101"],"import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport ProfilePageBodyContainer from '../components/PostAndTheme/ProfilePageBodyContainer';\nimport axios from 'axios';\nimport authHeader from '../components/AuthForm/AuthHeader';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\nconst Profile = () => {\n  const [userList, setUserList] = useState(null);\n  let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  const getUsers = async () => {\n    const response = await axios.get(UrlAPI + currentUser.id + '/users', { headers: authHeader() })\n        .then(result => result.data)\n        .then(data => setUserList(data))\n  }\n\n  useEffect ( () => {\n      if (!userList) getUsers();\n  }, []);\n\n    return (\n      <>\n        {userList && <Header userList={userList} />}\n        {userList && <ProfilePageBodyContainer userList={userList} />}\n        <Footer /> \n      </>\n    );\n};\nexport default Profile;\n","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js",["102","103","104","105","106","107","108","109","110","111"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js",["112","113","114","115","116","117","118","119","120","121","122"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js",["123","124","125","126","127","128","129","130","131","132","133","134"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport ImageUploader from 'react-images-upload';\nimport authHeader from '../AuthForm/AuthHeader';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    createPostBlock: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '70%',\n            margin: 'auto',  \n            marginTop: '4ch',\n            marginBottom: '8ch',\n        },\n        createPostHeader: {\n            backgroundColor: '#D75030',\n            color: 'white',\n            width: '20%',\n            padding: '0.5ch',\n            textAlign: 'center',\n            fontSize: '12px',\n        },\n        createPostBody: {\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: '#F2D3D4',\n            padding: '2ch',\n            width: '100%',\n            margin: 'auto',\n        },\n        createPostBodyContent: {\n            backgroundColor: '#FFFFFE',\n            width: '95%',\n            margin: 'auto',\n            padding: '2ch',\n            textAlign: 'left',\n        },  \n        postTextarea: {\n            width: '100%',\n            height: 'auto',\n            fontFamily: 'Avenir, Segoe, UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n            border: 'none',\n            \"&:focus\": {\n                outline: 'none',\n            },\n        },\n        buttons: {\n            display: 'flex',\n            width: '95%',\n            height: '3.5ch',\n            margin: 'auto',\n            marginTop: '2ch',\n            justifyContent: 'space-between',\n        },\n        buttonsText: {\n            color: '#D75030',\n            fontWeight: '600',\n            fontSize: '14px',   \n            marginRight: '1ch',\n            marginTop: '0.5ch',\n        },\n        dropDownList: {\n            width: '30%',\n            backgroundColor: '#D75030',\n            borderStyle: 'none',\n            color: '#FFFFFE',\n            paddingLeft: '1ch',\n            marginRight: '1ch',\n            fontSize: '14px',   \n            cursor: 'pointer',\n        },\n        createTheme: {\n            color: '#686A6C',\n            width: '35%',\n            fontSize: '14px',   \n            borderStyle: 'none',\n            paddingLeft: '1ch',\n        },\n        publish: {\n            backgroundColor: '#D75030',\n            color: '#FFFFFE',\n            borderRadius: '5px',\n            width: '15%',\n            fontWeight: '400',\n            \"&:hover\": {\n                backgroundColor: '#B85030',\n            },\n        },\n        errorMessages: {\n            display: 'none',\n            width: '100%',\n            marginTop: '0.5ch',\n            color: '#D7502F',\n            fontWeight: '500',\n            textAlign: 'right',\n        },\n}));\n\n// LOGIQUE :\n\nconst CreatePost = props => {\n\n    const classes = useStyles();\n    const [content, setContent] = useState('');\n    const [newTheme, setNewTheme] = useState('');\n    const [user, setUser] = useState('');\n    const [theme, setTheme] = useState('');\n    const [pictures, setPictures] = useState([]);\n\n    const currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    const handleChange = (event) => {\n        setTheme(event.target.value);\n    };\n\n    const handleContent = (event) => {\n        setContent(event.target.value);\n    };\n\n    const handleNewTheme = (event) => {\n        setNewTheme(event.target.value);\n    };\n    \n    //Gestion d'import d'image(s) lors de la création d'un post.\n    const onDrop = picture => {\n        setPictures(picture);\n    };\n\n    const handlePublication = () => {\n            if(theme != '' && newTheme != '') {\n                let errorBlock = document.getElementById('errorMessages');\n                let errorMessage = document.getElementById('error1');\n                let errorMessage2 = document.getElementById('error2');\n                errorBlock.style.cssText='display: block;';\n                errorMessage.style.cssText='display: block;';\n                errorMessage2.style.cssText='display: none;';\n            } else if (theme != '' && newTheme == '') {\n                axios({\n                    method: 'post',\n                    url: UrlAPI + currentUser.id + '/posts',\n                    data: { content : content, theme: theme, user: currentUser.id },\n                    headers: authHeader(),\n                })\n                .then(function (response) {\n                    //On traite la suite une fois la réponse obtenue \n                    let postId = response.data.id;\n                    if (pictures.length >0) {\n                        const fd = new FormData();\n                        let pictureList = [];\n                        pictureList = pictures.map(p => {\n                            fd.append('image', p);\n                        });                    \n                        const config = {\n                            headers: {\n                                'Content-Type' : 'multipart/form-data',\n                                'x-access-token': currentUser.token,\n                                'Authorization': 'Bearer ' + currentUser.token,\n                            }\n                        }\n                        axios.post(UrlAPI + currentUser.id + '/posts/' + postId + '/images', fd, config)\n                        .then(function (response) {\n                            console.log('image:', response);\n                            window.location.reload(false);\n                        })\n                        .catch(function (error) {\n                            //On traite ici les erreurs éventuellement survenues\n                            console.log(error);\n                        });\n                    }\n                    else window.location.reload(false);\n                })\n                .catch(function (error) {\n                    //On traite ici les erreurs éventuellement survenues\n                    console.log(error);\n                });\n            } else if (theme == '' && newTheme != '') {\n                axios({\n                    method: 'post',\n                    url: UrlAPI + currentUser.id + '/themes',\n                    data: { user : currentUser.id, name: newTheme },\n                    headers: authHeader(),\n                })\n                .then(res => {\n                    axios({\n                        method: 'post',\n                        url: UrlAPI + currentUser.id + '/posts',\n                        data: { content : content, theme: res.data.id, user: currentUser.id },\n                        headers: authHeader(),\n                    })\n                    .then(function (response) {\n                        //On traite la suite une fois la réponse obtenue \n                        let postId = response.data.id;\n                        if (pictures.length >0) {\n                            const fd = new FormData();\n                            let pictureList = [];\n                            pictureList = pictures.map(p => {\n                                fd.append('image', p);\n                            });                    \n                            const config = {\n                                headers: {\n                                    'Content-Type' : 'multipart/form-data',\n                                    'x-access-token': currentUser.token,\n                                    'Authorization': 'Bearer ' + currentUser.token,\n                                }\n                            }\n                            axios.post(UrlAPI + currentUser.id + '/posts/' + postId + '/images', fd, config)\n                            .then(function (response) {\n                                console.log('image:', response);\n                                window.location.reload(false);\n                            })\n                            .catch(function (error) {\n                                //On traite ici les erreurs éventuellement survenues\n                                console.log(error);\n                            });\n                        }\n                        else window.location.reload(false);\n                    })\n                    .catch(function (error) {\n                        //On traite ici les erreurs éventuellement survenues\n                        console.log(error);\n                    });\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n            }\n            else {\n                let errorBlock = document.getElementById('errorMessages');\n                let errorMessage = document.getElementById('error1');\n                let errorMessage2 = document.getElementById('error2');\n                errorBlock.style.cssText='display: block;';\n                errorMessage2.style.cssText='display: block;';\n                errorMessage.style.cssText='display: none;';\n            }\n            \n        };\n\n    return(\n        <div className= { classes.createPostBlock }>\n            <div className={classes.createPostHeader}>\n                <h2>PUBLIER UN POST</h2>\n            </div>\n            <div className={classes.createPostBody} >\n                <div className={classes.createPostBodyContent} >\n                    <textarea className={classes.postTextarea} placeholder=\"Ecrivez le contenu de votre post ici...\" value={content} onChange={handleContent}/>\n                    <ImageUploader\n                        withIcon={false}\n                        buttonText='Ajoutez des images'\n                        onChange={onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                        withLabel={false}\n                        fileSizeError='Image trop volumineuse'\n                        buttonStyles={{backgroundColor: '#757575', borderRadius: '5px', position: \"relative\", margin: \"0\", height: '30px'}}\n                    />\n                </div>\n                <div className={classes.buttons}>\n                    <select className={classes.dropDownList} value={theme} placeholder=\"Choisissez un thème\" onChange={handleChange}>\n                        <option value=\"\" defaultValue data-default>Choisissez un thème</option>\n                        {props.themes && props.themes.map((theme) => { \n                        return (\n                            <option key={theme.id} value={theme.id}>{theme.name}</option>\n                        ); })}\n                    </select>\n                    <div className={classes.buttonsText}>OU</div>\n                    <input className={classes.createTheme} type=\"text\" onChange={handleNewTheme} value={newTheme} id=\"new-theme\" placeholder=\"Créez un nouveau thème...\" />\n                    <Button onClick={handlePublication} className={classes.publish} >PUBLIER</Button>\n                </div>\n            </div>\n            <div id=\"errorMessages\" className={classes.errorMessages} >\n                    <p id=\"error1\" style={{display: 'none'}} >Veuillez ne renseigner qu'un seul thème.</p>\n                    <p id=\"error2\" style={{display: 'none'}} >Veuillez renseigner un thème.</p>\n            </div>\n        </div>\n    );\n\n};\n\nexport default CreatePost;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/SearchBox.js",["135","136"],"import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useHistory } from 'react-router-dom';\n\nexport default function SearchBox(props) {\n\n  const [value, setValue] = useState(null);\n  const history = useHistory();\n\n  return (\n    <Autocomplete\n      id=\"search-box\"\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n        if (newValue) window.location.pathname = \"/profile/\" + newValue.id; \n      }}\n      options={props.userList}\n      clearOnEscape\n      getOptionLabel={(option) => option.firstname + ' ' + option.lastname}\n      style={{ width: 300, backgroundColor: 'white', outline: 'none', }}\n      renderInput={(params) => <TextField {...params} label=\"Rechercher un collègue...\" variant=\"outlined\" />}\n    />\n  );\n}\n\n","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Likes.js",["137","138","139","140","141","142","143","144","145","146"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport authHeader from '../AuthForm/AuthHeader';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    mentionsBlock: {\n        display: 'flex',\n    },\n    mentionButton: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        backgroundColor: '#D64F30',\n        color: 'white',\n        height: '5ch',\n        width: '10%',\n        borderRadius: '5px',\n        marginRight: '1ch',\n        marginTop: '1ch',\n        paddingLeft: '2ch',\n        paddingRight: '2ch',\n        \"&:hover\": {\n            cursor: 'pointer',\n            backgroundColor: '#FF5F39',\n        },\n    },\n    mentionNumber: {\n        fontWeight: '800',\n        fontSize: '16px',\n    },\n}));\n\n// LOGIQUE :\n\nconst Likes = ({postId}) => {\n\n    const classes = useStyles();\n\n    const [mentions, setMentions] = useState({});\n    const [myMention, setMyMention] = useState(0);\n\n    let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    useEffect ( () => {\n        axios.get(UrlAPI + currentUser.id + '/mentions/' + postId, { headers: authHeader() })\n        .then(res => { setMentions(res.data); })\n        .catch(err => console.log(err));\n\n        axios.get(UrlAPI + currentUser.id + '/mentions/mine/' + postId + '/' + currentUser.id, { headers: authHeader() })\n        .then(result => result.data)\n        .then(data => setMyMention(data.mention) );\n\n    }, []);\n\n    const updateMyMention = (likedislike) => {\n        switch(myMention) {\n            case 0 :\n                if (likedislike == 1) {\n                    setMyMention(1);\n                    setMentions({ likes: mentions.likes+1, dislikes: mentions.dislikes });\n                } else if (likedislike == -1) {\n                    setMyMention(-1);\n                    setMentions({ likes: mentions.likes, dislikes: mentions.dislikes+1 });\n                }\n                break;\n            case 1 :\n                if (likedislike == 1) {\n                    setMyMention(0);\n                    setMentions({ likes: mentions.likes-1, dislikes: mentions.dislikes });\n                } else if (likedislike == -1) {\n                    setMyMention(-1);\n                    setMentions({ likes: mentions.likes-1, dislikes: mentions.dislikes+1 });\n                }\n                break;\n            case -1 :\n                if (likedislike == 1) {\n                    setMyMention(1);\n                    setMentions({ likes: mentions.likes+1, dislikes: mentions.dislikes-1 });\n                } else if (likedislike == -1) {\n                    setMyMention(0);\n                    setMentions({ likes: mentions.likes, dislikes: mentions.dislikes-1 });\n                }\n                break;\n        }\n    };\n\n    const handleLike = (e) => {\n        let name = e.target.getAttribute('name');\n        if(name == 'like') {\n            updateMyMention(1);\n            axios({\n                method: 'post',\n                url: UrlAPI + currentUser.id + '/mentions/' + postId,\n                data: {user: currentUser.id, post: postId, mention: 1},\n                headers: authHeader(),\n            })\n            .then(result => result.data)\n            .catch(err => console.log(err));\n        } else if( name == 'dislike') {\n            updateMyMention(-1);\n            axios({\n                method: 'post',\n                url: UrlAPI + currentUser.id + '/mentions/' + postId,\n                data: {user: currentUser.id, post: postId, mention: -1},\n                headers: authHeader(),\n            })\n            .then(result => result.data)\n            .catch(err => console.log(err));\n        } else {\n            return;\n        }\n    };\n    \n    return(\n        <>\n            <div className={classes.mentionsBlock}>\n                <div className={classes.mentionButton} name='like' onClick={handleLike}>\n                    <ThumbUpIcon />\n                    <span className={classes.mentionNumber}>{mentions.likes}</span>\n                </div>\n                <div className={classes.mentionButton} name='dislike' onClick={handleLike}>\n                    <ThumbDownIcon />\n                    <span className={classes.mentionNumber}>{mentions.dislikes}</span>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Likes;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Comments.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Avatar, Button, Link } from '@material-ui/core';\nimport { Person } from '@material-ui/icons';\nimport moment from 'moment';\nimport authHeader from '../AuthForm/AuthHeader';\n\nconst UrlAPI = \"http://localhost:3000/api/\";\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        backgroundColor: '#E9E9E9',\n        marginTop: '1ch',\n        padding: '1ch',\n    },\n    input: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    inputText: {\n        width: '90%',\n        height: '4.5ch',\n        marginRight: '1ch',\n        border: 'solid 2px #555555',\n        padding: '0.5ch',\n        color: '#555555',\n        fontWeight: '500',\n        fontFamily: 'Avenir, Segoe, UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n    },\n    button: {\n        backgroundColor: '#555555',\n        color: 'white',\n        textTransform: 'lowercase',\n        height: '4.5ch',\n        width: '10%',\n\n    },\n    firstLetter: {\n        textTransform: 'capitalize',\n    },\n    comments: {\n        backgroundColor: 'white',\n        width: '100%',\n        marginTop: '1ch',\n        padding: '1ch',\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        width: '20%',\n        height: '6ch',\n        border: 'solid 1px black',\n    },\n    headerPic: {},\n    avatar: {\n        border: 'solid 3px #E3431D',\n    },\n    headerText: {\n        height: '',\n    },\n    headerName: {\n        color: '#E3431D',\n        fontWeight: '600',\n        fontSize: '17px',\n    },\n    headerDate: {\n        fontSize: '10px',\n    },\n    content: {\n        width: '100%',\n        height: '2ch',\n        maxHeight: '8ch',\n        textAlign: 'left',\n        paddingLeft: '1ch',\n        paddingRight: '1ch',\n        paddingBottom: '0ch',\n        position: 'relative',\n        bottom: '10px',\n    },\n    seeMoreButton: {\n        backgroundColor: '#555555',\n        color: 'white',\n        textTransform: 'lowercase',\n        height: '4ch',\n        alignSelf: 'flex-end',\n        marginTop: '1ch',\n    },\n}));\n\n// LOGIQUE :\n\nconst Comments = ({postId}) => {\n\n    let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    const classes = useStyles();\n\n    const [commentsList, setCommentsList] = useState([]);\n    const [commentContent, setCommentContent] = useState(\"\");\n    const [userList, setUserList] = useState(null);\n    const [moreComments, setMoreComments] = useState(false);\n\n    let buttonText = moreComments ? 'Masquer les commentaires' : 'Voir plus de commentaires';\n\n    const getUsers = async () => {\n        const response = await axios.get(UrlAPI + currentUser.id + '/users', { headers: authHeader() })\n        .then(result => result.data)\n        .then(data => setUserList(data))\n    }\n\n    useEffect ( () => {\n        if (!userList) getUsers();\n        axios.get(UrlAPI + currentUser.id + '/comments/' + postId, { headers: authHeader() })\n        .then(res => setCommentsList(res.data))\n        .catch(err => console.log(err));\n    }, []);\n\n    const setCommentText = (e) => {\n        setCommentContent(e.target.value);\n    };\n\n    const handleComment = () => {\n        axios({\n                method: 'post',\n                url: UrlAPI + currentUser.id + '/comments/' + postId,\n                data: {user: currentUser.id, post: postId, content: commentContent},\n                headers: authHeader(),\n            })\n            .then(res => setCommentsList([res.data, ...commentsList]))\n            .catch(err => console.log(err));\n        setCommentContent(\"\");\n        return;\n    };\n\n    return(\n        <div className={classes.root}>\n            <div className={classes.input}>\n                <textarea className={classes.inputText} value={commentContent} onChange={setCommentText} type=\"text\" placeholder=\"Rédigez un commentaire...\"/>\n                <Button onClick={handleComment} className={classes.button} ><span className={classes.firstLetter}>C</span>ommenter</Button>\n            </div>\n            {userList && commentsList && commentsList.map( (comment,i ) => {\n                if ((i < 1 && moreComments == false) || (moreComments == true)) {\n                    return (\n                        <div key={comment.id} className={classes.comments}>\n                            {userList.filter(author => (comment.user == author.id)).map(author => {\n                            let src=\"\";\n                            if (author.profilePic) {\n                                let buff = author.profilePic.data;\n                                src = Buffer.from(buff).toString();\n                            }\n                            return (\n                            <React.Fragment key={comment.id} >\n                                <Link className={classes.header}>\n                                    <div className={classes.headerPic} >\n                                        <Avatar className={classes.avatar} >\n                                            {src==\"\" && <Person style={{fontSize: 40}} id=\"avatar\"/>}\n                                            {src!=\"\" && <img id=\"image\" src={src} style={{ width: '40px', height: '40px'}} />}\n                                        </Avatar>\n                                    </div>\n                                    <div className={classes.headerText} >\n                                        <p className={classes.headerName}>{author.firstname + \" \" + author.lastname}</p>\n                                        <p className={classes.headerDate}>Posté le {moment(comment.createdAt).format(\"DD/MM/YYYY\")} à {moment(comment.createdAt).format(\"HH:m\")} </p>\n                                    </div>\n                                </Link>\n                                <div className={classes.content}>\n                                    <p className={classes.contentText}>{comment.content}</p>\n                                </div>\n                            </React.Fragment>\n                            ); }) }\n                        </div>\n                    )\n                }\n                else if (moreComments == true) {\n                    return (\n                        <div key={comment.id} className={classes.comments}>\n                            {userList.filter(author => (comment.user == author.id)).map(author => {\n                            let src=\"\";\n                            if (author.profilePic) {\n                                let buff = author.profilePic.data;\n                                src = Buffer.from(buff).toString();\n                            }\n                            return (\n                            <React.Fragment key={comment.id} >\n                                <Link className={classes.header}>\n                                    <div className={classes.headerPic} >\n                                        <Avatar className={classes.avatar} >\n                                            {src==\"\" && <Person style={{fontSize: 40}} id=\"avatar\"/>}\n                                            {src!=\"\" && <img id=\"image\" src={src} style={{ width: '40px', height: '40px'}} />}\n                                        </Avatar>\n                                    </div>\n                                    <div className={classes.headerText} >\n                                        <p className={classes.headerName}>{author.firstname + \" \" + author.lastname}</p>\n                                        <p className={classes.headerDate}>Posté le {moment(comment.createdAt).format(\"DD/MM/YYYY\")} à {moment(comment.createdAt).format(\"HH:m\")} </p>\n                                    </div>\n                                </Link>\n                                <div className={classes.content}>\n                                    <p className={classes.contentText}>{comment.content}</p>\n                                </div>\n                            </React.Fragment>\n                            ); }) }\n                        </div>\n                    )\n                } else return;\n            })}\n            <Button className={classes.seeMoreButton} onClick={() => setMoreComments(!moreComments)}>{buttonText}</Button>\n        </div>\n    )\n};\n\nexport default Comments;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthHeader.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js",["161","162","163","164"],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"173","line":4,"column":84,"nodeType":"171","messageId":"172","endLine":4,"endColumn":100},{"ruleId":"169","severity":1,"message":"174","line":4,"column":118,"nodeType":"171","messageId":"172","endLine":4,"endColumn":126},{"ruleId":"175","severity":1,"message":"176","line":146,"column":26,"nodeType":"177","messageId":"178","endLine":146,"endColumn":28},{"ruleId":"175","severity":1,"message":"176","line":159,"column":29,"nodeType":"177","messageId":"178","endLine":159,"endColumn":31},{"ruleId":"175","severity":1,"message":"176","line":164,"column":30,"nodeType":"177","messageId":"178","endLine":164,"endColumn":32},{"ruleId":"175","severity":1,"message":"176","line":169,"column":29,"nodeType":"177","messageId":"178","endLine":169,"endColumn":31},{"ruleId":"175","severity":1,"message":"176","line":174,"column":27,"nodeType":"177","messageId":"178","endLine":174,"endColumn":29},{"ruleId":"169","severity":1,"message":"179","line":177,"column":13,"nodeType":"171","messageId":"172","endLine":177,"endColumn":24},{"ruleId":"169","severity":1,"message":"180","line":16,"column":11,"nodeType":"171","messageId":"172","endLine":16,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":23,"column":6,"nodeType":"183","endLine":23,"endColumn":8,"suggestions":"184"},{"ruleId":"169","severity":1,"message":"185","line":54,"column":12,"nodeType":"171","messageId":"172","endLine":54,"endColumn":21},{"ruleId":"169","severity":1,"message":"186","line":54,"column":23,"nodeType":"171","messageId":"172","endLine":54,"endColumn":35},{"ruleId":"181","severity":1,"message":"187","line":66,"column":8,"nodeType":"183","endLine":66,"endColumn":10,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":84,"column":31,"nodeType":"191","endLine":84,"endColumn":102},{"ruleId":"169","severity":1,"message":"180","line":14,"column":11,"nodeType":"171","messageId":"172","endLine":14,"endColumn":19},{"ruleId":"181","severity":1,"message":"192","line":21,"column":6,"nodeType":"183","endLine":21,"endColumn":8,"suggestions":"193"},{"ruleId":"169","severity":1,"message":"194","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":22},{"ruleId":"169","severity":1,"message":"195","line":94,"column":12,"nodeType":"171","messageId":"172","endLine":94,"endColumn":19},{"ruleId":"169","severity":1,"message":"196","line":94,"column":21,"nodeType":"171","messageId":"172","endLine":94,"endColumn":31},{"ruleId":"169","severity":1,"message":"197","line":95,"column":12,"nodeType":"171","messageId":"172","endLine":95,"endColumn":16},{"ruleId":"169","severity":1,"message":"198","line":95,"column":18,"nodeType":"171","messageId":"172","endLine":95,"endColumn":25},{"ruleId":"169","severity":1,"message":"199","line":101,"column":9,"nodeType":"171","messageId":"172","endLine":101,"endColumn":23},{"ruleId":"175","severity":1,"message":"176","line":104,"column":46,"nodeType":"177","messageId":"178","endLine":104,"endColumn":48},{"ruleId":"181","severity":1,"message":"200","line":119,"column":8,"nodeType":"183","endLine":119,"endColumn":10,"suggestions":"201"},{"ruleId":"181","severity":1,"message":"202","line":126,"column":8,"nodeType":"183","endLine":126,"endColumn":10,"suggestions":"203"},{"ruleId":"175","severity":1,"message":"176","line":137,"column":121,"nodeType":"177","messageId":"178","endLine":137,"endColumn":123},{"ruleId":"204","severity":1,"message":"205","line":88,"column":13,"nodeType":"206","messageId":"178","endLine":88,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":163,"column":46,"nodeType":"177","messageId":"178","endLine":163,"endColumn":48},{"ruleId":"181","severity":1,"message":"200","line":178,"column":8,"nodeType":"183","endLine":178,"endColumn":10,"suggestions":"207"},{"ruleId":"181","severity":1,"message":"202","line":185,"column":8,"nodeType":"183","endLine":185,"endColumn":10,"suggestions":"208"},{"ruleId":"181","severity":1,"message":"209","line":192,"column":24,"nodeType":"210","endLine":192,"endColumn":51},{"ruleId":"181","severity":1,"message":"211","line":193,"column":23,"nodeType":"212","endLine":193,"endColumn":51},{"ruleId":"189","severity":1,"message":"190","line":220,"column":31,"nodeType":"191","endLine":220,"endColumn":157},{"ruleId":"175","severity":1,"message":"176","line":222,"column":46,"nodeType":"177","messageId":"178","endLine":222,"endColumn":48},{"ruleId":"175","severity":1,"message":"176","line":222,"column":88,"nodeType":"177","messageId":"178","endLine":222,"endColumn":90},{"ruleId":"175","severity":1,"message":"176","line":237,"column":79,"nodeType":"177","messageId":"178","endLine":237,"endColumn":81},{"ruleId":"175","severity":1,"message":"176","line":237,"column":164,"nodeType":"177","messageId":"178","endLine":237,"endColumn":166},{"ruleId":"169","severity":1,"message":"213","line":112,"column":12,"nodeType":"171","messageId":"172","endLine":112,"endColumn":16},{"ruleId":"169","severity":1,"message":"214","line":112,"column":18,"nodeType":"171","messageId":"172","endLine":112,"endColumn":25},{"ruleId":"175","severity":1,"message":"215","line":136,"column":22,"nodeType":"177","messageId":"178","endLine":136,"endColumn":24},{"ruleId":"175","severity":1,"message":"215","line":136,"column":40,"nodeType":"177","messageId":"178","endLine":136,"endColumn":42},{"ruleId":"175","severity":1,"message":"215","line":143,"column":30,"nodeType":"177","messageId":"178","endLine":143,"endColumn":32},{"ruleId":"175","severity":1,"message":"176","line":143,"column":48,"nodeType":"177","messageId":"178","endLine":143,"endColumn":50},{"ruleId":"169","severity":1,"message":"216","line":156,"column":25,"nodeType":"171","messageId":"172","endLine":156,"endColumn":36},{"ruleId":"217","severity":1,"message":"218","line":156,"column":54,"nodeType":"219","messageId":"220","endLine":156,"endColumn":56},{"ruleId":"175","severity":1,"message":"176","line":182,"column":30,"nodeType":"177","messageId":"178","endLine":182,"endColumn":32},{"ruleId":"175","severity":1,"message":"215","line":182,"column":48,"nodeType":"177","messageId":"178","endLine":182,"endColumn":50},{"ruleId":"169","severity":1,"message":"216","line":202,"column":29,"nodeType":"171","messageId":"172","endLine":202,"endColumn":40},{"ruleId":"217","severity":1,"message":"218","line":202,"column":58,"nodeType":"219","messageId":"220","endLine":202,"endColumn":60},{"ruleId":"169","severity":1,"message":"170","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"221","line":9,"column":9,"nodeType":"171","messageId":"172","endLine":9,"endColumn":16},{"ruleId":"181","severity":1,"message":"222","line":60,"column":8,"nodeType":"183","endLine":60,"endColumn":10,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":63,"column":9,"nodeType":"226","messageId":"227","endLine":91,"endColumn":10},{"ruleId":"175","severity":1,"message":"176","line":65,"column":33,"nodeType":"177","messageId":"178","endLine":65,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":68,"column":40,"nodeType":"177","messageId":"178","endLine":68,"endColumn":42},{"ruleId":"175","severity":1,"message":"176","line":74,"column":33,"nodeType":"177","messageId":"178","endLine":74,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":77,"column":40,"nodeType":"177","messageId":"178","endLine":77,"endColumn":42},{"ruleId":"175","severity":1,"message":"176","line":83,"column":33,"nodeType":"177","messageId":"178","endLine":83,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":86,"column":40,"nodeType":"177","messageId":"178","endLine":86,"endColumn":42},{"ruleId":"175","severity":1,"message":"176","line":96,"column":17,"nodeType":"177","messageId":"178","endLine":96,"endColumn":19},{"ruleId":"175","severity":1,"message":"176","line":106,"column":25,"nodeType":"177","messageId":"178","endLine":106,"endColumn":27},{"ruleId":"169","severity":1,"message":"180","line":114,"column":15,"nodeType":"171","messageId":"172","endLine":114,"endColumn":23},{"ruleId":"181","severity":1,"message":"228","line":124,"column":8,"nodeType":"183","endLine":124,"endColumn":10,"suggestions":"229"},{"ruleId":"175","severity":1,"message":"176","line":150,"column":44,"nodeType":"177","messageId":"178","endLine":150,"endColumn":46},{"ruleId":"175","severity":1,"message":"176","line":150,"column":71,"nodeType":"177","messageId":"178","endLine":150,"endColumn":73},{"ruleId":"175","severity":1,"message":"176","line":153,"column":70,"nodeType":"177","messageId":"178","endLine":153,"endColumn":72},{"ruleId":"175","severity":1,"message":"176","line":164,"column":49,"nodeType":"177","messageId":"178","endLine":164,"endColumn":51},{"ruleId":"175","severity":1,"message":"215","line":165,"column":49,"nodeType":"177","messageId":"178","endLine":165,"endColumn":51},{"ruleId":"189","severity":1,"message":"190","line":165,"column":57,"nodeType":"191","endLine":165,"endColumn":126},{"ruleId":"175","severity":1,"message":"176","line":181,"column":39,"nodeType":"177","messageId":"178","endLine":181,"endColumn":41},{"ruleId":"175","severity":1,"message":"176","line":184,"column":70,"nodeType":"177","messageId":"178","endLine":184,"endColumn":72},{"ruleId":"175","severity":1,"message":"176","line":195,"column":49,"nodeType":"177","messageId":"178","endLine":195,"endColumn":51},{"ruleId":"175","severity":1,"message":"215","line":196,"column":49,"nodeType":"177","messageId":"178","endLine":196,"endColumn":51},{"ruleId":"189","severity":1,"message":"190","line":196,"column":57,"nodeType":"191","endLine":196,"endColumn":126},{"ruleId":"217","severity":1,"message":"218","line":211,"column":24,"nodeType":"230","messageId":"231","endLine":211,"endColumn":31},{"ruleId":"181","severity":1,"message":"209","line":117,"column":24,"nodeType":"210","endLine":117,"endColumn":51},{"ruleId":"181","severity":1,"message":"211","line":118,"column":23,"nodeType":"212","endLine":118,"endColumn":51},{"ruleId":"175","severity":1,"message":"176","line":122,"column":50,"nodeType":"177","messageId":"178","endLine":122,"endColumn":52},{"ruleId":"189","severity":1,"message":"190","line":135,"column":31,"nodeType":"191","endLine":135,"endColumn":102},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'formIsValid' is assigned a value but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userList'. Either include it or remove the dependency array.","ArrayExpression",["234"],"'userInfos' is assigned a value but never used.","'setUserInfos' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["235"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getUsers' and 'userList'. Either include them or remove the dependency array.",["236"],"'InfiniteScroll' is defined but never used.","'hasMore' is assigned a value but never used.","'setHasMore' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'postListLength' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.id', 'getUser', and 'users'. Either include them or remove the dependency array.",["237"],"React Hook useEffect has a missing dependency: 'currentUser.id'. Either include it or remove the dependency array.",["238"],"no-dupe-keys","Duplicate key 'position'.","ObjectExpression",["239"],["240"],"Assignments to the 'buff' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'src' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'pictureList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.id' and 'postId'. Either include them or remove the dependency array.",["241"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'currentUser.id', 'getUsers', 'postId', and 'userList'. Either include them or remove the dependency array.",["242"],"ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"249","fix":"253"},{"desc":"251","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [userList]",{"range":"259","text":"260"},"Update the dependencies array to be: [currentUser]",{"range":"261","text":"262"},"Update the dependencies array to be: [getUsers, userList]",{"range":"263","text":"264"},"Update the dependencies array to be: [currentUser.id, getUser, users]",{"range":"265","text":"266"},"Update the dependencies array to be: [currentUser.id]",{"range":"267","text":"268"},{"range":"269","text":"266"},{"range":"270","text":"268"},"Update the dependencies array to be: [currentUser.id, postId]",{"range":"271","text":"272"},"Update the dependencies array to be: [currentUser.id, getUsers, postId, userList]",{"range":"273","text":"274"},[789,791],"[userList]",[1689,1691],"[currentUser]",[799,801],"[getUsers, userList]",[3548,3550],"[currentUser.id, getUser, users]",[3863,3865],"[currentUser.id]",[5153,5155],[5469,5471],[1692,1694],"[currentUser.id, postId]",[3320,3322],"[currentUser.id, getUsers, postId, userList]"]