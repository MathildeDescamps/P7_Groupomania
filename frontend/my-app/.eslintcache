[{"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js":"1","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js":"2","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js":"3","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js":"4","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js":"5","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js":"6","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js":"7","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js":"8","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js":"9","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js":"10","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js":"11","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js":"12","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js":"13","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/SearchBox.js":"14","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Likes.js":"15","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Comments.js":"16","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthHeader.js":"17","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js":"18"},{"size":573,"mtime":1610909539000,"results":"19","hashOfConfig":"20"},{"size":364,"mtime":1610909539000,"results":"21","hashOfConfig":"20"},{"size":5064,"mtime":1610909539000,"results":"22","hashOfConfig":"20"},{"size":983,"mtime":1611174234489,"results":"23","hashOfConfig":"20"},{"size":17134,"mtime":1611237295093,"results":"24","hashOfConfig":"20"},{"size":1249,"mtime":1611220035176,"results":"25","hashOfConfig":"20"},{"size":3170,"mtime":1611232120167,"results":"26","hashOfConfig":"20"},{"size":883,"mtime":1611219202989,"results":"27","hashOfConfig":"20"},{"size":1147,"mtime":1611219984638,"results":"28","hashOfConfig":"20"},{"size":5877,"mtime":1611232121632,"results":"29","hashOfConfig":"20"},{"size":927,"mtime":1610966692871,"results":"30","hashOfConfig":"20"},{"size":9963,"mtime":1611232123024,"results":"31","hashOfConfig":"20"},{"size":11493,"mtime":1611216482244,"results":"32","hashOfConfig":"20"},{"size":804,"mtime":1611231787397,"results":"33","hashOfConfig":"20"},{"size":5767,"mtime":1611235178707,"results":"34","hashOfConfig":"20"},{"size":8826,"mtime":1611235174238,"results":"35","hashOfConfig":"20"},{"size":254,"mtime":1611219765310,"results":"36","hashOfConfig":"20"},{"size":6557,"mtime":1611239161671,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"713fjp",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js",[],["82","83"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js",["84","85","86","87","88","89","90","91"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js",["92","93","94","95"],"import React, { useState, useEffect } from 'react';\nimport authHeader from '../components/AuthForm/AuthHeader';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport PageBodyContainer from '../components/PostAndTheme/PageBodyContainer';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\nconst Accueil = () => {\n\n  const history = useHistory();\n\n  const [userList, setUserList] = useState(null);\n\n  \n\n  const getUsers = async () => {\n    let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n    if (!currentUser) {\n    window.location.pathname = \"/\";\n    }\n    const response = await axios.get(UrlAPI + currentUser.id + '/users', { headers: authHeader() })\n    .then(result => result.data)\n    .then(data => setUserList(data))\n    .catch(res => { \n      if (res.status == 401) {\n        window.location.pathname = \"/\";\n      }\n    });\n  }\n\n  useEffect ( () => {\n      if (!userList) getUsers();\n  }, []);\n\n    return (\n      <>\n        {userList && <Header userList={userList} />}\n        {userList && <PageBodyContainer userList={userList} />}\n        <Footer /> \n      </>\n    );\n};\n\nexport default Accueil;\n","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js",["96","97","98","99"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from '../../header-logo.png';\nimport SearchBox from \"./SearchBox\";\nimport { Avatar, Link } from '@material-ui/core';\nimport { Person } from '@material-ui/icons';\n\n// STYLE DU COMPOSANT :\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        position: 'fixed',\n        alignItems: 'center',\n        backgroundColor: '#F2D3D4',\n        height: '80px',\n        width: '100%',\n        justifyContent: 'space-between',\n        paddingLeft: '30px',\n        paddingRight: '30px',\n        zIndex: '2',\n    },\n    logo: {\n        height: '6ch',\n        [theme.breakpoints.down('md')]: {\n            height: '4ch',\n        },\n    },\n    leftPart: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n    },\n    centerPart: {\n        width: '50ch',\n        justifyContent: 'center',\n        [theme.breakpoints.down('md')]: {\n            width: '300px',\n        },\n    },\n    rightPart: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    avatar: {\n        cursor: 'pointer',\n        width: '5ch',\n        height: '5ch',\n        border: 'solid 3px #445760',\n        [theme.breakpoints.down('md')]: {\n            height: '3ch',\n            width: '3ch',\n        },\n    },\n    link: {\n        color: '#0E0C0C',\n        fontWeight: '500',\n        fontSize: '20px',\n        marginLeft: '15px',\n        [theme.breakpoints.down('md')]: {\n            fontSize: '16px',\n        },\n    },\n}));\n\n// LOGIQUE DU COMPOSANT :\nconst Header = (props) => {\n\n    const [userInfos, setUserInfos] = useState(null);\n    const [image, setImage] = useState(\"\");\n    const classes = useStyles();\n\n    let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n    \n   useEffect ( () => {\n        if (currentUser && currentUser.profilePic) {\n            let buff = currentUser.profilePic.data;\n            let src = Buffer.from(buff).toString();\n            setImage(src);\n        }\n    }, []);\n\n    const handleLogout = () => {\n        sessionStorage.removeItem(\"currentUser\");\n    };\n\n    return (\n    <>\n        <div id=\"header-container\" className={ classes.root } >\n            <div id=\"left-part\" className={ classes.leftPart } >\n                <Link href='/accueil'><img src={ logo } alt='[ logo Postmania ]' className={classes.logo} id=\"logo\" /></Link>\n            </div>\n            <div id=\"center-part\" className={ classes.centerPart } >\n                <SearchBox userList={props.userList} className={classes.centerPart} />\n            </div>\n            <div id=\"right-part\" className={ classes.rightPart } >\n                <Avatar id=\"profile-picture\" className={ classes.avatar }  alt=\"[ votre photo de profile ]\">\n                    {!image && <Person style={{fontSize: 40}} id=\"avatar\"/>}\n                    {image && <img id=\"image\" src={image} style={{ width: '60px', height: '60px'}} />}\n                </Avatar>\n                <Link className={classes.link} href=\"/\" onClick={handleLogout} >Se déconnecter</Link>\n            </div>\n        </div>\n    </>\n    );\n};\n\nexport default Header;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js",["100","101"],"import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport ProfilePageBodyContainer from '../components/PostAndTheme/ProfilePageBodyContainer';\nimport axios from 'axios';\nimport authHeader from '../components/AuthForm/AuthHeader';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\nconst Profile = () => {\n  const [userList, setUserList] = useState(null);\n  let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  if (!currentUser) {\n    window.location.pathname = \"/\";\n  }\n  const getUsers = async () => {\n    const response = await axios.get(UrlAPI + currentUser.id + '/users', { headers: authHeader() })\n        .then(result => result.data)\n        .then(data => setUserList(data))\n        .catch(res => { \n          console.log(res.data);\n        });\n  }\n\n  useEffect ( () => {\n      if (!userList) getUsers();\n  }, []);\n\n    return (\n      <>\n        {userList && <Header userList={userList} />}\n        {userList && <ProfilePageBodyContainer userList={userList} />}\n        <Footer /> \n      </>\n    );\n};\nexport default Profile;\n","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js",["102","103","104","105"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport CreatePost from './CreatePost';\nimport Post from './Post';\nimport axios from 'axios';\nimport authHeader from '../AuthForm/AuthHeader';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n        postContainer: {\n            width: '80%',\n            position: 'relative',\n            paddingTop: '10ch',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeFlexBox: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n            height: '100%',\n        },\n        themesButtons: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n        },\n        cancelFiltersButton: {\n            backgroundColor: '#D64F30',\n            color: 'white',\n            \"&:hover\": {\n                backgroundColor: '#FF5F39'\n            },\n            marginLeft: '1ch',\n            marginRight: '1ch',\n            marginTop: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            \"&:hover\": {\n                backgroundColor: '#D64F30',\n                color: '#FFFFFE',\n            },\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n}));\n\n// LOGIQUE :\n\nconst PageBodyContainer = (props) => {   \n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n\n    const classes = useStyles();\n\n    let users = props.userList;\n    let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    const getUser = (userid) => {\n        return users.filter(user => (user.id == userid));\n    };\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        if (users) {\n            axios.get(UrlAPI + currentUser.id + '/posts', { headers: authHeader() })\n            .then(result => result.data)\n            .then(data => { \n                setPostList(data.map(p => { \n                    p.author=getUser(p.user)[0]; \n                    return p; \n                }));\n            })\n        };    \n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + currentUser.id + '/themes', { headers: authHeader() })\n        .then(result => result.data)\n        .then(data => setThemeList(data))\n    }, []);\n\n    const cancelFilters = () => {\n        setSelectedThemes([]);\n    };\n\n    return (\n        <>\n            <CssBaseline />\n                <div className= { classes.postContainer }>\n                    <CreatePost themes={themeList} />\n                    {postList && postList.filter(post => ((selectedThemes.includes(post.theme))||(selectedThemes.length == 0))).map( (post) => { \n                            return <Post key={post.id} post={post}/>;\n                    })}\n                </div>\n                <div className={ classes.themeContainer } >\n                    <div className={ classes.themeContainerHeader } >THÈMES</div>\n                    <div className={classes.themeFlexBox}>\n                        <div className={classes.themesButtons}>\n                            {themeList && themeList.map((theme) => { \n                                return (\n                                    <Button key={theme.id} \n                                        className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                                        onClick={() => { \n                                            if (!selectedThemes.includes(theme.id)) {\n                                                setSelectedThemes([...selectedThemes, theme.id]);\n                                            }\n                                            else {\n                                                setSelectedThemes(selectedThemes.filter(item => { \n                                                    return item !== theme.id; \n                                                }));\n                                            }\n                                        }} > \n                                        {theme && theme.name} \n                                    </Button>\n                                )\n                            })}\n                        </div>\n                        <Button className={classes.cancelFiltersButton} onClick={cancelFilters} >Retirer tous les filtres</Button>\n                    </div>\n                </div>\n        </>\n    )\n};\n\nexport default PageBodyContainer;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js",["106","107","108","109","110","111","112","113","114","115","116"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button, Avatar, Link } from '@material-ui/core';\nimport { Person, ArrowBack } from '@material-ui/icons';\nimport Post from './Post';\nimport axios from 'axios';\nimport FileBase64 from 'react-file-base64';\nimport moment from 'moment';\nimport authHeader from '../AuthForm/AuthHeader';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '60%',\n            position: 'relative',\n            paddingTop: '20ch',\n            margin: 'auto',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n            zIndex: '3',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeFlexBox: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n            height: '100%',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            \"&:hover\": {\n                backgroundColor: '#D35233',\n                color: '#FFFFFE',\n            },\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n        cancelFiltersButton: {\n            backgroundColor: '#D64F30',\n            color: 'white',\n            \"&:hover\": {\n                backgroundColor: '#FF5F39'\n            },\n            marginLeft: '1ch',\n            marginRight: '1ch',\n            marginTop: '1ch',\n        },\n        profileContainer: {\n            backgroundColor: '#FFFFFF',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            left: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n            textAlign: 'center',\n        },\n        avatar: {\n            margin: 'auto',\n            marginTop: '2ch',\n            width: '10ch',\n            height: '10ch',\n            \"&>span\": {\n                display: \"none\",\n            },\n            \"&:hover\": {\n                \"&>span\": {\n                    display: 'block',\n                    textDecoration: 'underline',\n                    cursor: 'pointer',\n                },\n                \"&>#avatar\": {\n                    display: 'none',\n                },\n            },\n        },\n        userName: {\n            textDecoration: 'underline',\n            fontSize: '25px',\n            color: '#D75030',\n        },\n        list: {\n            listStyle: 'none',\n            color:'#545555',\n            marginLeft: '0',\n            lineHeight: '2',\n        },\n        backToHome: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            backgroundColor: 'white',\n            color: '#757575',\n            position: 'fixed',\n            marginTop: '-76px',\n            zIndex: '2',\n            \"&:hover\": {\n                color: '#D64F30',\n                textDecoration: 'none',\n            },\n        },\n}));\n\n// LOGIQUE :\n\nconst ProfilePageBodyContainer = (props) => {\n        \n    //On initialise le state.\n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n    const [userInfos, setUserInfos] = useState(null);\n    const [image, setImage] = useState(\"\");\n\n    const classes = useStyles();\n\n    let url = window.location.pathname;\n    let userId = url.split('profile/')[1];\n    let buff; \n    let src; \n    let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    let users = props.userList;\n\n    const getUser = (userid) => {\n        return users.filter(user => (user.id == userid));\n    }\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        if (users) {\n            axios.get(UrlAPI + currentUser.id + '/posts', { headers: authHeader() })\n            .then(result => result.data)\n            .then(data => { \n                setPostList(data.map(p => { \n                    p.author=getUser(p.user)[0]; \n                    return p; \n                }));\n            });\n        }    \n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + currentUser.id + '/themes', { headers: authHeader() })\n        .then(result => result.data)\n        .then(data => setThemeList(data));\n    }, []);\n\n    //On récupère les infos du user cliqué et on traite la photo de profile pour pouvoir l'afficher.\n    useEffect ( () => {\n        axios.get(UrlAPI + currentUser.id + '/users/' + userId, { headers: authHeader() })\n            .then(res => { \n                setUserInfos(res.data[0]);\n                buff = res.data[0].profilePic.data;\n                src = Buffer.from(buff).toString();\n                setImage(src);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    //On récupère l'image uploadée par le user pour la mettre à jour en base. \n    const changeImage = (img) => {\n        setImage(img.base64);\n        console.log(\"img =>\", img.base64);\n        axios.put(UrlAPI + currentUser.id + '/users/' + userInfos.id + '/image', { image: img.base64 }, { headers: authHeader() })\n            .then(result => {\n                console.log(result);\n            })\n            .catch(err => console.log(err))\n    };\n\n    const cancelFilters = () => {\n        setSelectedThemes([]);\n    };\n    \n    return ( \n        <>\n            <CssBaseline />\n            <div className= { classes.profileContainer }> \n                <Avatar className= { classes.avatar } >\n                    {!image && <Person style={{fontSize: 60}} id=\"avatar\"/>}\n                    {image && <img id=\"image\" src={image} style={{ display: 'block', width: 'auto', height: 'auto', minHeight: '10ch', maxWidth: '10ch'}} />}\n                </Avatar>\n                {userInfos && ((userInfos.id == currentUser.id) || (currentUser.rights == 'admin') ) && \n                <FileBase64 multiple={ false } onDone={changeImage} />\n                }\n                <h3 className= { classes.userName }> {userInfos && userInfos.firstname + ' ' + userInfos.lastname}  </h3>\n                <p className= { classes.list } >\n                    <b>{ userInfos && userInfos.status}</b><br/>\n                    <b>Date d'embauche :</b> { userInfos && moment(userInfos.hiringDate).format(\"DD/MM/YYYY\")}<br/>\n                    <b>Email :</b> {userInfos && userInfos.email}<br/>\n                </p>\n            </div>\n            <div className= { classes.postContainer }>\n                <Link className={classes.backToHome} href='/accueil'>\n                    <ArrowBack style={{ fontSize: 35, cursor: 'pointer', marginRight: '1ch' }} />\n                    <p>Revenir à la page d'accueil</p>\n                </Link>\n                {postList && postList.filter(post => (userInfos && (post.user == userInfos.id) && ((selectedThemes.includes(post.theme)) || (selectedThemes.length == 0)))).map(post => \n                    { \n                        return <Post key={post.id} post={post} />;\n                    }\n                )}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                    <div className={classes.themeFlexBox}>\n                        <div className={classes.themesButtons}>\n                            {themeList && themeList.map((theme) => { \n                                return (\n                                    <Button key={theme.id} \n                                        className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                                        onClick={() => { \n                                            if (!selectedThemes.includes(theme.id)) {\n                                                setSelectedThemes([...selectedThemes, theme.id]);\n                                            }\n                                            else {\n                                                setSelectedThemes(selectedThemes.filter(item => { \n                                                    return item !== theme.id; \n                                                }));\n                                            }\n                                        }} > \n                                        {theme && theme.name} \n                                    </Button>\n                                )\n                            })}\n                        </div>\n                        <Button className={classes.cancelFiltersButton} onClick={cancelFilters} >Retirer tous les filtres</Button>\n                    </div>\n            </div>\n        </>\n    );\n};\n\nexport default ProfilePageBodyContainer;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js",["117","118","119","120","121","122","123","124","125","126","127","128"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport ImageUploader from 'react-images-upload';\nimport authHeader from '../AuthForm/AuthHeader';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    createPostBlock: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '70%',\n            margin: 'auto',  \n            marginTop: '4ch',\n            marginBottom: '8ch',\n        },\n        createPostHeader: {\n            backgroundColor: '#D75030',\n            color: 'white',\n            width: '20%',\n            padding: '0.5ch',\n            textAlign: 'center',\n            fontSize: '12px',\n        },\n        createPostBody: {\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: '#F2D3D4',\n            padding: '2ch',\n            width: '100%',\n            margin: 'auto',\n        },\n        createPostBodyContent: {\n            backgroundColor: '#FFFFFE',\n            width: '95%',\n            margin: 'auto',\n            padding: '2ch',\n            textAlign: 'left',\n        },  \n        postTextarea: {\n            width: '100%',\n            maxWidth: '100%',\n            height: 'auto',\n            fontFamily: 'Avenir, Segoe, UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n            border: 'none',\n            \"&:focus\": {\n                outline: 'none',\n            },\n        },\n        buttons: {\n            display: 'flex',\n            width: '95%',\n            height: '3.5ch',\n            margin: 'auto',\n            marginTop: '2ch',\n            justifyContent: 'space-between',\n        },\n        buttonsText: {\n            color: '#D75030',\n            fontWeight: '600',\n            fontSize: '14px',   \n            marginRight: '1ch',\n            marginTop: '0.5ch',\n        },\n        dropDownList: {\n            width: '30%',\n            backgroundColor: '#D75030',\n            borderStyle: 'none',\n            color: '#FFFFFE',\n            paddingLeft: '1ch',\n            marginRight: '1ch',\n            fontSize: '14px',   \n            cursor: 'pointer',\n        },\n        createTheme: {\n            color: '#686A6C',\n            width: '35%',\n            fontSize: '14px',   \n            borderStyle: 'none',\n            paddingLeft: '1ch',\n        },\n        publish: {\n            backgroundColor: '#D75030',\n            color: '#FFFFFE',\n            borderRadius: '5px',\n            width: '15%',\n            fontWeight: '400',\n            \"&:hover\": {\n                backgroundColor: '#B85030',\n            },\n        },\n        errorMessages: {\n            display: 'none',\n            width: '100%',\n            marginTop: '0.5ch',\n            color: '#D7502F',\n            fontWeight: '500',\n            textAlign: 'right',\n        },\n}));\n\n// LOGIQUE :\n\nconst CreatePost = props => {\n\n    const classes = useStyles();\n    const [content, setContent] = useState('');\n    const [newTheme, setNewTheme] = useState('');\n    const [user, setUser] = useState('');\n    const [theme, setTheme] = useState('');\n    const [pictures, setPictures] = useState([]);\n\n    const currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    const handleChange = (event) => {\n        setTheme(event.target.value);\n    };\n\n    const handleContent = (event) => {\n        setContent(event.target.value);\n    };\n\n    const handleNewTheme = (event) => {\n        setNewTheme(event.target.value);\n    };\n    \n    //Gestion d'import d'image(s) lors de la création d'un post.\n    const onDrop = picture => {\n        setPictures(picture);\n    };\n\n    const handlePublication = () => {\n            if(theme != '' && newTheme != '') {\n                let errorBlock = document.getElementById('errorMessages');\n                let errorMessage = document.getElementById('error1');\n                let errorMessage2 = document.getElementById('error2');\n                errorBlock.style.cssText='display: block;';\n                errorMessage.style.cssText='display: block;';\n                errorMessage2.style.cssText='display: none;';\n            } else if (theme != '' && newTheme == '') {\n                axios({\n                    method: 'post',\n                    url: UrlAPI + currentUser.id + '/posts',\n                    data: { content : content, theme: theme, user: currentUser.id },\n                    headers: authHeader(),\n                })\n                .then(function (response) {\n                    //On traite la suite une fois la réponse obtenue \n                    let postId = response.data.id;\n                    if (pictures.length >0) {\n                        const fd = new FormData();\n                        let pictureList = [];\n                        pictureList = pictures.map(p => {\n                            fd.append('image', p);\n                        });                    \n                        const config = {\n                            headers: {\n                                'Content-Type' : 'multipart/form-data',\n                                'x-access-token': currentUser.token,\n                                'Authorization': 'Bearer ' + currentUser.token,\n                            }\n                        }\n                        axios.post(UrlAPI + currentUser.id + '/posts/' + postId + '/images', fd, config)\n                        .then(function (response) {\n                            console.log('image:', response);\n                            window.location.reload(false);\n                        })\n                        .catch(function (error) {\n                            //On traite ici les erreurs éventuellement survenues\n                            console.log(error);\n                        });\n                    }\n                    else window.location.reload(false);\n                })\n                .catch(function (error) {\n                    //On traite ici les erreurs éventuellement survenues\n                    console.log(error);\n                });\n            } else if (theme == '' && newTheme != '') {\n                axios({\n                    method: 'post',\n                    url: UrlAPI + currentUser.id + '/themes',\n                    data: { user : currentUser.id, name: newTheme },\n                    headers: authHeader(),\n                })\n                .then(res => {\n                    axios({\n                        method: 'post',\n                        url: UrlAPI + currentUser.id + '/posts',\n                        data: { content : content, theme: res.data.id, user: currentUser.id },\n                        headers: authHeader(),\n                    })\n                    .then(function (response) {\n                        //On traite la suite une fois la réponse obtenue \n                        let postId = response.data.id;\n                        if (pictures.length >0) {\n                            const fd = new FormData();\n                            let pictureList = [];\n                            pictureList = pictures.map(p => {\n                                fd.append('image', p);\n                            });                    \n                            const config = {\n                                headers: {\n                                    'Content-Type' : 'multipart/form-data',\n                                    'x-access-token': currentUser.token,\n                                    'Authorization': 'Bearer ' + currentUser.token,\n                                }\n                            }\n                            axios.post(UrlAPI + currentUser.id + '/posts/' + postId + '/images', fd, config)\n                            .then(function (response) {\n                                console.log('image:', response);\n                                window.location.reload(false);\n                            })\n                            .catch(function (error) {\n                                //On traite ici les erreurs éventuellement survenues\n                                console.log(error);\n                            });\n                        }\n                        else window.location.reload(false);\n                    })\n                    .catch(function (error) {\n                        //On traite ici les erreurs éventuellement survenues\n                        console.log(error);\n                    });\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n            }\n            else {\n                let errorBlock = document.getElementById('errorMessages');\n                let errorMessage = document.getElementById('error1');\n                let errorMessage2 = document.getElementById('error2');\n                errorBlock.style.cssText='display: block;';\n                errorMessage2.style.cssText='display: block;';\n                errorMessage.style.cssText='display: none;';\n            }\n            \n        };\n\n    return(\n        <div className= { classes.createPostBlock }>\n            <div className={classes.createPostHeader}>\n                <h2>PUBLIER UN POST</h2>\n            </div>\n            <div className={classes.createPostBody} >\n                <div className={classes.createPostBodyContent} >\n                    <textarea className={classes.postTextarea} placeholder=\"Ecrivez le contenu de votre post ici...\" value={content} onChange={handleContent}/>\n                    <ImageUploader\n                        withIcon={false}\n                        buttonText='Ajoutez des images'\n                        onChange={onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                        withLabel={false}\n                        fileSizeError='Image trop volumineuse'\n                        buttonStyles={{backgroundColor: '#757575', borderRadius: '5px', position: \"relative\", margin: \"0\", height: '30px'}}\n                    />\n                </div>\n                <div className={classes.buttons}>\n                    <select className={classes.dropDownList} value={theme} placeholder=\"Choisissez un thème\" onChange={handleChange}>\n                        <option value=\"\" defaultValue data-default>Choisissez un thème</option>\n                        {props.themes && props.themes.map((theme) => { \n                        return (\n                            <option key={theme.id} value={theme.id}>{theme.name}</option>\n                        ); })}\n                    </select>\n                    <div className={classes.buttonsText}>OU</div>\n                    <input className={classes.createTheme} type=\"text\" onChange={handleNewTheme} value={newTheme} id=\"new-theme\" placeholder=\"Créez un nouveau thème...\" />\n                    <Button onClick={handlePublication} className={classes.publish} >PUBLIER</Button>\n                </div>\n            </div>\n            <div id=\"errorMessages\" className={classes.errorMessages} >\n                    <p id=\"error1\" style={{display: 'none'}} >Veuillez ne renseigner qu'un seul thème.</p>\n                    <p id=\"error2\" style={{display: 'none'}} >Veuillez renseigner un thème.</p>\n            </div>\n        </div>\n    );\n\n};\n\nexport default CreatePost;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/SearchBox.js",["129"],"import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default function SearchBox(props) {\n\n  const [value, setValue] = useState(null);\n\n  return (\n    <Autocomplete\n      id=\"search-box\"\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n        if (newValue) window.location.pathname = \"/profile/\" + newValue.id; \n      }}\n      options={props.userList}\n      clearOnEscape\n      getOptionLabel={(option) => option.firstname + ' ' + option.lastname}\n      style={{ width: 300, backgroundColor: 'white', outline: 'none', }}\n      renderInput={(params) => <TextField {...params} label=\"Rechercher un collègue...\" variant=\"outlined\" />}\n    />\n  );\n}\n\n","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Likes.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Comments.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthHeader.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js",["159","160","161","162","163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"172","line":4,"column":84,"nodeType":"170","messageId":"171","endLine":4,"endColumn":100},{"ruleId":"168","severity":1,"message":"173","line":4,"column":118,"nodeType":"170","messageId":"171","endLine":4,"endColumn":126},{"ruleId":"174","severity":1,"message":"175","line":154,"column":26,"nodeType":"176","messageId":"177","endLine":154,"endColumn":28},{"ruleId":"174","severity":1,"message":"175","line":166,"column":29,"nodeType":"176","messageId":"177","endLine":166,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":178,"column":30,"nodeType":"176","messageId":"177","endLine":178,"endColumn":32},{"ruleId":"174","severity":1,"message":"175","line":190,"column":29,"nodeType":"176","messageId":"177","endLine":190,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":202,"column":27,"nodeType":"176","messageId":"177","endLine":202,"endColumn":29},{"ruleId":"168","severity":1,"message":"178","line":13,"column":9,"nodeType":"170","messageId":"171","endLine":13,"endColumn":16},{"ruleId":"168","severity":1,"message":"179","line":24,"column":11,"nodeType":"170","messageId":"171","endLine":24,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":28,"column":22,"nodeType":"176","messageId":"177","endLine":28,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":36,"column":6,"nodeType":"182","endLine":36,"endColumn":8,"suggestions":"183"},{"ruleId":"168","severity":1,"message":"184","line":67,"column":12,"nodeType":"170","messageId":"171","endLine":67,"endColumn":21},{"ruleId":"168","severity":1,"message":"185","line":67,"column":23,"nodeType":"170","messageId":"171","endLine":67,"endColumn":35},{"ruleId":"180","severity":1,"message":"186","line":79,"column":8,"nodeType":"182","endLine":79,"endColumn":10,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":97,"column":31,"nodeType":"190","endLine":97,"endColumn":102},{"ruleId":"168","severity":1,"message":"179","line":17,"column":11,"nodeType":"170","messageId":"171","endLine":17,"endColumn":19},{"ruleId":"180","severity":1,"message":"191","line":27,"column":6,"nodeType":"182","endLine":27,"endColumn":8,"suggestions":"192"},{"ruleId":"174","severity":1,"message":"175","line":100,"column":46,"nodeType":"176","messageId":"177","endLine":100,"endColumn":48},{"ruleId":"180","severity":1,"message":"193","line":115,"column":8,"nodeType":"182","endLine":115,"endColumn":10,"suggestions":"194"},{"ruleId":"180","severity":1,"message":"195","line":122,"column":8,"nodeType":"182","endLine":122,"endColumn":10,"suggestions":"196"},{"ruleId":"174","severity":1,"message":"175","line":133,"column":121,"nodeType":"176","messageId":"177","endLine":133,"endColumn":123},{"ruleId":"197","severity":1,"message":"198","line":89,"column":13,"nodeType":"199","messageId":"177","endLine":89,"endColumn":21},{"ruleId":"174","severity":1,"message":"175","line":165,"column":46,"nodeType":"176","messageId":"177","endLine":165,"endColumn":48},{"ruleId":"180","severity":1,"message":"193","line":180,"column":8,"nodeType":"182","endLine":180,"endColumn":10,"suggestions":"200"},{"ruleId":"180","severity":1,"message":"195","line":187,"column":8,"nodeType":"182","endLine":187,"endColumn":10,"suggestions":"201"},{"ruleId":"180","severity":1,"message":"202","line":194,"column":24,"nodeType":"203","endLine":194,"endColumn":51},{"ruleId":"180","severity":1,"message":"204","line":195,"column":23,"nodeType":"205","endLine":195,"endColumn":51},{"ruleId":"188","severity":1,"message":"189","line":222,"column":31,"nodeType":"190","endLine":222,"endColumn":157},{"ruleId":"174","severity":1,"message":"175","line":224,"column":46,"nodeType":"176","messageId":"177","endLine":224,"endColumn":48},{"ruleId":"174","severity":1,"message":"175","line":224,"column":88,"nodeType":"176","messageId":"177","endLine":224,"endColumn":90},{"ruleId":"174","severity":1,"message":"175","line":239,"column":79,"nodeType":"176","messageId":"177","endLine":239,"endColumn":81},{"ruleId":"174","severity":1,"message":"175","line":239,"column":164,"nodeType":"176","messageId":"177","endLine":239,"endColumn":166},{"ruleId":"168","severity":1,"message":"206","line":113,"column":12,"nodeType":"170","messageId":"171","endLine":113,"endColumn":16},{"ruleId":"168","severity":1,"message":"207","line":113,"column":18,"nodeType":"170","messageId":"171","endLine":113,"endColumn":25},{"ruleId":"174","severity":1,"message":"208","line":137,"column":22,"nodeType":"176","messageId":"177","endLine":137,"endColumn":24},{"ruleId":"174","severity":1,"message":"208","line":137,"column":40,"nodeType":"176","messageId":"177","endLine":137,"endColumn":42},{"ruleId":"174","severity":1,"message":"208","line":144,"column":30,"nodeType":"176","messageId":"177","endLine":144,"endColumn":32},{"ruleId":"174","severity":1,"message":"175","line":144,"column":48,"nodeType":"176","messageId":"177","endLine":144,"endColumn":50},{"ruleId":"168","severity":1,"message":"209","line":157,"column":25,"nodeType":"170","messageId":"171","endLine":157,"endColumn":36},{"ruleId":"210","severity":1,"message":"211","line":157,"column":54,"nodeType":"212","messageId":"213","endLine":157,"endColumn":56},{"ruleId":"174","severity":1,"message":"175","line":183,"column":30,"nodeType":"176","messageId":"177","endLine":183,"endColumn":32},{"ruleId":"174","severity":1,"message":"208","line":183,"column":48,"nodeType":"176","messageId":"177","endLine":183,"endColumn":50},{"ruleId":"168","severity":1,"message":"209","line":203,"column":29,"nodeType":"170","messageId":"171","endLine":203,"endColumn":40},{"ruleId":"210","severity":1,"message":"211","line":203,"column":58,"nodeType":"212","messageId":"213","endLine":203,"endColumn":60},{"ruleId":"168","severity":1,"message":"169","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"214","line":63,"column":8,"nodeType":"182","endLine":63,"endColumn":10,"suggestions":"215"},{"ruleId":"174","severity":1,"message":"175","line":65,"column":32,"nodeType":"176","messageId":"177","endLine":65,"endColumn":34},{"ruleId":"174","severity":1,"message":"175","line":68,"column":39,"nodeType":"176","messageId":"177","endLine":68,"endColumn":41},{"ruleId":"174","severity":1,"message":"175","line":71,"column":39,"nodeType":"176","messageId":"177","endLine":71,"endColumn":41},{"ruleId":"216","severity":1,"message":"217","line":77,"column":9,"nodeType":"218","messageId":"219","endLine":105,"endColumn":10},{"ruleId":"174","severity":1,"message":"175","line":79,"column":33,"nodeType":"176","messageId":"177","endLine":79,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":82,"column":40,"nodeType":"176","messageId":"177","endLine":82,"endColumn":42},{"ruleId":"174","severity":1,"message":"175","line":88,"column":33,"nodeType":"176","messageId":"177","endLine":88,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":91,"column":40,"nodeType":"176","messageId":"177","endLine":91,"endColumn":42},{"ruleId":"174","severity":1,"message":"175","line":97,"column":33,"nodeType":"176","messageId":"177","endLine":97,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":100,"column":40,"nodeType":"176","messageId":"177","endLine":100,"endColumn":42},{"ruleId":"174","severity":1,"message":"175","line":110,"column":17,"nodeType":"176","messageId":"177","endLine":110,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":120,"column":25,"nodeType":"176","messageId":"177","endLine":120,"endColumn":27},{"ruleId":"174","severity":1,"message":"175","line":133,"column":23,"nodeType":"176","messageId":"177","endLine":133,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":136,"column":30,"nodeType":"176","messageId":"177","endLine":136,"endColumn":32},{"ruleId":"168","severity":1,"message":"179","line":130,"column":15,"nodeType":"170","messageId":"171","endLine":130,"endColumn":23},{"ruleId":"180","severity":1,"message":"220","line":140,"column":8,"nodeType":"182","endLine":140,"endColumn":10,"suggestions":"221"},{"ruleId":"174","severity":1,"message":"175","line":166,"column":44,"nodeType":"176","messageId":"177","endLine":166,"endColumn":46},{"ruleId":"174","severity":1,"message":"175","line":166,"column":71,"nodeType":"176","messageId":"177","endLine":166,"endColumn":73},{"ruleId":"174","severity":1,"message":"175","line":169,"column":70,"nodeType":"176","messageId":"177","endLine":169,"endColumn":72},{"ruleId":"174","severity":1,"message":"175","line":179,"column":49,"nodeType":"176","messageId":"177","endLine":179,"endColumn":51},{"ruleId":"174","severity":1,"message":"208","line":180,"column":49,"nodeType":"176","messageId":"177","endLine":180,"endColumn":51},{"ruleId":"188","severity":1,"message":"189","line":180,"column":57,"nodeType":"190","endLine":180,"endColumn":126},{"ruleId":"174","severity":1,"message":"175","line":195,"column":39,"nodeType":"176","messageId":"177","endLine":195,"endColumn":41},{"ruleId":"174","severity":1,"message":"175","line":198,"column":70,"nodeType":"176","messageId":"177","endLine":198,"endColumn":72},{"ruleId":"174","severity":1,"message":"175","line":209,"column":49,"nodeType":"176","messageId":"177","endLine":209,"endColumn":51},{"ruleId":"174","severity":1,"message":"208","line":210,"column":49,"nodeType":"176","messageId":"177","endLine":210,"endColumn":51},{"ruleId":"188","severity":1,"message":"189","line":210,"column":57,"nodeType":"190","endLine":210,"endColumn":126},{"ruleId":"210","severity":1,"message":"211","line":225,"column":24,"nodeType":"222","messageId":"223","endLine":225,"endColumn":31},{"ruleId":"180","severity":1,"message":"202","line":149,"column":24,"nodeType":"203","endLine":149,"endColumn":51},{"ruleId":"180","severity":1,"message":"204","line":150,"column":23,"nodeType":"205","endLine":150,"endColumn":51},{"ruleId":"174","severity":1,"message":"175","line":154,"column":33,"nodeType":"176","messageId":"177","endLine":154,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":154,"column":75,"nodeType":"176","messageId":"177","endLine":154,"endColumn":77},{"ruleId":"188","severity":1,"message":"189","line":186,"column":31,"nodeType":"190","endLine":186,"endColumn":102},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'history' is assigned a value but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userList'. Either include it or remove the dependency array.","ArrayExpression",["226"],"'userInfos' is assigned a value but never used.","'setUserInfos' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["227"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getUsers' and 'userList'. Either include them or remove the dependency array.",["228"],"React Hook useEffect has missing dependencies: 'currentUser.id', 'getUser', and 'users'. Either include them or remove the dependency array.",["229"],"React Hook useEffect has a missing dependency: 'currentUser.id'. Either include it or remove the dependency array.",["230"],"no-dupe-keys","Duplicate key 'position'.","ObjectExpression",["231"],["232"],"Assignments to the 'buff' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'src' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'pictureList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'currentUser.id' and 'postId'. Either include them or remove the dependency array.",["233"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'currentUser.id', 'getUsers', 'postId', and 'userList'. Either include them or remove the dependency array.",["234"],"ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"241","fix":"245"},{"desc":"243","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [userList]",{"range":"251","text":"252"},"Update the dependencies array to be: [currentUser]",{"range":"253","text":"254"},"Update the dependencies array to be: [getUsers, userList]",{"range":"255","text":"256"},"Update the dependencies array to be: [currentUser.id, getUser, users]",{"range":"257","text":"258"},"Update the dependencies array to be: [currentUser.id]",{"range":"259","text":"260"},{"range":"261","text":"258"},{"range":"262","text":"260"},"Update the dependencies array to be: [currentUser.id, postId]",{"range":"263","text":"264"},"Update the dependencies array to be: [currentUser.id, getUsers, postId, userList]",{"range":"265","text":"266"},[1039,1041],"[userList]",[2044,2046],"[currentUser]",[931,933],"[getUsers, userList]",[3376,3378],"[currentUser.id, getUser, users]",[3691,3693],"[currentUser.id]",[5211,5213],[5527,5529],[1798,1800],"[currentUser.id, postId]",[3770,3772],"[currentUser.id, getUsers, postId, userList]"]