[{"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js":"1","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js":"2","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js":"3","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js":"4","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js":"5","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js":"6","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js":"7","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js":"8","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js":"9","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js":"10","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js":"11","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Body.js":"12","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js":"13","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js":"14","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js":"15","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/SearchBox.js":"16"},{"size":617,"mtime":1608649317929,"results":"17","hashOfConfig":"18"},{"size":364,"mtime":1607610187552,"results":"19","hashOfConfig":"18"},{"size":5064,"mtime":1607610187552,"results":"20","hashOfConfig":"18"},{"size":1037,"mtime":1609684353000,"results":"21","hashOfConfig":"18"},{"size":11748,"mtime":1609832700527,"results":"22","hashOfConfig":"18"},{"size":575,"mtime":1609166041917,"results":"23","hashOfConfig":"18"},{"size":1804,"mtime":1609865091724,"results":"24","hashOfConfig":"18"},{"size":979,"mtime":1608570968735,"results":"25","hashOfConfig":"18"},{"size":492,"mtime":1609169578675,"results":"26","hashOfConfig":"18"},{"size":4194,"mtime":1609864453694,"results":"27","hashOfConfig":"18"},{"size":243,"mtime":1609864430320,"results":"28","hashOfConfig":"18"},{"size":1834,"mtime":1609767091685,"results":"29","hashOfConfig":"18"},{"size":941,"mtime":1609770035634,"results":"30","hashOfConfig":"18"},{"size":6283,"mtime":1610005929163,"results":"31","hashOfConfig":"18"},{"size":7416,"mtime":1609770307956,"results":"32","hashOfConfig":"18"},{"size":1083,"mtime":1609833049468,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1y60pkv",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js",["73"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport Accueil from './containers/Accueil';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n  ReactDOM.render(\n    <App url='/' />,\n    document.getElementById('root')\n  );\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["74","75"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js",["76","77"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport AuthForm from '../components/AuthForm/AuthForm';\nimport Accueil from './Accueil';\nimport Profile from './Profile';\nimport { useParams } from 'react-router-dom';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Avenir', 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      <Router>\n        <GlobalStyle/>\n        <Switch>\n          <Route path=\"/\" exact component={AuthForm} />\n          <Route path=\"/accueil\" exact component={Accueil} />\n          <Route path=\"/profile/:id\" exact component={Profile} />\n        </Switch>\n      </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js",["78","79"],"import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport ProfilePageBodyContainer from '../components/PostAndTheme/ProfilePageBodyContainer';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <ProfilePageBodyContainer />\n        <Footer /> \n      </>\n    );\n  }\n};\n\nexport default Profile;\n","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js",["80","81","82","83"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '80%',\n            position: 'relative',\n            paddingTop: '10ch',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            \"&:hover\": {\n                backgroundColor: '#D35233',\n                color: '#FFFFFE',\n            },\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n\n}));\n\n// LOGIQUE :\n\nconst PageBodyContainer = () => {\n    \n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n    const [userList, setUserList] = useState();\n\n    const classes = useStyles();\n    \n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => result.data)\n        .then(data => setPostList(data));\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data))\n    }, []);\n\n    return (\n        <>\n            <CssBaseline />\n                <div className= { classes.postContainer }>\n                <CreatePost themes={themeList} />\n                {postList && postList.filter(post => ((selectedThemes.includes(post.theme))||(selectedThemes.length == 0))).map(post => { \n                    return <Post key={post.id} post={post} />;\n                })}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                {themeList && themeList.map((theme) => { \n                    return (\n                        <Button key={theme.id} \n                            className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                            onClick={(props) => { \n                                if (!selectedThemes.includes(theme.id)) {\n                                    setSelectedThemes([...selectedThemes, theme.id]);\n                                }\n                                else {\n                                    setSelectedThemes(selectedThemes.filter(item => { \n                                        return item !== theme.id; \n                                    }));\n                                }\n                            }} > \n                            {theme && theme.name} \n                        </Button>\n                    )\n                })}\n            </div>\n        </>\n    )\n};\n\nexport default PageBodyContainer;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Body.js",["84"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BodyContent from './BodyContent';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE DU COMPOSANT :\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '120ch',\n        margin: 'auto',\n\n    },\n    header: {\n        backgroundColor: '#D75030',\n        color: 'white',\n        width: '25ch',\n        padding: '2ch',\n        textAlign: 'center',\n        \"& a\": {\n            color: 'white',\n            textDecoration: 'none',\n            \"&:hover\": {\n                textDecoration: 'underline',\n            },\n        },\n    },\n    body: {\n        backgroundColor: '#F2D3D4',\n        padding: '2ch',\n        width: '100%',\n        margin: 'auto',\n        marginBottom: '10ch',\n    },\n}));\n\n// LOGIQUE DU COMPOSANT :\nconst PostBody = ({post, user}) => {\n\n    const classes = useStyles();\n\n    //On initialise le state.\n    const [userProfile, setUserProfile] = useState();\n\n    //On fait une requête GET à l'API pour obtenir les infos du user concerné.\n    useEffect ( () => {\n        axios.get(UrlAPI + 'users/' + user)\n        .then(result => result.data)\n        .then(data => setUserProfile(data[0]));\n    }, []);\n\n\n    //Le composant retourne le post.\n    return(\n        <div className={classes.root} >\n            <div className={classes.header}>\n                <h2><a href={userProfile &&  \"/profile/\" + userProfile.id}> {userProfile && userProfile.firstname + ' ' + userProfile.lastname} </a></h2>\n            </div>\n            <div className={classes.body} > \n                <BodyContent url={post.url} content={post.content} />\n            </div>\n        </div>\n    );\n};\n\nexport default PostBody;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js",["85","86","87","88","89"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js",["90","91","92","93","94"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport ImageUploader from 'react-images-upload';\n\nconst UrlAPI = 'http://localhost:3000/api';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    createPostBlock: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100ch',\n            margin: 'auto',  \n        },\n        createPostHeader: {\n            backgroundColor: '#D75030',\n            color: 'white',\n            width: '30ch',\n            padding: '2ch',\n            textAlign: 'center',\n            fontSize: '12px',\n        },\n        createPostBody: {\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: '#F2D3D4',\n            padding: '2ch',\n            width: '100%',\n            margin: 'auto',\n            marginBottom: '10ch',\n        },\n        createPostBodyContent: {\n            backgroundColor: '#FFFFFE',\n            width: '95%',\n            margin: 'auto',\n            padding: '2ch',\n            textAlign: 'left',\n        },  \n        postTextarea: {\n            width: '100%',\n            height: 'auto',\n            border: 'none',\n            \"&:focus\": {\n                outline: 'none',\n            },\n        },\n        buttons: {\n            display: 'flex',\n            width: '95%',\n            height: '3ch',\n            margin: 'auto',\n            marginTop: '2ch',\n            justifyContent: 'space-between',\n        },\n        buttonsText: {\n            color: '#D75030',\n            fontWeight: '600',\n            fontSize: '14px',   \n            marginRight: '1ch',\n        },\n        dropDownList: {\n            width: '30%',\n            backgroundColor: '#D75030',\n            borderStyle: 'none',\n            color: '#FFFFFE',\n            paddingLeft: '1ch',\n            marginRight: '1ch',\n            fontSize: '14px',   \n            cursor: 'pointer',\n        },\n        createTheme: {\n            color: '#686A6C',\n            width: '35%',\n            fontSize: '14px',   \n            borderStyle: 'none',\n            paddingLeft: '1ch',\n        },\n        publish: {\n            backgroundColor: '#D75030',\n            color: '#FFFFFE',\n            borderRadius: '0',\n            width: '20%',\n            \"&:hover\": {\n                backgroundColor: '#B85030',\n            },\n        },\n}));\n\n// LOGIQUE :\n\nconst CreatePost = props => {\n\n    const classes = useStyles();\n    const [content, setContent] = useState('');\n    const [user, setUser] = useState('');\n    const [theme, setTheme] = useState('');\n    const [pictures, setPictures] = useState([]);\n\n    const handleChange = (event) => {\n        setTheme(event.target.value);\n    };\n\n    const handleContent = (event) => {\n        setContent(event.target.value);\n    };\n    \n    //Gestion d'import d'image(s) lors de la création d'un post.\n    const onDrop = picture => {\n        setPictures(picture);\n    };\n\n    const handlePublication = () => {\n            axios({\n                method: 'post',\n                url: UrlAPI + '/posts',\n                data: { content : content, theme: theme, user: 5 }\n            })\n            .then(function (response) {\n                //On traite la suite une fois la réponse obtenue \n                let postId = response.data.id;\n                console.log('post id =>', postId);\n                if (pictures.length >0) {\n                    const fd = new FormData();\n                    let pictureList = [];\n                    pictureList = pictures.map(p => {\n                        fd.append('image', p);\n                    });                    \n                    const config = {\n                        headers: {\n                            'Content-Type' : 'multipart/form-data'\n                        }\n                    }\n                     axios.post(UrlAPI + '/posts/' + postId + '/images', fd, config)\n                        .then(function (response) {\n                            console.log('image:', response);\n                        })\n                        .catch(function (error) {\n                            //On traite ici les erreurs éventuellement survenues\n                            console.log(error);\n                        });\n                }\n\n            })\n            .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error);\n            });\n\n            // //On place ici la logique à appliquer lorsque le user clique sur 'PUBLIER'.\n            // try {\n            //     const res = await axios.post(UrlAPI + '/posts', fd, config);\n            //     console.log(res.data);\n            // }catch(error) {\n            //     //On traite ici les erreurs éventuellement survenues\n            //     console.log(error);\n            // };\n        };\n\n    return(\n        <div className= { classes.createPostBlock }>\n            <div className={classes.createPostHeader}>\n                <h2>PUBLIER UN POST</h2>\n            </div>\n            <div className={classes.createPostBody} >\n                <div className={classes.createPostBodyContent} >\n                    <textarea className={classes.postTextarea} placeholder=\"Ecrivez le contenu de votre post ici...\" value={content} onChange={handleContent}/>\n                    <ImageUploader\n                        withIcon={false}\n                        buttonText='Ajoutez des images'\n                        onChange={onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                        withLabel={false}\n                        fileSizeError='Image trop volumineuse'\n                        buttonStyles={{backgroundColor: '#757575', borderRadius: '0', position: \"relative\", margin: \"0\"}}\n                    />\n                </div>\n                <div className={classes.buttons}>\n                    <select className={classes.dropDownList} value={theme} placeholder=\"Choisissez un thème\" onChange={handleChange}>\n                        <option value=\"\" defaultValue data-default>Choisissez un thème</option>\n                        {props.themes && props.themes.map((theme) => { \n                        return (\n                            <option key={theme.id} value={theme.id}>{theme.name}</option>\n                        ); })}\n                    </select>\n                    <div className={classes.buttonsText}>OU</div>\n                    <input className={classes.createTheme} type=\"text\" id=\"new-theme\" placeholder=\"Saisissez un nouveau thème...\" />\n                    <Button onClick={handlePublication} className={classes.publish} >PUBLIER</Button>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n{/* <div \n    style={{ height: \"auto\", width: \"40ch\", border: \"dotted 1px black\", textAlign: \"center\" }} \n    onClick={() => imageUploader.current.click()  }\n>\n    Cliquez ici pour ajouter des images...\n    <img ref={uploadedImage} style={{ maxHeight: \"30ch\", maxWidth: \"40ch\", border: \"none\" }} />\n</div>\n<input \n    type=\"file\" \n    accept=\"image/*\" \n    multiple = \"true\" \n    ref={imageUploader} \n    style={{ display: \"none\" }}\n    onChange={handleImageUpload}\n/> */}\nexport default CreatePost;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/SearchBox.js",[],{"ruleId":"95","severity":1,"message":"96","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":15},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"103","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"104","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":19},{"ruleId":"95","severity":1,"message":"103","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"105","line":2,"column":18,"nodeType":"97","messageId":"98","endLine":2,"endColumn":35},{"ruleId":"106","severity":1,"message":"107","line":23,"column":13,"nodeType":"108","messageId":"109","endLine":23,"endColumn":21},{"ruleId":"95","severity":1,"message":"110","line":74,"column":12,"nodeType":"97","messageId":"98","endLine":74,"endColumn":20},{"ruleId":"95","severity":1,"message":"111","line":74,"column":22,"nodeType":"97","messageId":"98","endLine":74,"endColumn":33},{"ruleId":"112","severity":1,"message":"113","line":97,"column":117,"nodeType":"114","messageId":"109","endLine":97,"endColumn":119},{"ruleId":"115","severity":1,"message":"116","line":53,"column":8,"nodeType":"117","endLine":53,"endColumn":10,"suggestions":"118"},{"ruleId":"95","severity":1,"message":"104","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":25,"column":13,"nodeType":"108","messageId":"109","endLine":25,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":71,"column":13,"nodeType":"108","messageId":"109","endLine":71,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":139,"column":25,"nodeType":"114","messageId":"109","endLine":139,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":161,"column":117,"nodeType":"114","messageId":"109","endLine":161,"endColumn":119},{"ruleId":"95","severity":1,"message":"119","line":98,"column":12,"nodeType":"97","messageId":"98","endLine":98,"endColumn":16},{"ruleId":"95","severity":1,"message":"120","line":98,"column":18,"nodeType":"97","messageId":"98","endLine":98,"endColumn":25},{"ruleId":"95","severity":1,"message":"121","line":128,"column":21,"nodeType":"97","messageId":"98","endLine":128,"endColumn":32},{"ruleId":"122","severity":1,"message":"123","line":128,"column":50,"nodeType":"124","messageId":"125","endLine":128,"endColumn":52},{"ruleId":"126","severity":1,"message":"127","line":199,"column":1,"nodeType":"128","messageId":"129","endLine":213,"endColumn":7},"no-unused-vars","'Accueil' is defined but never used.","Identifier","unusedVar","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"'styled' is defined but never used.","'useParams' is defined but never used.","'createGlobalStyle' is defined but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","'userList' is assigned a value but never used.","'setUserList' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'pictureList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [user]",{"range":"135","text":"136"},[1333,1335],"[user]"]