[{"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js":"1","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js":"2","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js":"3","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js":"4","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js":"5","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js":"6","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js":"7","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js":"8","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js":"9","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js":"10","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js":"11","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Body.js":"12","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js":"13","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js":"14"},{"size":617,"mtime":1608649317929,"results":"15","hashOfConfig":"16"},{"size":364,"mtime":1607610187552,"results":"17","hashOfConfig":"16"},{"size":5064,"mtime":1607610187552,"results":"18","hashOfConfig":"16"},{"size":1033,"mtime":1609169102031,"results":"19","hashOfConfig":"16"},{"size":11727,"mtime":1608548437457,"results":"20","hashOfConfig":"16"},{"size":575,"mtime":1609166041917,"results":"21","hashOfConfig":"16"},{"size":3129,"mtime":1608566909102,"results":"22","hashOfConfig":"16"},{"size":979,"mtime":1608570968735,"results":"23","hashOfConfig":"16"},{"size":492,"mtime":1609169578675,"results":"24","hashOfConfig":"16"},{"size":3113,"mtime":1609176475613,"results":"25","hashOfConfig":"16"},{"size":243,"mtime":1609151473356,"results":"26","hashOfConfig":"16"},{"size":1495,"mtime":1609151473176,"results":"27","hashOfConfig":"16"},{"size":542,"mtime":1609151473327,"results":"28","hashOfConfig":"16"},{"size":4508,"mtime":1609170817435,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1y60pkv",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"33"},"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js",["67"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport Accueil from './containers/Accueil';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n  ReactDOM.render(\n    <App url='/' />,\n    document.getElementById('root')\n  );\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["68","69"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js",["70","71"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport AuthForm from '../components/AuthForm/AuthForm';\nimport Accueil from './Accueil';\nimport Profile from './Profile';\nimport { useParams } from 'react-router-dom';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Avenir', 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      <Router>\n        <GlobalStyle/>\n        <Switch>\n          <Route path=\"/\" exact component={AuthForm} />\n          <Route path=\"/accueil\" exact component={Accueil} />\n          <Route path=\"/profile\" exact component={Profile} />\n        </Switch>\n      </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js",["72","73"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport App from '../../containers/App';\nimport Accueil from '../../containers/Accueil';\nimport clsx from 'clsx';\nimport { Button, IconButton, Input, InputLabel, InputAdornment, Link, FormControl, FormControlLabel, FormHelperText, Checkbox } from '@material-ui/core/';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport logo from '../../portalLogo.png';\n\n\nconst UrlAPI = 'http://localhost:3000/api/auth';\n\n// STYLE DU COMPOSANT :\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        height: '10ch',\n        marginTop: '23ch',\n    },\n    loginRoot: {\n        display: 'flex',\n        flexDirection : 'column',\n        alignItems: 'center',\n        backgroundColor: '#F1D4D4',\n        color: '#9C9D9C',\n        width: '50ch',\n        height: '30ch',\n        position: 'absolute',\n        top: 50,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        paddingTop: '5ch',\n    },\n    signupRoot: {\n        display: 'none',\n        flexDirection : 'column',\n        alignItems: 'center',\n        backgroundColor: '#F1D4D4',\n        color: '#9C9D9C',\n        width: '50ch',\n        height: '75ch',\n        position: 'absolute',\n        top: 180,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        paddingTop: '3ch',\n    },\n    formField: {\n        width: '30ch',\n        marginBottom: '2ch',\n        backgroundColor: '#F6F5F5',\n        borderRadius: '10px',\n    },\n    label: {\n        marginLeft: '15px',\n    },\n    icon: {\n        marginRight: '10px',\n    },\n    checkbox: {\n        backgroundColor: 'white',\n        width: '40ch',\n        borderRadius: '10px',\n        padding: '10px',\n        marginBottom: '3ch',\n        marginTop: '1ch',\n    },\n    loginButton: {\n        backgroundColor: '#D75030',\n        width: '25ch',\n        color: 'white',\n        marginBottom: '6ch',\n        position: 'relative',\n        top: '20px',\n        '&:hover': {\n            backgroundColor: '#BF5438'\n        },\n    },\n    signupButton: {\n        backgroundColor: '#D75030',\n        width: '25ch',\n        color: 'white',\n        marginBottom: '2ch',\n        position: 'relative',\n        top: '-8px',\n        '&:hover': {\n            backgroundColor: '#BF5438'\n        },\n    },\n    link: {\n        color: '#D75030',\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n}));\n\n// LOGIQUE DU COMPOSANT :\nconst showSignup = () => { \n\tdocument.getElementById(\"login-form\").style.display=\"none\";\n\tdocument.getElementById(\"signup-form\").style.display=\"flex\"; \n    document.getElementById(\"logo\").style.marginTop=\"10ch\";\n};\n\nconst showLogin = () => { \n\tdocument.getElementById(\"login-form\").style.display=\"flex\";\n\tdocument.getElementById(\"signup-form\").style.display=\"none\"; \n    document.getElementById(\"logo\").style.marginTop=\"23ch\";\n}\n\nconst AuthForm = () => {\n\n        let history = useHistory();\n\n        //On crée les constantes login, password, etc et on les initialise. Ce sont des strings vides au départ mais elles seront mises à jour avec setName().\n        const [email, setEmail] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n        const [showPassword, setShowPassword] = useState(false);\n        const [firstname, setFirstname] = useState(\"\");\n        const [lastname, setLastname] = useState(\"\");\n        const [status, setStatus] = useState(\"\");\n        const [hiringDate, setHiringDate] = useState(\"\");\n\n        const classes = useStyles();\n\n        const handleLoginSubmit = (e) => {\n            //On place ici la logique à appliquer lorsque le user clique sur 'Se connecter'.\n            axios({\n                method: 'post',\n                url: UrlAPI + '/login',\n                data: { email : email, password: password}\n            })\n            .then(function (response) {\n                //On traite la suite une fois la réponse obtenue \n                console.log(response);\n            })\n            .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error);\n            });\n            history.push('/accueil');\n        };\n        const handleSignupSubmit = (e) => {\n            //On place ici la logique à appliquer lorsque le user clique sur 'S'inscrire'.\n            axios({\n                method: 'post',\n                url: UrlAPI + '/signup',\n                data: { email : email, password: password, firstname: firstname, lastname: lastname, status: status, hiringDate: hiringDate }\n            })\n            .then(function (response) {\n                //On traite la suite une fois la réponse obtenue \n                console.log(response);\n            })\n            .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error);\n            });\n            history.push('/accueil');\n        };\n\n        const handleClickShowPassword = () => {\n            setShowPassword(!showPassword);\n        };\n\n        const handleMouseDownPassword = (event) => {\n            event.preventDefault();\n        };\n\n        return (\n                <div id=\"form-container\">\n                    <img src={ logo } alt='[ logo Postmania ]' className={classes.logo} id=\"logo\" />\n                    <form id=\"login-form\" className={classes.loginRoot} noValidate autoComplete=\"off\">\n                        <FormControl className={clsx(classes.margin, classes.formField)}>\n                            <InputLabel className={classes.label} htmlFor=\"standard-adornment-login\">Email</InputLabel>\n                            <Input  className={classes.label} id=\"login-email-field\" type=\"email\" endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <AccountCircle className={classes.icon} />\n                                </InputAdornment>\n                            } onChange={(e) => setEmail(e.target.value)}/>\n                        </FormControl>\n                        <FormControl className={clsx(classes.margin, classes.formField)}>\n                            <InputLabel className={classes.label} htmlFor=\"standard-adornment-password\">Mot de passe</InputLabel>\n                            <Input className={classes.label} id=\"login-password-field\" type={showPassword ? 'text' : 'password'} endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton aria-label=\"toggle password visibility\" onClick={handleClickShowPassword} onMouseDown={handleMouseDownPassword}>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            } onChange={(e) => setPassword(e.target.value)}/>\n                        </FormControl>\n                        <Button size=\"large\" className={classes.loginButton} onClick={handleLoginSubmit}>Se connecter</Button>\n                        <Link className={classes.link} href=\"#\" onClick={showSignup} >Vous n'avez pas encore de compte ? S'inscrire.</Link>\n                    </form>\n                    <form id=\"signup-form\" className={classes.signupRoot} noValidate autoComplete=\"off\">\n                        <FormControl className={clsx(classes.margin, classes.formField)}>\n                            <InputLabel className={classes.label} htmlFor=\"standard-adornment-login\">Email</InputLabel>\n                            <Input className={classes.label} id=\"signup-email-field\" type=\"email\" endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <AccountCircle className={classes.icon} />\n                                </InputAdornment>\n                            } onChange={(e) => setEmail(e.target.value)}/>\n                        </FormControl>\n                        <FormControl className={clsx(classes.margin, classes.formField)}>\n                            <InputLabel className={classes.label} htmlFor=\"standard-adornment-password\">Mot de passe</InputLabel>\n                            <Input className={classes.label} id=\"signup-password-field\" type={showPassword ? 'text' : 'password'} endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton aria-label=\"toggle password visibility\" onClick={handleClickShowPassword} onMouseDown={handleMouseDownPassword}>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            } onChange={(e) => setPassword(e.target.value)}/>\n                        </FormControl>\n                        <FormControl className={clsx(classes.margin, classes.formField)}>\n                            <InputLabel className={classes.label} htmlFor=\"standard-adornment-firstname\">Prénom</InputLabel>\n                            <Input className={classes.label} id=\"firstname-field\" type=\"text\" onChange={(e) => setFirstname(e.target.value)}/>\n                        </FormControl>\n                        <FormControl className={clsx(classes.margin, classes.formField)}>\n                            <InputLabel className={classes.label} htmlFor=\"standard-adornment-lastname\">Nom</InputLabel>\n                            <Input className={classes.label} id=\"lastname-field\" type=\"text\" onChange={(e) => setLastname(e.target.value)}/>\n                        </FormControl>\n                        <FormControl className={clsx(classes.margin, classes.formField)}>\n                            <InputLabel className={classes.label} htmlFor=\"standard-adornment-status\">Statut</InputLabel>\n                            <Input className={classes.label} id=\"status-field\" type=\"text\" onChange={(e) => setStatus(e.target.value)}/>\n                            <FormHelperText className={classes.label} id=\"outlined-weight-helper-text\">Ex : Directeur commerciale.</FormHelperText>\n                        </FormControl>\n                        <FormControl className={clsx(classes.margin, classes.formField)}>\n                            <Input className={classes.label} id=\"hiringDate-field\" type=\"date\" onChange={(e) => setHiringDate(e.target.value)}/>\n                            <FormHelperText className={classes.label} id=\"outlined-weight-helper-text\">Date d'embauche</FormHelperText>\n                        </FormControl>\n                        <FormControl className={ classes.checkbox}>\n                            <FormControlLabel required control={ \n                                <Checkbox name=\"RGPD\" color=\"default\" inputProps={{ 'aria-label': 'checkbox with default color' }} />\n                                } label=\"En cochant cette case, je reconnais avoir pris connaissance de la charte RGPD de CAP Formation et en accepte les termes.\"/>\n                        </FormControl>\n                        <Button size=\"large\" className={classes.signupButton} onClick={handleSignupSubmit}>S'inscrire</Button>\n                        <Link className={classes.link} href=\"/\" onClick={showLogin} >Vous avez déjà un compte ? Se connecter.</Link>\n                    </form>\n                </div>\n        );\n    };\n\n\nexport default AuthForm;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js",["74","75","76","77"],"import React, { useState,useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from '../../header-logo.png';\nimport { Avatar, Link } from '@material-ui/core/';\nimport SearchBar from \"material-ui-search-bar\";\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE DU COMPOSANT :\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: '#F2D3D4',\n        height: '10ch',\n        justifyContent: 'space-between',\n        paddingLeft: '30px',\n        paddingRight: '30px',\n        zIndex: '2',\n    },\n    logo: {\n        height: '6ch',\n    },\n    leftPart: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n    },\n    centerPart: {\n        width: '50ch',\n        justifyContent: 'center',\n    },\n    rightPart: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    link: {\n        color: '#0E0C0C',\n        fontWeight: '500',\n        fontSize: '20px',\n        marginLeft: '15px',\n    },\n}));\n\n// LOGIQUE DU COMPOSANT :\nconst Header = () => {\n\n    const classes = useStyles();\n    const [users, setUsers] = useState();\n    const [search, setSearch] = useState();\n    const [searchInput, setSearchInput] = useState(\"\");\n    const [list, setList] = useState([]);\n\n    const searchOnChange = (value) => {\n        const found = list.find((user) => {\n            return (user.indexOf(value) !== -1);\n        });\n        console.log(\"search =>\", search);\n        setSearch(found);\n        setSearchInput(value);\n    };\n\n    const handleSearch = () => {\n        console.log(\"search..\");\n    };\n\n    useEffect ( () => {\n        axios.get(UrlAPI + 'users/' )\n        .then(result => result.data)\n        .then(data => {\n            const result = [];\n            data.forEach(element => {\n                result.push(element.firstname + ' ' + element.lastname);\n            });\n            setList(result);\n        });\n    }, []);\n\n    return (\n    <>\n        <div id=\"header-container\" className={ classes.root } >\n            <div id=\"left-part\" className={ classes.leftPart } >\n                <img src={ logo } alt='[ logo Postmania ]' className={classes.logo} id=\"logo\" />\n            </div>\n            <div id=\"center-part\" className={ classes.centerPart } >\n            <SearchBar\n            // dataSource={search} \n            // id=\"search-bar\" placeholder=\"Rechercher un collègue...\" value={searchInput} \n            // onChange={(value) => setSearch([ value, value+value, value+value+value])}\n            // style={{\n            //     margin: '0 auto',\n            //     maxWidth: 800\n            // }} \n            />               \n            </div>\n            {users && users.map(user => { \n                return <p key={user.id} >{user.firstname}</p>;})}\n            <div id=\"right-part\" className={ classes.rightPart } >\n                <Avatar alt=\"\" src=\"/static/images/avatar/1.jpg\" />\n                <Link className={classes.link} href=\"/\" >Se déconnecter</Link>\n            </div>\n        </div>\n    </>\n    );\n};\n\nexport default Header;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js",["78","79"],"import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport ProfilePageBodyContainer from '../components/PostAndTheme/ProfilePageBodyContainer';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <ProfilePageBodyContainer />\n        <Footer /> \n      </>\n    );\n  }\n};\n\nexport default Profile;\n","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js",["80","81"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Body.js",["82"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BodyContent from './BodyContent';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE DU COMPOSANT :\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#F2D3D4',\n        padding: '2ch',\n        width: '120ch',\n        margin: 'auto',\n        marginBottom: '10ch',\n    },\n    header: {\n        backgroundColor: '#D75030',\n        color: 'white',\n        width: '25ch',\n        padding: '2ch',\n        marginLeft: '3ch',\n        postion: 'relative',\n        textAlign: 'center',\n    },\n}));\n\n// LOGIQUE DU COMPOSANT :\nconst PostBody = ({post, user}) => {\n    //On initialise le state.\n    const [userProfile, setUserProfile] = useState();\n    //On fait une requête GET à l'API pour obtenir les infos du user concerné.\n    useEffect ( () => {\n        axios.get(UrlAPI + 'users/' + user)\n        .then(result => result.data)\n        .then(data => setUserProfile(data[0]));\n    }, []);\n\n    const classes = useStyles();\n    //Le composant retourne le post.\n    return(\n        <React.Fragment>\n            <div className={classes.root} > \n                <div className={classes.header}>\n                    <h2>User : {userProfile && userProfile.firstname} </h2>\n                </div>\n                <BodyContent content={post.content} />\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default PostBody;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js",["83"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// STYLE DU COMPOSANT :\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: 'white',\n        width: '110ch',\n        padding: '2ch',\n        marginLeft: '3ch',\n        marginRight: 'auto',\n    },\n}));\n\n// LOGIQUE DU COMPOSANT :\nconst BodyContent = props => {\n        \n    const classes = useStyles();\n    \n    return(\n        <div className={classes.root} >{props.content}</div>\n    );\n};\n\nexport default BodyContent;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js",["84","85","86"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button, Avatar } from '@material-ui/core';\nimport Post from './Post';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '60%',\n            position: 'relative',\n            paddingTop: '10ch',\n            margin: 'auto',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            '&:hover': {\n                backgroundColor: '#D35233',\n                color: 'white',\n            },\n        },\n        profileContainer: {\n            backgroundColor: '#FFFFFF',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            left: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n            textAlign: 'center',\n        },\n        avatar: {\n            margin: 'auto',\n            marginTop: '2ch',\n            width: '10ch',\n            height: '10ch',\n        },\n        userName: {\n            textDecoration: 'underline',\n            fontSize: '25px',\n            color: '#D75030',\n        },\n        list: {\n            listStyle: 'none',\n            color:'#545555',\n            marginLeft: '0',\n            lineHeight: '2',\n        },\n}));\n\n// LOGIQUE :\n\nconst PageBodyContainer = () => {\n    \n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const classes = useStyles();\n    \n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => result.data)\n        .then(data => setPostList(data));\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data))\n    }, []);\n\n    const handleFilter = (e) => {\n    };\n\n    return (\n        <>\n            <CssBaseline />\n            <div className= { classes.profileContainer }> \n                <Avatar alt=\"\" src=\"/static/images/avatar/1.jpg\" className= { classes.avatar } />\n                <h3 className= { classes.userName } >User name</h3>\n                <p className= { classes.list } >\n                    <b>Statut</b><br/>\n                    Date d'embauche<br/>\n                    Adresse mail<br/>\n                    <b>Téléphone</b><br/>\n                </p>\n            </div>\n            <div className= { classes.postContainer }>\n                {postList && postList.map(post => { \n                    return <Post key={post.id} post={post} />;\n                })}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                {themeList && themeList.map((theme) => { \n                    const themeId = theme.id;\n                    return (\n                        <Button key={theme.id} id={themeId} className={ classes.themeButton } onClick={handleFilter} > \n                            {theme && theme.name} \n                        </Button>\n                    )\n                })}\n            </div>\n        </>\n    )\n};\n\n//<Theme filter={props.filter}  key={theme.id} theme={theme} />\nexport default PageBodyContainer;",{"ruleId":"87","severity":1,"message":"88","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":15},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"87","severity":1,"message":"95","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"96","line":7,"column":10,"nodeType":"89","messageId":"90","endLine":7,"endColumn":19},{"ruleId":"87","severity":1,"message":"97","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":11},{"ruleId":"87","severity":1,"message":"88","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":15},{"ruleId":"87","severity":1,"message":"98","line":49,"column":19,"nodeType":"89","messageId":"90","endLine":49,"endColumn":27},{"ruleId":"87","severity":1,"message":"99","line":51,"column":12,"nodeType":"89","messageId":"90","endLine":51,"endColumn":23},{"ruleId":"87","severity":1,"message":"100","line":54,"column":11,"nodeType":"89","messageId":"90","endLine":54,"endColumn":25},{"ruleId":"87","severity":1,"message":"101","line":63,"column":11,"nodeType":"89","messageId":"90","endLine":63,"endColumn":23},{"ruleId":"87","severity":1,"message":"95","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"87","severity":1,"message":"102","line":2,"column":18,"nodeType":"89","messageId":"90","endLine":2,"endColumn":35},{"ruleId":"87","severity":1,"message":"96","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":23,"column":13,"nodeType":"105","messageId":"106","endLine":23,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":37,"column":8,"nodeType":"109","endLine":37,"endColumn":10,"suggestions":"110"},{"ruleId":"87","severity":1,"message":"111","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"96","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":24,"column":13,"nodeType":"105","messageId":"106","endLine":24,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":59,"column":13,"nodeType":"105","messageId":"106","endLine":59,"endColumn":21},"no-unused-vars","'Accueil' is defined but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'styled' is defined but never used.","'useParams' is defined but never used.","'App' is defined but never used.","'setUsers' is assigned a value but never used.","'searchInput' is assigned a value but never used.","'searchOnChange' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","'createGlobalStyle' is defined but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [user]",{"range":"117","text":"118"},[1051,1053],"[user]"]