[{"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js":"1","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js":"2","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js":"3","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js":"4","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js":"5","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js":"6","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js":"7","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js":"8","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js":"9","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js":"10","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js":"11","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Body.js":"12","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js":"13","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js":"14","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js":"15","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/SearchBox.js":"16","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Likes.js":"17","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Comments.js":"18"},{"size":573,"mtime":1610686777038,"results":"19","hashOfConfig":"20"},{"size":364,"mtime":1607610187552,"results":"21","hashOfConfig":"20"},{"size":5064,"mtime":1607610187552,"results":"22","hashOfConfig":"20"},{"size":983,"mtime":1610686747405,"results":"23","hashOfConfig":"20"},{"size":11748,"mtime":1610555442674,"results":"24","hashOfConfig":"20"},{"size":820,"mtime":1610820785639,"results":"25","hashOfConfig":"20"},{"size":2484,"mtime":1610809650682,"results":"26","hashOfConfig":"20"},{"size":979,"mtime":1608570968735,"results":"27","hashOfConfig":"20"},{"size":429,"mtime":1610686723443,"results":"28","hashOfConfig":"20"},{"size":5639,"mtime":1610822060404,"results":"29","hashOfConfig":"20"},{"size":231,"mtime":1610818384365,"results":"30","hashOfConfig":"20"},{"size":2495,"mtime":1610822057434,"results":"31","hashOfConfig":"20"},{"size":923,"mtime":1610454479416,"results":"32","hashOfConfig":"20"},{"size":8319,"mtime":1610822059478,"results":"33","hashOfConfig":"20"},{"size":7298,"mtime":1610694648172,"results":"34","hashOfConfig":"20"},{"size":910,"mtime":1610809787337,"results":"35","hashOfConfig":"20"},{"size":4318,"mtime":1610733265282,"results":"36","hashOfConfig":"20"},{"size":5278,"mtime":1610822058537,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1y60pkv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/index.js",[],["77","78"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/reportWebVitals.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/serviceWorkerRegistration.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/App.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/AuthForm/AuthForm.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Accueil.js",["79","80"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/Header.js",["81","82","83","84","85","86"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Footer/Footer.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/containers/Profile.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js",["87","88","89"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Post.js",["90"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Body.js",["91","92","93","94","95"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/BodyContent.js",[],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js",["96","97","98","99","100","101","102","103"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js",["104","105","106","107","108"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport ImageUploader from 'react-images-upload';\n\nconst UrlAPI = 'http://localhost:3000/api';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    createPostBlock: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '70%',\n            margin: 'auto',  \n            marginTop: '4ch',\n        },\n        createPostHeader: {\n            backgroundColor: '#D75030',\n            color: 'white',\n            width: '25%',\n            padding: '1ch',\n            textAlign: 'left',\n            fontSize: '12px',\n        },\n        createPostBody: {\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: '#F2D3D4',\n            padding: '2ch',\n            width: '100%',\n            margin: 'auto',\n            marginBottom: '10ch',\n        },\n        createPostBodyContent: {\n            backgroundColor: '#FFFFFE',\n            width: '95%',\n            margin: 'auto',\n            padding: '2ch',\n            textAlign: 'left',\n        },  \n        postTextarea: {\n            width: '100%',\n            height: 'auto',\n            fontFamily: 'Avenir, Segoe, UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n            border: 'none',\n            \"&:focus\": {\n                outline: 'none',\n            },\n        },\n        buttons: {\n            display: 'flex',\n            width: '95%',\n            height: '3.5ch',\n            margin: 'auto',\n            marginTop: '2ch',\n            justifyContent: 'space-between',\n        },\n        buttonsText: {\n            color: '#D75030',\n            fontWeight: '600',\n            fontSize: '14px',   \n            marginRight: '1ch',\n            marginTop: '0.5ch',\n        },\n        dropDownList: {\n            width: '30%',\n            backgroundColor: '#D75030',\n            borderStyle: 'none',\n            color: '#FFFFFE',\n            paddingLeft: '1ch',\n            marginRight: '1ch',\n            fontSize: '14px',   \n            cursor: 'pointer',\n        },\n        createTheme: {\n            color: '#686A6C',\n            width: '35%',\n            fontSize: '14px',   \n            borderStyle: 'none',\n            paddingLeft: '1ch',\n        },\n        publish: {\n            backgroundColor: '#D75030',\n            color: '#FFFFFE',\n            borderRadius: '5px',\n            width: '15%',\n            fontWeight: '400',\n            \"&:hover\": {\n                backgroundColor: '#B85030',\n            },\n        },\n}));\n\n// LOGIQUE :\n\nconst CreatePost = props => {\n\n    const classes = useStyles();\n    const [content, setContent] = useState('');\n    const [user, setUser] = useState('');\n    const [theme, setTheme] = useState('');\n    const [pictures, setPictures] = useState([]);\n\n    const currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    const handleChange = (event) => {\n        setTheme(event.target.value);\n    };\n\n    const handleContent = (event) => {\n        setContent(event.target.value);\n    };\n    \n    //Gestion d'import d'image(s) lors de la création d'un post.\n    const onDrop = picture => {\n        setPictures(picture);\n    };\n\n    const handlePublication = () => {\n            axios({\n                method: 'post',\n                url: UrlAPI + '/posts',\n                data: { content : content, theme: theme, user: currentUser.id }\n            })\n            .then(function (response) {\n                //On traite la suite une fois la réponse obtenue \n                let postId = response.data.id;\n                if (pictures.length >0) {\n                    const fd = new FormData();\n                    let pictureList = [];\n                    pictureList = pictures.map(p => {\n                        fd.append('image', p);\n                    });                    \n                    const config = {\n                        headers: {\n                            'Content-Type' : 'multipart/form-data'\n                        }\n                    }\n                     axios.post(UrlAPI + '/posts/' + postId + '/images', fd, config)\n                        .then(function (response) {\n                            console.log('image:', response);\n                        })\n                        .catch(function (error) {\n                            //On traite ici les erreurs éventuellement survenues\n                            console.log(error);\n                        });\n                }\n\n            })\n            .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error);\n            });\n        };\n\n    return(\n        <div className= { classes.createPostBlock }>\n            <div className={classes.createPostHeader}>\n                <h2>PUBLIER UN POST</h2>\n            </div>\n            <div className={classes.createPostBody} >\n                <div className={classes.createPostBodyContent} >\n                    <textarea className={classes.postTextarea} placeholder=\"Ecrivez le contenu de votre post ici...\" value={content} onChange={handleContent}/>\n                    <ImageUploader\n                        withIcon={false}\n                        buttonText='Ajoutez des images'\n                        onChange={onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                        withLabel={false}\n                        fileSizeError='Image trop volumineuse'\n                        buttonStyles={{backgroundColor: '#757575', borderRadius: '5px', position: \"relative\", margin: \"0\", height: '30px'}}\n                    />\n                </div>\n                <div className={classes.buttons}>\n                    <select className={classes.dropDownList} value={theme} placeholder=\"Choisissez un thème\" onChange={handleChange}>\n                        <option value=\"\" defaultValue data-default>Choisissez un thème</option>\n                        {props.themes && props.themes.map((theme) => { \n                        return (\n                            <option key={theme.id} value={theme.id}>{theme.name}</option>\n                        ); })}\n                    </select>\n                    <div className={classes.buttonsText}>OU</div>\n                    <input className={classes.createTheme} type=\"text\" id=\"new-theme\" placeholder=\"Saisissez un nouveau thème...\" />\n                    <Button onClick={handlePublication} className={classes.publish} >PUBLIER</Button>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n{/* <div \n    style={{ height: \"auto\", width: \"40ch\", border: \"dotted 1px black\", textAlign: \"center\" }} \n    onClick={() => imageUploader.current.click()  }\n>\n    Cliquez ici pour ajouter des images...\n    <img ref={uploadedImage} style={{ maxHeight: \"30ch\", maxWidth: \"40ch\", border: \"none\" }} />\n</div>\n<input \n    type=\"file\" \n    accept=\"image/*\" \n    multiple = \"true\" \n    ref={imageUploader} \n    style={{ display: \"none\" }}\n    onChange={handleImageUpload}\n/> */}\nexport default CreatePost;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/Header/SearchBox.js",["109","110","111"],"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Likes.js",["112","113","114","115","116","117","118","119","120","121"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\n\nconst UrlAPI = 'http://localhost:3000/api';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    mentionsBlock: {\n        display: 'flex',\n    },\n    mentionButton: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        backgroundColor: '#D64F30',\n        color: 'white',\n        height: '5ch',\n        width: '10%',\n        borderRadius: '5px',\n        marginRight: '1ch',\n        marginTop: '1ch',\n        paddingLeft: '2ch',\n        paddingRight: '2ch',\n        \"&:hover\": {\n            cursor: 'pointer',\n            backgroundColor: '#FF5F39',\n        },\n    },\n    mentionNumber: {\n        fontWeight: '800',\n        fontSize: '16px',\n    },\n}));\n\n// LOGIQUE :\n\nconst Likes = ({postId}) => {\n\n    const classes = useStyles();\n\n    const [mentions, setMentions] = useState({});\n    const [myMention, setMyMention] = useState(0);\n\n    let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    useEffect ( () => {\n        axios.get(UrlAPI + '/mentions/' + postId)\n        .then(res => { setMentions(res.data); })\n        .catch(err => console.log(err));\n\n        axios.get(UrlAPI + '/mentions/mine/' + postId + '/' + currentUser.id)\n        .then(result => result.data)\n        .then(data => setMyMention(data.mention) );\n\n    }, []);\n\n    const updateMyMention = (likedislike) => {\n        switch(myMention) {\n            case 0 :\n                if (likedislike == 1) {\n                    setMyMention(1);\n                    setMentions({ likes: mentions.likes+1, dislikes: mentions.dislikes });\n                } else if (likedislike == -1) {\n                    setMyMention(-1);\n                    setMentions({ likes: mentions.likes, dislikes: mentions.dislikes+1 });\n                }\n                break;\n            case 1 :\n                if (likedislike == 1) {\n                    setMyMention(0);\n                    setMentions({ likes: mentions.likes-1, dislikes: mentions.dislikes });\n                } else if (likedislike == -1) {\n                    setMyMention(-1);\n                    setMentions({ likes: mentions.likes-1, dislikes: mentions.dislikes+1 });\n                }\n                break;\n            case -1 :\n                if (likedislike == 1) {\n                    setMyMention(1);\n                    setMentions({ likes: mentions.likes+1, dislikes: mentions.dislikes-1 });\n                } else if (likedislike == -1) {\n                    setMyMention(0);\n                    setMentions({ likes: mentions.likes, dislikes: mentions.dislikes-1 });\n                }\n                break;\n        }\n    };\n\n    const handleLike = (e) => {\n        let name = e.target.getAttribute('name');\n        if(name == 'like') {\n            updateMyMention(1);\n            axios({\n                method: 'post',\n                url: UrlAPI + '/mentions/' + postId,\n                data: {user: currentUser.id, post: postId, mention: 1}\n            })\n            .then(result => result.data)\n            .catch(err => console.log(err));\n        } else if( name == 'dislike') {\n            updateMyMention(-1);\n            axios({\n                method: 'post',\n                url: UrlAPI + '/mentions/' + postId,\n                data: {user: currentUser.id, post: postId, mention: -1}\n            })\n            .then(result => result.data)\n            .catch(err => console.log(err));\n        } else {\n            return;\n        }\n    };\n    \n    return(\n        <>\n            <div className={classes.mentionsBlock}>\n                <div className={classes.mentionButton} name='like' onClick={handleLike}>\n                    <ThumbUpIcon />\n                    <span className={classes.mentionNumber}>{mentions.likes}</span>\n                </div>\n                <div className={classes.mentionButton} name='dislike' onClick={handleLike}>\n                    <ThumbDownIcon />\n                    <span className={classes.mentionNumber}>{mentions.dislikes}</span>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Likes;","/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Comments.js",["122","123","124","125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":13,"column":11,"nodeType":"132","messageId":"133","endLine":13,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":20,"column":6,"nodeType":"136","endLine":20,"endColumn":8,"suggestions":"137"},{"ruleId":"130","severity":1,"message":"138","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":13},{"ruleId":"130","severity":1,"message":"139","line":8,"column":7,"nodeType":"132","messageId":"133","endLine":8,"endColumn":13},{"ruleId":"130","severity":1,"message":"140","line":53,"column":12,"nodeType":"132","messageId":"133","endLine":53,"endColumn":21},{"ruleId":"130","severity":1,"message":"141","line":53,"column":23,"nodeType":"132","messageId":"133","endLine":53,"endColumn":35},{"ruleId":"134","severity":1,"message":"142","line":63,"column":8,"nodeType":"136","endLine":63,"endColumn":10,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":76,"column":21,"nodeType":"146","endLine":76,"endColumn":92},{"ruleId":"147","severity":1,"message":"148","line":98,"column":46,"nodeType":"149","messageId":"150","endLine":98,"endColumn":48},{"ruleId":"134","severity":1,"message":"151","line":113,"column":8,"nodeType":"136","endLine":113,"endColumn":10,"suggestions":"152"},{"ruleId":"147","severity":1,"message":"148","line":131,"column":121,"nodeType":"149","messageId":"150","endLine":131,"endColumn":123},{"ruleId":"130","severity":1,"message":"153","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"138","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":13},{"ruleId":"130","severity":1,"message":"139","line":9,"column":7,"nodeType":"132","messageId":"133","endLine":9,"endColumn":13},{"ruleId":"134","severity":1,"message":"154","line":59,"column":20,"nodeType":"155","endLine":59,"endColumn":47},{"ruleId":"134","severity":1,"message":"156","line":60,"column":19,"nodeType":"157","endLine":60,"endColumn":47},{"ruleId":"144","severity":1,"message":"145","line":74,"column":29,"nodeType":"146","endLine":74,"endColumn":100},{"ruleId":"158","severity":1,"message":"159","line":26,"column":13,"nodeType":"160","messageId":"150","endLine":26,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":72,"column":13,"nodeType":"160","messageId":"150","endLine":72,"endColumn":21},{"ruleId":"130","severity":1,"message":"161","line":142,"column":9,"nodeType":"132","messageId":"133","endLine":142,"endColumn":20},{"ruleId":"134","severity":1,"message":"154","line":163,"column":24,"nodeType":"155","endLine":163,"endColumn":51},{"ruleId":"134","severity":1,"message":"156","line":164,"column":23,"nodeType":"157","endLine":164,"endColumn":51},{"ruleId":"144","severity":1,"message":"145","line":191,"column":21,"nodeType":"146","endLine":191,"endColumn":147},{"ruleId":"147","severity":1,"message":"148","line":206,"column":79,"nodeType":"149","messageId":"150","endLine":206,"endColumn":81},{"ruleId":"147","severity":1,"message":"148","line":206,"column":164,"nodeType":"149","messageId":"150","endLine":206,"endColumn":166},{"ruleId":"130","severity":1,"message":"162","line":102,"column":12,"nodeType":"132","messageId":"133","endLine":102,"endColumn":16},{"ruleId":"130","severity":1,"message":"163","line":102,"column":18,"nodeType":"132","messageId":"133","endLine":102,"endColumn":25},{"ruleId":"130","severity":1,"message":"164","line":133,"column":21,"nodeType":"132","messageId":"133","endLine":133,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":133,"column":50,"nodeType":"167","messageId":"168","endLine":133,"endColumn":52},{"ruleId":"169","severity":1,"message":"170","line":195,"column":1,"nodeType":"171","messageId":"172","endLine":209,"endColumn":7},{"ruleId":"130","severity":1,"message":"153","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"138","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":13},{"ruleId":"130","severity":1,"message":"173","line":10,"column":9,"nodeType":"132","messageId":"133","endLine":10,"endColumn":16},{"ruleId":"134","severity":1,"message":"174","line":59,"column":8,"nodeType":"136","endLine":59,"endColumn":10,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":62,"column":9,"nodeType":"178","messageId":"179","endLine":90,"endColumn":10},{"ruleId":"147","severity":1,"message":"148","line":64,"column":33,"nodeType":"149","messageId":"150","endLine":64,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":67,"column":40,"nodeType":"149","messageId":"150","endLine":67,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":73,"column":33,"nodeType":"149","messageId":"150","endLine":73,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":76,"column":40,"nodeType":"149","messageId":"150","endLine":76,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":82,"column":33,"nodeType":"149","messageId":"150","endLine":82,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":85,"column":40,"nodeType":"149","messageId":"150","endLine":85,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":95,"column":17,"nodeType":"149","messageId":"150","endLine":95,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":104,"column":25,"nodeType":"149","messageId":"150","endLine":104,"endColumn":27},{"ruleId":"158","severity":1,"message":"180","line":80,"column":9,"nodeType":"160","messageId":"150","endLine":80,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":97,"column":15,"nodeType":"132","messageId":"133","endLine":97,"endColumn":23},{"ruleId":"134","severity":1,"message":"181","line":109,"column":8,"nodeType":"136","endLine":109,"endColumn":10,"suggestions":"182"},{"ruleId":"147","severity":1,"message":"148","line":136,"column":66,"nodeType":"149","messageId":"150","endLine":136,"endColumn":68},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userList'. Either include it or remove the dependency array.","ArrayExpression",["185"],"'axios' is defined but never used.","'UrlAPI' is assigned a value but never used.","'userInfos' is assigned a value but never used.","'setUserInfos' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.profilePic.data'. Either include it or remove the dependency array.",["186"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getUser' and 'users'. Either include them or remove the dependency array.",["187"],"'useEffect' is defined but never used.","Assignments to the 'buff' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'src' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","'currentUser' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'pictureList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.id' and 'postId'. Either include them or remove the dependency array.",["188"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Duplicate key 'paddingLeft'.","React Hook useEffect has missing dependencies: 'postId' and 'userList'. Either include them or remove the dependency array.",["189"],"no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [userList]",{"range":"200","text":"201"},"Update the dependencies array to be: [currentUser.profilePic.data]",{"range":"202","text":"203"},"Update the dependencies array to be: [getUser, users]",{"range":"204","text":"205"},"Update the dependencies array to be: [currentUser.id, postId]",{"range":"206","text":"207"},"Update the dependencies array to be: [postId, userList]",{"range":"208","text":"209"},[610,612],"[userList]",[1560,1562],"[currentUser.profilePic.data]",[3203,3205],"[getUser, users]",[1554,1556],"[currentUser.id, postId]",[2821,2823],"[postId, userList]"]