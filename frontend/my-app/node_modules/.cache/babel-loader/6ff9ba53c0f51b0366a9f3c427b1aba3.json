{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\nconst UrlAPI = 'http://localhost:3000/api/'; // STYLE :\n\nconst useStyles = makeStyles(() => ({\n  postContainer: {\n    width: '80%',\n    position: 'relative',\n    paddingTop: '10ch'\n  },\n  themeContainer: {\n    backgroundColor: '#F1D4D4',\n    width: '20%',\n    height: '100%',\n    position: 'fixed',\n    right: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch'\n  },\n  themeContainerHeader: {\n    backgroundColor: '#D7502F',\n    color: 'white',\n    fontSize: '28px',\n    fontWeight: '600',\n    textAlign: 'center',\n    padding: '1ch'\n  },\n  themeFlexBox: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    height: '100%'\n  },\n  themeButton: {\n    backgroundColor: '#FFFFFE',\n    color: '#696A6B',\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    \"&:hover\": {\n      backgroundColor: '#D35233',\n      color: '#FFFFFE'\n    }\n  },\n  activeTheme: {\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    backgroundColor: '#D35233',\n    color: 'white'\n  },\n  cancelAllFilters: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#D35233',\n    color: 'white',\n    \"&:hover\": {\n      backgroundColor: '#D3674D'\n    }\n  }\n})); // LOGIQUE :\n\nconst PageBodyContainer = () => {\n  _s();\n\n  const [postList, setPostList] = useState(null);\n  const [themeList, setThemeList] = useState(null);\n  const [selectedThemes, setSelectedThemes] = useState([]);\n  const [userList, setUserList] = useState();\n  const classes = useStyles(); //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'posts').then(result => result.data).then(data => setPostList(data));\n  }, []); //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'themes').then(result => result.data).then(data => setThemeList(data));\n  }, []);\n\n  const cancelFilters = () => {\n    setSelectedThemes([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postContainer,\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        themes: themeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), postList && postList.filter(post => selectedThemes.includes(post.theme) || selectedThemes.length == 0).map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.themeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.themeContainerHeader,\n        children: \"TH\\xC8MES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.themeFlexBox,\n        children: [themeList && themeList.map(theme => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            className: selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton,\n            onClick: () => {\n              if (!selectedThemes.includes(theme.id)) {\n                setSelectedThemes([...selectedThemes, theme.id]);\n              } else {\n                setSelectedThemes(selectedThemes.filter(item => {\n                  return item !== theme.id;\n                }));\n              }\n            },\n            children: theme && theme.name\n          }, theme.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.cancelAllFilters,\n          onClick: cancelFilters,\n          children: \"Retirer tous les filtres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PageBodyContainer, \"wq55mow2esfAnxUlXHhZq6C2y+o=\", false, function () {\n  return [useStyles];\n});\n\n_c = PageBodyContainer;\nexport default PageBodyContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBodyContainer\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js"],"names":["React","useState","useEffect","makeStyles","CssBaseline","Button","Post","CreatePost","axios","UrlAPI","useStyles","postContainer","width","position","paddingTop","themeContainer","backgroundColor","height","right","top","marginTop","paddingLeft","paddingRight","themeContainerHeader","color","fontSize","fontWeight","textAlign","padding","themeFlexBox","display","flexWrap","alignItems","alignContent","themeButton","maxWidth","margin","activeTheme","cancelAllFilters","alignSelf","PageBodyContainer","postList","setPostList","themeList","setThemeList","selectedThemes","setSelectedThemes","userList","setUserList","classes","get","then","result","data","cancelFilters","filter","post","includes","theme","length","map","id","item","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '80%',\n            position: 'relative',\n            paddingTop: '10ch',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeFlexBox: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            alignItems: 'flex-start',\n            alignContent: 'flex-start',\n            height: '100%',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            \"&:hover\": {\n                backgroundColor: '#D35233',\n                color: '#FFFFFE',\n            },\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n        cancelAllFilters: {\n            alignSelf: 'flex-end',\n            backgroundColor: '#D35233',\n            color: 'white',\n            \"&:hover\": {\n                backgroundColor: '#D3674D'\n            },\n            \n        },\n\n}));\n\n// LOGIQUE :\n\nconst PageBodyContainer = () => {\n    \n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n    const [userList, setUserList] = useState();\n\n    const classes = useStyles();\n    \n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => result.data)\n        .then(data => setPostList(data));\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data))\n    }, []);\n\n    const cancelFilters = () => {\n        setSelectedThemes([]);\n    };\n\n    return (\n        <>\n            <CssBaseline />\n                <div className= { classes.postContainer }>\n                <CreatePost themes={themeList} />\n                {postList && postList.filter(post => ((selectedThemes.includes(post.theme))||(selectedThemes.length == 0))).map(post => { \n                    return <Post key={post.id} post={post} />;\n                })}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                    <div className={classes.themeFlexBox}>\n                        {themeList && themeList.map((theme) => { \n                            return (\n                                <Button key={theme.id} \n                                    className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                                    onClick={() => { \n                                        if (!selectedThemes.includes(theme.id)) {\n                                            setSelectedThemes([...selectedThemes, theme.id]);\n                                        }\n                                        else {\n                                            setSelectedThemes(selectedThemes.filter(item => { \n                                                return item !== theme.id; \n                                            }));\n                                        }\n                                    }} > \n                                    {theme && theme.name} \n                                </Button>\n                            )\n                        })}\n                        <Button className={classes.cancelAllFilters} onClick={cancelFilters} >Retirer tous les filtres</Button>\n                    </div>\n            </div>\n        </>\n    )\n};\n\nexport default PageBodyContainer;"]},"metadata":{},"sourceType":"module"}