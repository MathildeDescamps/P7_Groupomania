{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button, Avatar } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\nimport FetchBlob from 'fetch-blob';\nconst UrlAPI = 'http://localhost:3000/api/'; // STYLE :\n\nconst useStyles = makeStyles(() => ({\n  postContainer: {\n    width: '60%',\n    position: 'relative',\n    paddingTop: '10ch',\n    margin: 'auto'\n  },\n  themeContainer: {\n    backgroundColor: '#F1D4D4',\n    width: '20%',\n    height: '100%',\n    position: 'absolute',\n    position: 'fixed',\n    right: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch'\n  },\n  themeContainerHeader: {\n    backgroundColor: '#D7502F',\n    color: 'white',\n    fontSize: '28px',\n    fontWeight: '600',\n    textAlign: 'center',\n    padding: '1ch'\n  },\n  themeButton: {\n    backgroundColor: '#FFFFFE',\n    color: '#696A6B',\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    \"&:hover\": {\n      backgroundColor: '#D35233',\n      color: '#FFFFFE'\n    }\n  },\n  activeTheme: {\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    backgroundColor: '#D35233',\n    color: 'white'\n  },\n  profileContainer: {\n    backgroundColor: '#FFFFFF',\n    width: '20%',\n    height: '100%',\n    position: 'absolute',\n    position: 'fixed',\n    left: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch',\n    textAlign: 'center'\n  },\n  avatar: {\n    margin: 'auto',\n    marginTop: '2ch',\n    width: '10ch',\n    height: '10ch',\n    \"&>span\": {\n      display: \"none\"\n    },\n    \"&:hover\": {\n      //opacity: '0.5',\n      \"&>span\": {\n        display: 'block',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      },\n      \"&>#avatar\": {\n        display: 'none'\n      }\n    }\n  },\n  userName: {\n    textDecoration: 'underline',\n    fontSize: '25px',\n    color: '#D75030'\n  },\n  list: {\n    listStyle: 'none',\n    color: '#545555',\n    marginLeft: '0',\n    lineHeight: '2'\n  }\n})); // LOGIQUE :\n\nconst PageBodyContainer = () => {\n  _s();\n\n  //On initialise le state.\n  const [postList, setPostList] = useState(null);\n  const [themeList, setThemeList] = useState(null);\n  const [selectedThemes, setSelectedThemes] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const classes = useStyles(); //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'posts').then(result => {\n      return result.data;\n    }).then(data => setPostList(data));\n  }, []); //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'themes').then(result => result.data).then(data => setThemeList(data));\n  }, []); //On récupère la liste des users que l'on stocke dans le tableau 'userList'.\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'users').then(result => result.data).then(data => setUserList(data));\n  }, []);\n  let url = window.location.pathname;\n  let userClicked = url.split('profile/')[1];\n\n  const findUserClicked = i => {\n    userList.forEach(user => {\n      if (user.id == userClicked) {\n        userClicked = user;\n      } else {\n        return;\n      }\n    });\n  };\n\n  findUserClicked();\n  const [image, setImage] = useState(\"\");\n  const inputFile = useRef(null);\n\n  const handleFileUpload = e => {\n    const {\n      files\n    } = e.target;\n\n    if (files && files.length) {\n      const fd = new FormData();\n      const imageFile = files[0].name;\n      fd.append('image', files[0]);\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      axios.post(UrlAPI + 'users/' + userClicked.id + '/image', fd, config).then(function (response) {\n        console.log('image:', imageFile);\n        const fs = FetchBlob.fs;\n        let imagePath = null;\n        FetchBlob.fetch(\"GET\", window.location + '/images/' + imageFile) // the image is now dowloaded to device's storage\n        .then(resp => {\n          // the image path you can use it directly with Image component\n          imagePath = resp.path();\n          return resp.readFile(\"base64\");\n        }).then(base64Data => {\n          // here's base64 encoded image\n          console.log(base64Data); // remove the file from storage\n\n          return fs.unlink(imagePath);\n        });\n      }).catch(function (error) {\n        //On traite ici les erreurs éventuellement survenues\n        console.log(error);\n      });\n    }\n  }; // const onButtonClick = () => {\n  //     inputFile.current.click();\n  // };\n  //                 <span onClick={onButtonClick}>\n  //                     Modifier\n  //                 </span>\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.profileContainer,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n          style: {\n            fontSize: 60\n          },\n          id: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: 'block'\n          },\n          ref: inputFile,\n          onChange: handleFileUpload,\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.userName,\n        children: [userClicked.firstname + ' ' + userClicked.lastname, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.list,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: userClicked.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Date d'embauche :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), \" \", userClicked.hiringDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), \" \", userClicked.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postContainer,\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        themes: themeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), postList && postList.filter(post => post.user == userClicked.id && (selectedThemes.includes(post.theme) || selectedThemes.length == 0)).map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.themeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.themeContainerHeader,\n        children: \"TH\\xC8MES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), themeList && themeList.map(theme => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton,\n          onClick: props => {\n            if (!selectedThemes.includes(theme.id)) {\n              setSelectedThemes([...selectedThemes, theme.id]);\n            } else {\n              setSelectedThemes(selectedThemes.filter(item => {\n                return item !== theme.id;\n              }));\n            }\n          },\n          children: theme && theme.name\n        }, theme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; //<Theme filter={props.filter}  key={theme.id} theme={theme} />\n\n\n_s(PageBodyContainer, \"Yy9Kdx7TE13lG2k7qyQfPB5rWcM=\", false, function () {\n  return [useStyles];\n});\n\n_c = PageBodyContainer;\nexport default PageBodyContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBodyContainer\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js"],"names":["React","useState","useEffect","useRef","useParams","makeStyles","CssBaseline","Button","Avatar","PersonIcon","Post","CreatePost","axios","FetchBlob","UrlAPI","useStyles","postContainer","width","position","paddingTop","margin","themeContainer","backgroundColor","height","right","top","marginTop","paddingLeft","paddingRight","themeContainerHeader","color","fontSize","fontWeight","textAlign","padding","themeButton","maxWidth","activeTheme","profileContainer","left","avatar","display","textDecoration","cursor","userName","list","listStyle","marginLeft","lineHeight","PageBodyContainer","postList","setPostList","themeList","setThemeList","selectedThemes","setSelectedThemes","userList","setUserList","classes","get","then","result","data","url","window","location","pathname","userClicked","split","findUserClicked","i","forEach","user","id","image","setImage","inputFile","handleFileUpload","e","files","target","length","fd","FormData","imageFile","name","append","config","headers","post","response","console","log","fs","imagePath","fetch","resp","path","readFile","base64Data","unlink","catch","error","firstname","lastname","status","hiringDate","email","filter","includes","theme","map","props","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button, Avatar } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\nimport FetchBlob from 'fetch-blob';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '60%',\n            position: 'relative',\n            paddingTop: '10ch',\n            margin: 'auto',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            \"&:hover\": {\n                backgroundColor: '#D35233',\n                color: '#FFFFFE',\n            },\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n        profileContainer: {\n            backgroundColor: '#FFFFFF',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            left: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n            textAlign: 'center',\n        },\n        avatar: {\n            margin: 'auto',\n            marginTop: '2ch',\n            width: '10ch',\n            height: '10ch',\n            \"&>span\": {\n                display: \"none\",\n            },\n            \"&:hover\": {\n                //opacity: '0.5',\n                \"&>span\": {\n                    display: 'block',\n                    textDecoration: 'underline',\n                    cursor: 'pointer',\n                },\n                \"&>#avatar\": {\n                    display: 'none',\n                },\n            },\n        },\n        userName: {\n            textDecoration: 'underline',\n            fontSize: '25px',\n            color: '#D75030',\n        },\n        list: {\n            listStyle: 'none',\n            color:'#545555',\n            marginLeft: '0',\n            lineHeight: '2',\n        },\n}));\n\n// LOGIQUE :\n\nconst PageBodyContainer = () => {\n        \n    //On initialise le state.\n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n    const [userList, setUserList] = useState([]);\n\n    const classes = useStyles();\n\n    \n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => {\n            return result.data;\n        })\n        .then(data => setPostList(data));\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data));\n    }, []);\n\n    //On récupère la liste des users que l'on stocke dans le tableau 'userList'.\n    useEffect ( () => {\n        axios.get(UrlAPI + 'users')\n        .then(result => result.data)\n        .then(data => setUserList(data));\n    }, []);\n\n    let url = window.location.pathname;\n    let userClicked = url.split('profile/')[1];\n\n    const findUserClicked = (i) => {\n        userList.forEach(user => {\n            if (user.id == userClicked) {\n                userClicked = user;\n            } else { return; }\n        });\n    };\n\n    findUserClicked();\n\n    const [image, setImage] = useState(\"\");\n    const inputFile = useRef(null);\n\n    const handleFileUpload = e => {\n        const { files } = e.target;\n        if (files && files.length) {\n            const fd = new FormData();\n            const imageFile = files[0].name\n            fd.append('image',files[0]);\n            const config = {\n                headers: {\n                    'Content-Type' : 'multipart/form-data'\n                }\n            }\n            axios.post(UrlAPI + 'users/'+userClicked.id+'/image', fd, config)\n            .then(function (response) {\n                console.log('image:', imageFile);\n                const fs = FetchBlob.fs;\n                let imagePath = null;\n                FetchBlob.fetch(\"GET\", window.location + '/images/' + imageFile)\n                // the image is now dowloaded to device's storage\n                .then(resp => {\n                    // the image path you can use it directly with Image component\n                    imagePath = resp.path();\n                    return resp.readFile(\"base64\");\n                })\n                .then(base64Data => {\n                    // here's base64 encoded image\n                    console.log(base64Data);\n                    // remove the file from storage\n                    return fs.unlink(imagePath);\n                });\n            })\n            .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error);\n            });\n        }\n    };\n\n    // const onButtonClick = () => {\n    //     inputFile.current.click();\n    // };\n    //                 <span onClick={onButtonClick}>\n    //                     Modifier\n    //                 </span>\n\n    return (\n        <>\n            <CssBaseline />\n            <div className= { classes.profileContainer }> \n                <Avatar className= { classes.avatar } >\n                    <PersonIcon style={{fontSize: 60}} id=\"avatar\"/>\n\n                    <input style={{ display: 'block' }} ref={inputFile} onChange={handleFileUpload} type=\"file\" />\n                </Avatar>\n                <h3 className= { classes.userName }>{userClicked.firstname + ' ' + userClicked.lastname}  </h3>\n                <p className= { classes.list } >\n                    <b>{userClicked.status}</b><br/>\n                    <b>Date d'embauche :</b> {userClicked.hiringDate}<br/>\n                    <b>Email :</b> {userClicked.email}<br/>\n                </p>\n            </div>\n            <div className= { classes.postContainer }>\n                <CreatePost themes={themeList} />\n                {postList && postList.filter(post => ((post.user == userClicked.id) && ((selectedThemes.includes(post.theme)) || (selectedThemes.length == 0)))).map(post => \n                    { \n                        return <Post key={post.id} post={post} />;\n                    }\n                )}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                {themeList && themeList.map((theme) => { \n                    return (\n                        <Button key={theme.id} \n                            className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                            onClick={(props) => { \n                                if (!selectedThemes.includes(theme.id)) {\n                                    setSelectedThemes([...selectedThemes, theme.id]);\n                                }\n                                else {\n                                    setSelectedThemes(selectedThemes.filter(item => { \n                                        return item !== theme.id; \n                                    }));\n                                }\n                            }} > \n                            {theme && theme.name} \n                        </Button>\n                    )\n                })}\n            </div>\n        </>\n    );\n};\n\n//<Theme filter={props.filter}  key={theme.id} theme={theme} />\nexport default PageBodyContainer;"]},"metadata":{},"sourceType":"module"}