{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button, Avatar } from '@material-ui/core';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\nconst UrlAPI = 'http://localhost:3000/api/'; // STYLE :\n\nconst useStyles = makeStyles(() => ({\n  postContainer: {\n    width: '60%',\n    position: 'relative',\n    paddingTop: '10ch',\n    margin: 'auto'\n  },\n  themeContainer: {\n    backgroundColor: '#F1D4D4',\n    width: '20%',\n    height: '100%',\n    position: 'absolute',\n    position: 'fixed',\n    right: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch'\n  },\n  themeContainerHeader: {\n    backgroundColor: '#D7502F',\n    color: 'white',\n    fontSize: '28px',\n    fontWeight: '600',\n    textAlign: 'center',\n    padding: '1ch'\n  },\n  themeButton: {\n    backgroundColor: '#FFFFFE',\n    color: '#696A6B',\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    \"&:hover\": {\n      backgroundColor: '#D35233',\n      color: '#FFFFFE'\n    }\n  },\n  activeTheme: {\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    backgroundColor: '#D35233',\n    color: 'white'\n  },\n  profileContainer: {\n    backgroundColor: '#FFFFFF',\n    width: '20%',\n    height: '100%',\n    position: 'absolute',\n    position: 'fixed',\n    left: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch',\n    textAlign: 'center'\n  },\n  avatar: {\n    margin: 'auto',\n    marginTop: '2ch',\n    width: '10ch',\n    height: '10ch',\n    \"&>span\": {\n      display: \"none\"\n    },\n    \"&:hover\": {\n      //opacity: '0.5',\n      \"&>span\": {\n        display: 'bloc'\n      }\n    }\n  },\n  userName: {\n    textDecoration: 'underline',\n    fontSize: '25px',\n    color: '#D75030'\n  },\n  list: {\n    listStyle: 'none',\n    color: '#545555',\n    marginLeft: '0',\n    lineHeight: '2'\n  }\n})); // LOGIQUE :\n\nconst PageBodyContainer = () => {\n  _s();\n\n  //On initialise le state.\n  const [postList, setPostList] = useState(null);\n  const [themeList, setThemeList] = useState(null);\n  const [selectedThemes, setSelectedThemes] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const classes = useStyles(); //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'posts').then(result => {\n      return result.data;\n    }).then(data => setPostList(data));\n  }, []); //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'themes').then(result => result.data).then(data => setThemeList(data));\n  }, []); //On récupère la liste des users que l'on stocke dans le tableau 'userList'.\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'users').then(result => result.data).then(data => setUserList(data));\n  }, []);\n  let url = window.location.pathname;\n  let userClicked = url.split('profile/')[1];\n\n  const findUserClicked = i => {\n    userList.forEach(user => {\n      if (user.id == userClicked) {\n        userClicked = user;\n      } else {\n        return;\n      }\n    });\n  };\n\n  findUserClicked();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.profileContainer,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        alt: \"\",\n        src: \"/static/images/avatar/1.jpg\",\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.avatarHover,\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 97\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.userName,\n        children: [userClicked.firstname + ' ' + userClicked.lastname, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.list,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: userClicked.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Date d'embauche :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), \" \", userClicked.hiringDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), \" \", userClicked.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postContainer,\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        themes: themeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), postList && postList.filter(post => selectedThemes.includes(post.theme) || selectedThemes.length == 0).map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.themeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.themeContainerHeader,\n        children: \"TH\\xC8MES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), themeList && themeList.map(theme => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton,\n          onClick: props => {\n            if (!selectedThemes.includes(theme.id)) {\n              setSelectedThemes([...selectedThemes, theme.id]);\n            } else {\n              setSelectedThemes(selectedThemes.filter(item => {\n                return item !== theme.id;\n              }));\n            }\n          },\n          children: theme && theme.name\n        }, theme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; //<Theme filter={props.filter}  key={theme.id} theme={theme} />\n\n\n_s(PageBodyContainer, \"UxsM13+cVSGEOxx273lcogSLFME=\", false, function () {\n  return [useStyles];\n});\n\n_c = PageBodyContainer;\nexport default PageBodyContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBodyContainer\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js"],"names":["React","useState","useEffect","useParams","makeStyles","CssBaseline","Button","Avatar","Post","CreatePost","axios","UrlAPI","useStyles","postContainer","width","position","paddingTop","margin","themeContainer","backgroundColor","height","right","top","marginTop","paddingLeft","paddingRight","themeContainerHeader","color","fontSize","fontWeight","textAlign","padding","themeButton","maxWidth","activeTheme","profileContainer","left","avatar","display","userName","textDecoration","list","listStyle","marginLeft","lineHeight","PageBodyContainer","postList","setPostList","themeList","setThemeList","selectedThemes","setSelectedThemes","userList","setUserList","classes","get","then","result","data","url","window","location","pathname","userClicked","split","findUserClicked","i","forEach","user","id","avatarHover","firstname","lastname","status","hiringDate","email","filter","post","includes","theme","length","map","props","item","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button, Avatar } from '@material-ui/core';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '60%',\n            position: 'relative',\n            paddingTop: '10ch',\n            margin: 'auto',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            \"&:hover\": {\n                backgroundColor: '#D35233',\n                color: '#FFFFFE',\n            },\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n        profileContainer: {\n            backgroundColor: '#FFFFFF',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            left: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n            textAlign: 'center',\n        },\n        avatar: {\n            margin: 'auto',\n            marginTop: '2ch',\n            width: '10ch',\n            height: '10ch',\n            \"&>span\": {\n                display: \"none\",\n            },\n            \"&:hover\": {\n                //opacity: '0.5',\n                \"&>span\": {\n                    display: 'bloc',\n                }\n            },\n        },\n        userName: {\n            textDecoration: 'underline',\n            fontSize: '25px',\n            color: '#D75030',\n        },\n        list: {\n            listStyle: 'none',\n            color:'#545555',\n            marginLeft: '0',\n            lineHeight: '2',\n        },\n}));\n\n// LOGIQUE :\n\nconst PageBodyContainer = () => {\n        \n    //On initialise le state.\n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n    const [userList, setUserList] = useState([]);\n\n    const classes = useStyles();\n\n    \n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => {\n            return result.data;\n        })\n        .then(data => setPostList(data));\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data));\n    }, []);\n\n    //On récupère la liste des users que l'on stocke dans le tableau 'userList'.\n    useEffect ( () => {\n        axios.get(UrlAPI + 'users')\n        .then(result => result.data)\n        .then(data => setUserList(data));\n    }, []);\n\n    let url = window.location.pathname;\n    let userClicked = url.split('profile/')[1];\n\n    const findUserClicked = (i) => {\n        userList.forEach(user => {\n            if (user.id == userClicked) {\n                userClicked = user;\n            } else { return; }\n        });\n    };\n\n    findUserClicked();\n\n    return (\n        <>\n            <CssBaseline />\n            <div className= { classes.profileContainer }> \n                <Avatar alt=\"\" src=\"/static/images/avatar/1.jpg\" className= { classes.avatar } ><span className= { classes.avatarHover }>Modifier</span></Avatar>\n                <h3 className= { classes.userName }>{userClicked.firstname + ' ' + userClicked.lastname}  </h3>\n                <p className= { classes.list } >\n                    <b>{userClicked.status}</b><br/>\n                    <b>Date d'embauche :</b> {userClicked.hiringDate}<br/>\n                    <b>Email :</b> {userClicked.email}<br/>\n                </p>\n            </div>\n            <div className= { classes.postContainer }>\n                <CreatePost themes={themeList} />\n                {postList && postList.filter(post => ((selectedThemes.includes(post.theme))||(selectedThemes.length == 0))).map(post => { \n                    return <Post key={post.id} post={post} />;\n                })}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                {themeList && themeList.map((theme) => { \n                    return (\n                        <Button key={theme.id} \n                            className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                            onClick={(props) => { \n                                if (!selectedThemes.includes(theme.id)) {\n                                    setSelectedThemes([...selectedThemes, theme.id]);\n                                }\n                                else {\n                                    setSelectedThemes(selectedThemes.filter(item => { \n                                        return item !== theme.id; \n                                    }));\n                                }\n                            }} > \n                            {theme && theme.name} \n                        </Button>\n                    )\n                })}\n            </div>\n        </>\n    )\n};\n\n//<Theme filter={props.filter}  key={theme.id} theme={theme} />\nexport default PageBodyContainer;"]},"metadata":{},"sourceType":"module"}