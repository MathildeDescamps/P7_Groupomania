{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport ImageUploader from 'react-images-upload';\nconst UrlAPI = 'http://localhost:3000/api/'; // STYLE :\n\nconst useStyles = makeStyles(theme => ({\n  createPostBlock: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100ch',\n    margin: 'auto'\n  },\n  createPostHeader: {\n    backgroundColor: '#D75030',\n    color: 'white',\n    width: '30ch',\n    padding: '2ch',\n    textAlign: 'center',\n    fontSize: '12px'\n  },\n  createPostBody: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#F2D3D4',\n    padding: '2ch',\n    width: '100%',\n    margin: 'auto',\n    marginBottom: '10ch'\n  },\n  createPostBodyContent: {\n    backgroundColor: '#FFFFFE',\n    width: '95%',\n    margin: 'auto',\n    padding: '2ch',\n    textAlign: 'left'\n  },\n  postContentInput: {\n    width: '100%',\n    height: 'auto',\n    border: 'none',\n    \"&:focus\": {\n      outline: 'none'\n    }\n  },\n  buttons: {\n    display: 'flex',\n    width: '95%',\n    height: '3ch',\n    margin: 'auto',\n    marginTop: '2ch',\n    justifyContent: 'space-between'\n  },\n  buttonsText: {\n    color: '#D75030',\n    fontWeight: '600',\n    fontSize: '14px',\n    marginRight: '1ch'\n  },\n  dropDownList: {\n    width: '30%',\n    backgroundColor: '#D75030',\n    borderStyle: 'none',\n    color: '#FFFFFE',\n    paddingLeft: '1ch',\n    marginRight: '1ch',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  createTheme: {\n    color: '#686A6C',\n    width: '35%',\n    fontSize: '14px',\n    borderStyle: 'none',\n    paddingLeft: '1ch'\n  },\n  publish: {\n    backgroundColor: '#D75030',\n    color: '#FFFFFE',\n    borderRadius: '0',\n    width: '20%',\n    \"&:hover\": {\n      backgroundColor: '#B85030'\n    }\n  }\n})); // LOGIQUE :\n\nconst CreatePost = props => {\n  _s();\n\n  const classes = useStyles();\n  const [newPost, setNewPost] = useState('');\n  const [pictures, setPictures] = useState([]);\n\n  const handleChange = event => {\n    setNewPostTheme(event.target.value);\n    console.log(newPostTheme);\n  }; //Gestion d'import d'image(s) lors de la crÃ©ation d'un post.\n\n\n  const onDrop = picture => {\n    setPictures(pictures.concat(picture));\n  };\n\n  useEffect(() => {\n    axios.post(UrlAPI + 'posts').then(result => result.data).then(data => setPostList(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.createPostBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createPostHeader,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PUBLIER UN POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createPostBody,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.createPostBodyContent,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: classes.postContentInput,\n          placeholder: \"Ecrivez le contenu de votre post ici...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n          withIcon: false,\n          buttonText: \"Ajoutez des images\",\n          onChange: onDrop,\n          imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n          maxFileSize: 5242880,\n          withPreview: true,\n          withLabel: false,\n          fileSizeError: \"Image trop volumineuse\",\n          buttonStyles: {\n            backgroundColor: '#757575',\n            borderRadius: '0',\n            position: \"relative\",\n            marginLeft: \"0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: classes.dropDownList,\n          value: newPostTheme,\n          placeholder: \"Choisissez un th\\xE8me\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            selected: true,\n            \"data-default\": true,\n            children: \"Choisissez un th\\xE8me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), props.themes && props.themes.map(theme => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: theme.id,\n              children: theme.name\n            }, theme.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonsText,\n          children: \"OU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.createTheme,\n          type: \"text\",\n          id: \"new-theme\",\n          placeholder: \"Saisissez un nouveau th\\xE8me...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.publish,\n          children: \"PUBLIER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePost, \"JUvoPKyxZ1d0rJYxb0G1CjQeIXc=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreatePost;\n{\n  /* <div \n     style={{ height: \"auto\", width: \"40ch\", border: \"dotted 1px black\", textAlign: \"center\" }} \n     onClick={() => imageUploader.current.click()  }\n  >\n     Cliquez ici pour ajouter des images...\n     <img ref={uploadedImage} style={{ maxHeight: \"30ch\", maxWidth: \"40ch\", border: \"none\" }} />\n  </div>\n  <input \n     type=\"file\" \n     accept=\"image/*\" \n     multiple = \"true\" \n     ref={imageUploader} \n     style={{ display: \"none\" }}\n     onChange={handleImageUpload}\n  /> */\n}\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js"],"names":["React","useState","useEffect","useRef","makeStyles","axios","Button","ImageUploader","UrlAPI","useStyles","theme","createPostBlock","display","flexDirection","width","margin","createPostHeader","backgroundColor","color","padding","textAlign","fontSize","createPostBody","marginBottom","createPostBodyContent","postContentInput","height","border","outline","buttons","marginTop","justifyContent","buttonsText","fontWeight","marginRight","dropDownList","borderStyle","paddingLeft","cursor","createTheme","publish","borderRadius","CreatePost","props","classes","newPost","setNewPost","pictures","setPictures","handleChange","event","setNewPostTheme","target","value","console","log","newPostTheme","onDrop","picture","concat","post","then","result","data","setPostList","position","marginLeft","themes","map","id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport ImageUploader from 'react-images-upload';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    createPostBlock: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100ch',\n            margin: 'auto',  \n        },\n        createPostHeader: {\n            backgroundColor: '#D75030',\n            color: 'white',\n            width: '30ch',\n            padding: '2ch',\n            textAlign: 'center',\n            fontSize: '12px',\n        },\n        createPostBody: {\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: '#F2D3D4',\n            padding: '2ch',\n            width: '100%',\n            margin: 'auto',\n            marginBottom: '10ch',\n        },\n        createPostBodyContent: {\n            backgroundColor: '#FFFFFE',\n            width: '95%',\n            margin: 'auto',\n            padding: '2ch',\n            textAlign: 'left',\n        },  \n        postContentInput: {\n            width: '100%',\n            height: 'auto',\n            border: 'none',\n            \"&:focus\": {\n                outline: 'none',\n            },\n        },\n        buttons: {\n            display: 'flex',\n            width: '95%',\n            height: '3ch',\n            margin: 'auto',\n            marginTop: '2ch',\n            justifyContent: 'space-between',\n        },\n        buttonsText: {\n            color: '#D75030',\n            fontWeight: '600',\n            fontSize: '14px',   \n            marginRight: '1ch',\n        },\n        dropDownList: {\n            width: '30%',\n            backgroundColor: '#D75030',\n            borderStyle: 'none',\n            color: '#FFFFFE',\n            paddingLeft: '1ch',\n            marginRight: '1ch',\n            fontSize: '14px',   \n            cursor: 'pointer',\n        },\n        createTheme: {\n            color: '#686A6C',\n            width: '35%',\n            fontSize: '14px',   \n            borderStyle: 'none',\n            paddingLeft: '1ch',\n        },\n        publish: {\n            backgroundColor: '#D75030',\n            color: '#FFFFFE',\n            borderRadius: '0',\n            width: '20%',\n            \"&:hover\": {\n                backgroundColor: '#B85030',\n            },\n        },\n}));\n\n// LOGIQUE :\n\nconst CreatePost = props => {\n\n    const classes = useStyles();\n    const [newPost, setNewPost] = useState('');\n    const [pictures, setPictures] = useState([]);\n\n    const handleChange = (event) => {\n        setNewPostTheme(event.target.value);\n        console.log(newPostTheme);\n    };\n    \n    //Gestion d'import d'image(s) lors de la crÃ©ation d'un post.\n    const onDrop = (picture) => {\n        setPictures(pictures.concat(picture));\n    };\n\n    useEffect ( () => {\n        axios.post(UrlAPI + 'posts')\n        .then(result => result.data)\n        .then(data => setPostList(data));\n    }, []);\n\n    return(\n        <div className= { classes.createPostBlock }>\n            <div className={classes.createPostHeader}>\n                <h2>PUBLIER UN POST</h2>\n            </div>\n            <div className={classes.createPostBody} >\n                <div className={classes.createPostBodyContent} >\n                    <textarea className={classes.postContentInput} placeholder=\"Ecrivez le contenu de votre post ici...\" />\n                    <ImageUploader\n                        withIcon={false}\n                        buttonText='Ajoutez des images'\n                        onChange={onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                        withLabel={false}\n                        fileSizeError='Image trop volumineuse'\n                        buttonStyles={{backgroundColor: '#757575', borderRadius: '0', position: \"relative\", marginLeft: \"0\"}}\n                    />\n                </div>\n                <div className={classes.buttons}>\n                    <select className={classes.dropDownList} value={newPostTheme} placeholder=\"Choisissez un thÃ¨me\" onChange={handleChange}>\n                        <option value=\"\" selected data-default>Choisissez un thÃ¨me</option>\n                        {props.themes && props.themes.map((theme) => { \n                        return (\n                            <option key={theme.id} value={theme.id}>{theme.name}</option>\n                        ); })}\n                    </select>\n                    <div className={classes.buttonsText}>OU</div>\n                    <input className={classes.createTheme} type=\"text\" id=\"new-theme\" placeholder=\"Saisissez un nouveau thÃ¨me...\" />\n                    <Button className={classes.publish} >PUBLIER</Button>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n{/* <div \n    style={{ height: \"auto\", width: \"40ch\", border: \"dotted 1px black\", textAlign: \"center\" }} \n    onClick={() => imageUploader.current.click()  }\n>\n    Cliquez ici pour ajouter des images...\n    <img ref={uploadedImage} style={{ maxHeight: \"30ch\", maxWidth: \"40ch\", border: \"none\" }} />\n</div>\n<input \n    type=\"file\" \n    accept=\"image/*\" \n    multiple = \"true\" \n    ref={imageUploader} \n    style={{ display: \"none\" }}\n    onChange={handleImageUpload}\n/> */}\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}