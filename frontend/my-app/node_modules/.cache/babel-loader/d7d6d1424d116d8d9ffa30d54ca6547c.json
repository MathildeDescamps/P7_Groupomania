{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button, Avatar, Link } from '@material-ui/core';\nimport { Person, ArrowBack } from '@material-ui/icons';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\nimport FileBase64 from 'react-file-base64';\nconst UrlAPI = 'http://localhost:3000/api/'; // STYLE :\n\nconst useStyles = makeStyles(() => ({\n  postContainer: {\n    width: '60%',\n    position: 'relative',\n    paddingTop: '10ch',\n    margin: 'auto'\n  },\n  themeContainer: {\n    backgroundColor: '#F1D4D4',\n    width: '20%',\n    height: '100%',\n    position: 'absolute',\n    position: 'fixed',\n    right: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch'\n  },\n  themeContainerHeader: {\n    backgroundColor: '#D7502F',\n    color: 'white',\n    fontSize: '28px',\n    fontWeight: '600',\n    textAlign: 'center',\n    padding: '1ch'\n  },\n  themeButton: {\n    backgroundColor: '#FFFFFE',\n    color: '#696A6B',\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    \"&:hover\": {\n      backgroundColor: '#D35233',\n      color: '#FFFFFE'\n    }\n  },\n  activeTheme: {\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    backgroundColor: '#D35233',\n    color: 'white'\n  },\n  profileContainer: {\n    backgroundColor: '#FFFFFF',\n    width: '20%',\n    height: '100%',\n    position: 'absolute',\n    position: 'fixed',\n    left: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch',\n    textAlign: 'center'\n  },\n  avatar: {\n    margin: 'auto',\n    marginTop: '2ch',\n    width: '10ch',\n    height: '10ch',\n    \"&>span\": {\n      display: \"none\"\n    },\n    \"&:hover\": {\n      \"&>span\": {\n        display: 'block',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      },\n      \"&>#avatar\": {\n        display: 'none'\n      }\n    }\n  },\n  userName: {\n    textDecoration: 'underline',\n    fontSize: '25px',\n    color: '#D75030'\n  },\n  list: {\n    listStyle: 'none',\n    color: '#545555',\n    marginLeft: '0',\n    lineHeight: '2'\n  }\n})); // LOGIQUE :\n\nconst ProfilePageBodyContainer = () => {\n  _s();\n\n  //On initialise le state.\n  const [postList, setPostList] = useState(null);\n  const [themeList, setThemeList] = useState(null);\n  const [selectedThemes, setSelectedThemes] = useState([]);\n  const [userInfos, setUserInfos] = useState(null);\n  const [pic, setPic] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const classes = useStyles();\n  let url = window.location.pathname;\n  let userId = url.split('profile/')[1];\n  let buff;\n  let src; //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'posts').then(result => result.data).then(data => setPostList(data));\n  }, []); //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'themes').then(result => result.data).then(data => setThemeList(data));\n  }, []); //On récupère les infos du user cliqué et on traite la photo de profile pour pouvoir l'afficher.\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'users/' + userId).then(res => {\n      setUserInfos(res.data[0]);\n      buff = res.data[0].profilePic.data;\n      src = Buffer.from(buff).toString('base64'); //setImage(src);\n\n      console.log(\"src => \", src.substr(0, 10));\n    }).catch(err => console.log(err));\n  }, []); //On récupère l'image uploadée par le user pour la mettre à jour en base. \n\n  const changeImage = img => {\n    setImage(img.base64);\n    axios.put(UrlAPI + 'users/' + userInfos.id + '/image', {\n      image: img.base64\n    }).then(result => console.log(result)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.profileContainer,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: [/*#__PURE__*/_jsxDEV(Person, {\n          style: {\n            fontSize: 60\n          },\n          id: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FileBase64, {\n          multiple: false,\n          onDone: changeImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"image\",\n          src: image,\n          style: {\n            width: 'auto',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.userName,\n        children: [\" \", userInfos && userInfos.firstname + ' ' + userInfos.lastname, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.list,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: userInfos && userInfos.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Date d'embauche :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), \" \", userInfos && userInfos.hiringDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 82\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), \" \", userInfos && userInfos.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/accueil\",\n        children: /*#__PURE__*/_jsxDEV(ArrowBack, {\n          style: {\n            color: '#757575',\n            fontSize: 35,\n            position: 'absolute',\n            left: '1ch',\n            marginTop: '1ch',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreatePost, {\n        themes: themeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), postList && postList.filter(post => userInfos && post.user == userInfos.id && (selectedThemes.includes(post.theme) || selectedThemes.length == 0)).map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.themeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.themeContainerHeader,\n        children: \"TH\\xC8MES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), themeList && themeList.map(theme => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton,\n          onClick: props => {\n            if (!selectedThemes.includes(theme.id)) {\n              setSelectedThemes([...selectedThemes, theme.id]);\n            } else {\n              setSelectedThemes(selectedThemes.filter(item => {\n                return item !== theme.id;\n              }));\n            }\n          },\n          children: theme && theme.name\n        }, theme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; //<Theme filter={props.filter}  key={theme.id} theme={theme} />\n\n\n_s(ProfilePageBodyContainer, \"3eoa0USStPWwq3DZnyfRxmhr6AE=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProfilePageBodyContainer;\nexport default ProfilePageBodyContainer; //a mettre dans File6Base4 : onDone={getImage}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePageBodyContainer\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js"],"names":["React","useState","useEffect","useRef","makeStyles","CssBaseline","Button","Avatar","Link","Person","ArrowBack","Post","CreatePost","axios","FileBase64","UrlAPI","useStyles","postContainer","width","position","paddingTop","margin","themeContainer","backgroundColor","height","right","top","marginTop","paddingLeft","paddingRight","themeContainerHeader","color","fontSize","fontWeight","textAlign","padding","themeButton","maxWidth","activeTheme","profileContainer","left","avatar","display","textDecoration","cursor","userName","list","listStyle","marginLeft","lineHeight","ProfilePageBodyContainer","postList","setPostList","themeList","setThemeList","selectedThemes","setSelectedThemes","userInfos","setUserInfos","pic","setPic","image","setImage","classes","url","window","location","pathname","userId","split","buff","src","get","then","result","data","res","profilePic","Buffer","from","toString","console","log","substr","catch","err","changeImage","img","base64","put","id","firstname","lastname","status","hiringDate","email","filter","post","user","includes","theme","length","map","props","item","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,IAAtC,QAAkD,mBAAlD;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAGA,MAAMC,MAAM,GAAG,4BAAf,C,CAEA;;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAAC,OAAO;AAC5Ba,EAAAA,aAAa,EAAE;AACXC,IAAAA,KAAK,EAAE,KADI;AAEXC,IAAAA,QAAQ,EAAE,UAFC;AAGXC,IAAAA,UAAU,EAAE,MAHD;AAIXC,IAAAA,MAAM,EAAE;AAJG,GADa;AAO5BC,EAAAA,cAAc,EAAE;AACZC,IAAAA,eAAe,EAAE,SADL;AAEZL,IAAAA,KAAK,EAAE,KAFK;AAGZM,IAAAA,MAAM,EAAE,MAHI;AAIZL,IAAAA,QAAQ,EAAE,UAJE;AAKZA,IAAAA,QAAQ,EAAE,OALE;AAMZM,IAAAA,KAAK,EAAE,GANK;AAOZC,IAAAA,GAAG,EAAE,GAPO;AAQZC,IAAAA,SAAS,EAAE,MARC;AASZC,IAAAA,WAAW,EAAE,KATD;AAUZC,IAAAA,YAAY,EAAE;AAVF,GAPY;AAmB5BC,EAAAA,oBAAoB,EAAE;AAClBP,IAAAA,eAAe,EAAE,SADC;AAElBQ,IAAAA,KAAK,EAAE,OAFW;AAGlBC,IAAAA,QAAQ,EAAE,MAHQ;AAIlBC,IAAAA,UAAU,EAAE,KAJM;AAKlBC,IAAAA,SAAS,EAAE,QALO;AAMlBC,IAAAA,OAAO,EAAE;AANS,GAnBM;AA2B5BC,EAAAA,WAAW,EAAE;AACTb,IAAAA,eAAe,EAAE,SADR;AAETQ,IAAAA,KAAK,EAAE,SAFE;AAGTC,IAAAA,QAAQ,EAAE,MAHD;AAITC,IAAAA,UAAU,EAAE,KAJH;AAKTE,IAAAA,OAAO,EAAE,KALA;AAMTE,IAAAA,QAAQ,EAAE,MAND;AAOTnB,IAAAA,KAAK,EAAE,MAPE;AAQTgB,IAAAA,SAAS,EAAE,QARF;AASTb,IAAAA,MAAM,EAAE,KATC;AAUT,eAAW;AACPE,MAAAA,eAAe,EAAE,SADV;AAEPQ,MAAAA,KAAK,EAAE;AAFA;AAVF,GA3Be;AA0C5BO,EAAAA,WAAW,EAAE;AACTN,IAAAA,QAAQ,EAAE,MADD;AAETC,IAAAA,UAAU,EAAE,KAFH;AAGTE,IAAAA,OAAO,EAAE,KAHA;AAITE,IAAAA,QAAQ,EAAE,MAJD;AAKTnB,IAAAA,KAAK,EAAE,MALE;AAMTgB,IAAAA,SAAS,EAAE,QANF;AAOTb,IAAAA,MAAM,EAAE,KAPC;AAQTE,IAAAA,eAAe,EAAE,SARR;AASTQ,IAAAA,KAAK,EAAE;AATE,GA1Ce;AAqD5BQ,EAAAA,gBAAgB,EAAE;AACdhB,IAAAA,eAAe,EAAE,SADH;AAEdL,IAAAA,KAAK,EAAE,KAFO;AAGdM,IAAAA,MAAM,EAAE,MAHM;AAIdL,IAAAA,QAAQ,EAAE,UAJI;AAKdA,IAAAA,QAAQ,EAAE,OALI;AAMdqB,IAAAA,IAAI,EAAE,GANQ;AAOdd,IAAAA,GAAG,EAAE,GAPS;AAQdC,IAAAA,SAAS,EAAE,MARG;AASdC,IAAAA,WAAW,EAAE,KATC;AAUdC,IAAAA,YAAY,EAAE,KAVA;AAWdK,IAAAA,SAAS,EAAE;AAXG,GArDU;AAkE5BO,EAAAA,MAAM,EAAE;AACJpB,IAAAA,MAAM,EAAE,MADJ;AAEJM,IAAAA,SAAS,EAAE,KAFP;AAGJT,IAAAA,KAAK,EAAE,MAHH;AAIJM,IAAAA,MAAM,EAAE,MAJJ;AAKJ,cAAU;AACNkB,MAAAA,OAAO,EAAE;AADH,KALN;AAQJ,eAAW;AACP,gBAAU;AACNA,QAAAA,OAAO,EAAE,OADH;AAENC,QAAAA,cAAc,EAAE,WAFV;AAGNC,QAAAA,MAAM,EAAE;AAHF,OADH;AAMP,mBAAa;AACTF,QAAAA,OAAO,EAAE;AADA;AANN;AARP,GAlEoB;AAqF5BG,EAAAA,QAAQ,EAAE;AACNF,IAAAA,cAAc,EAAE,WADV;AAENX,IAAAA,QAAQ,EAAE,MAFJ;AAGND,IAAAA,KAAK,EAAE;AAHD,GArFkB;AA0F5Be,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE,MADT;AAEFhB,IAAAA,KAAK,EAAC,SAFJ;AAGFiB,IAAAA,UAAU,EAAE,GAHV;AAIFC,IAAAA,UAAU,EAAE;AAJV;AA1FsB,CAAP,CAAD,CAA5B,C,CAkGA;;AAEA,MAAMC,wBAAwB,GAAG,MAAM;AAAA;;AAEnC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnD,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACoD,SAAD,EAAYC,YAAZ,IAA4BrD,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACsD,cAAD,EAAiBC,iBAAjB,IAAsCvD,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACwD,SAAD,EAAYC,YAAZ,IAA4BzD,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAAC0D,GAAD,EAAMC,MAAN,IAAgB3D,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAAC4D,KAAD,EAAQC,QAAR,IAAoB7D,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM8D,OAAO,GAAG/C,SAAS,EAAzB;AAEA,MAAIgD,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA1B;AACA,MAAIC,MAAM,GAAGJ,GAAG,CAACK,KAAJ,CAAU,UAAV,EAAsB,CAAtB,CAAb;AACA,MAAIC,IAAJ;AACA,MAAIC,GAAJ,CAfmC,CAiBnC;;AACArE,EAAAA,SAAS,CAAG,MAAM;AACdW,IAAAA,KAAK,CAAC2D,GAAN,CAAUzD,MAAM,GAAG,OAAnB,EACC0D,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IADvB,EAECF,IAFD,CAEME,IAAI,IAAIvB,WAAW,CAACuB,IAAD,CAFzB;AAGH,GAJQ,EAIN,EAJM,CAAT,CAlBmC,CAwBnC;;AACAzE,EAAAA,SAAS,CAAG,MAAM;AACdW,IAAAA,KAAK,CAAC2D,GAAN,CAAUzD,MAAM,GAAG,QAAnB,EACC0D,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IADvB,EAECF,IAFD,CAEME,IAAI,IAAIrB,YAAY,CAACqB,IAAD,CAF1B;AAGH,GAJQ,EAIN,EAJM,CAAT,CAzBmC,CA+BnC;;AACAzE,EAAAA,SAAS,CAAG,MAAM;AACdW,IAAAA,KAAK,CAAC2D,GAAN,CAAUzD,MAAM,GAAG,QAAT,GAAoBqD,MAA9B,EACKK,IADL,CACUG,GAAG,IAAI;AACTlB,MAAAA,YAAY,CAACkB,GAAG,CAACD,IAAJ,CAAS,CAAT,CAAD,CAAZ;AACAL,MAAAA,IAAI,GAAGM,GAAG,CAACD,IAAJ,CAAS,CAAT,EAAYE,UAAZ,CAAuBF,IAA9B;AACAJ,MAAAA,GAAG,GAAGO,MAAM,CAACC,IAAP,CAAYT,IAAZ,EAAkBU,QAAlB,CAA2B,QAA3B,CAAN,CAHS,CAIT;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,GAAG,CAACY,MAAJ,CAAW,CAAX,EAAa,EAAb,CAAvB;AACH,KAPL,EAQKC,KARL,CAQWC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CARlB;AASH,GAVQ,EAUN,EAVM,CAAT,CAhCmC,CA4CnC;;AACA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AACzBzB,IAAAA,QAAQ,CAACyB,GAAG,CAACC,MAAL,CAAR;AACA3E,IAAAA,KAAK,CAAC4E,GAAN,CAAU1E,MAAM,GAAG,QAAT,GAAoB0C,SAAS,CAACiC,EAA9B,GAAmC,QAA7C,EAAuD;AAAE7B,MAAAA,KAAK,EAAE0B,GAAG,CAACC;AAAb,KAAvD,EACKf,IADL,CACUC,MAAM,IAAIO,OAAO,CAACC,GAAR,CAAYR,MAAZ,CADpB,EAEKU,KAFL,CAEWC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAFlB;AAGH,GALD;;AAOA,sBACI;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAItB,OAAO,CAACxB,gBAA1B;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAIwB,OAAO,CAACtB,MAA7B;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAACT,YAAAA,QAAQ,EAAE;AAAX,WAAf;AAA+B,UAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAG,KAAvB;AAA+B,UAAA,MAAM,EAAEsD;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,EAAE,EAAC,OAAR;AAAgB,UAAA,GAAG,EAAEzB,KAArB;AAA4B,UAAA,KAAK,EAAE;AAAE3C,YAAAA,KAAK,EAAE,MAAT;AAAiBM,YAAAA,MAAM,EAAE;AAAzB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAI,QAAA,SAAS,EAAIuC,OAAO,CAAClB,QAAzB;AAAA,wBAAsCY,SAAS,IAAIA,SAAS,CAACkC,SAAV,GAAsB,GAAtB,GAA4BlC,SAAS,CAACmC,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAG,QAAA,SAAS,EAAI7B,OAAO,CAACjB,IAAxB;AAAA,gCACI;AAAA,oBAAKW,SAAS,IAAIA,SAAS,CAACoC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAC2C;AAAA;AAAA;AAAA;AAAA,gBAD3C,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,OAE+BpC,SAAS,IAAIA,SAAS,CAACqC,UAFtD,eAEiE;AAAA;AAAA;AAAA;AAAA,gBAFjE,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,OAGoBrC,SAAS,IAAIA,SAAS,CAACsC,KAH3C,eAGiD;AAAA;AAAA;AAAA;AAAA,gBAHjD;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAeI;AAAK,MAAA,SAAS,EAAIhC,OAAO,CAAC9C,aAA1B;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAA,+BAAsB,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAAEc,YAAAA,KAAK,EAAE,SAAT;AAAoBC,YAAAA,QAAQ,EAAE,EAA9B;AAAkCb,YAAAA,QAAQ,EAAE,UAA5C;AAAwDqB,YAAAA,IAAI,EAAE,KAA9D;AAAqEb,YAAAA,SAAS,EAAE,KAAhF;AAAuFiB,YAAAA,MAAM,EAAE;AAA/F;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAES;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKF,QAAQ,IAAIA,QAAQ,CAAC6C,MAAT,CAAgBC,IAAI,IAAKxC,SAAS,IAAKwC,IAAI,CAACC,IAAL,IAAazC,SAAS,CAACiC,EAArC,KAA8CnC,cAAc,CAAC4C,QAAf,CAAwBF,IAAI,CAACG,KAA7B,CAAD,IAA0C7C,cAAc,CAAC8C,MAAf,IAAyB,CAAhH,CAAzB,EAA+IC,GAA/I,CAAmJL,IAAI,IAChK;AACI,4BAAO,QAAC,IAAD;AAAoB,UAAA,IAAI,EAAEA;AAA1B,WAAWA,IAAI,CAACP,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAHQ,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAwBI;AAAK,MAAA,SAAS,EAAG3B,OAAO,CAACzC,cAAzB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAGyC,OAAO,CAACjC,oBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKuB,SAAS,IAAIA,SAAS,CAACiD,GAAV,CAAeF,KAAD,IAAW;AACnC,4BACI,QAAC,MAAD;AACI,UAAA,SAAS,EAAE7C,cAAc,CAAC4C,QAAf,CAAwBC,KAAK,CAACV,EAA9B,IAAoC3B,OAAO,CAACzB,WAA5C,GAA0DyB,OAAO,CAAC3B,WADjF;AAEI,UAAA,OAAO,EAAGmE,KAAD,IAAW;AAChB,gBAAI,CAAChD,cAAc,CAAC4C,QAAf,CAAwBC,KAAK,CAACV,EAA9B,CAAL,EAAwC;AACpClC,cAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoB6C,KAAK,CAACV,EAA1B,CAAD,CAAjB;AACH,aAFD,MAGK;AACDlC,cAAAA,iBAAiB,CAACD,cAAc,CAACyC,MAAf,CAAsBQ,IAAI,IAAI;AAC5C,uBAAOA,IAAI,KAAKJ,KAAK,CAACV,EAAtB;AACH,eAFiB,CAAD,CAAjB;AAGH;AACJ,WAXL;AAAA,oBAYKU,KAAK,IAAIA,KAAK,CAACK;AAZpB,WAAaL,KAAK,CAACV,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAgBH,OAjBa,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA,kBADJ;AAgDH,CApGD,C,CAsGA;;;GAtGMxC,wB;UAUclC,S;;;KAVdkC,wB;AAuGN,eAAeA,wBAAf,C,CAEA","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button, Avatar, Link } from '@material-ui/core';\nimport { Person, ArrowBack } from '@material-ui/icons';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\nimport FileBase64 from 'react-file-base64';\n\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '60%',\n            position: 'relative',\n            paddingTop: '10ch',\n            margin: 'auto',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            \"&:hover\": {\n                backgroundColor: '#D35233',\n                color: '#FFFFFE',\n            },\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n        profileContainer: {\n            backgroundColor: '#FFFFFF',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            left: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n            textAlign: 'center',\n        },\n        avatar: {\n            margin: 'auto',\n            marginTop: '2ch',\n            width: '10ch',\n            height: '10ch',\n            \"&>span\": {\n                display: \"none\",\n            },\n            \"&:hover\": {\n                \"&>span\": {\n                    display: 'block',\n                    textDecoration: 'underline',\n                    cursor: 'pointer',\n                },\n                \"&>#avatar\": {\n                    display: 'none',\n                },\n            },\n        },\n        userName: {\n            textDecoration: 'underline',\n            fontSize: '25px',\n            color: '#D75030',\n        },\n        list: {\n            listStyle: 'none',\n            color:'#545555',\n            marginLeft: '0',\n            lineHeight: '2',\n        },\n}));\n\n// LOGIQUE :\n\nconst ProfilePageBodyContainer = () => {\n        \n    //On initialise le state.\n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n    const [userInfos, setUserInfos] = useState(null);\n    const [pic, setPic] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n\n    const classes = useStyles();\n\n    let url = window.location.pathname;\n    let userId = url.split('profile/')[1];\n    let buff; \n    let src; \n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => result.data)\n        .then(data => setPostList(data));\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data));\n    }, []);\n\n    //On récupère les infos du user cliqué et on traite la photo de profile pour pouvoir l'afficher.\n    useEffect ( () => {\n        axios.get(UrlAPI + 'users/' + userId)\n            .then(res => { \n                setUserInfos(res.data[0]);\n                buff = res.data[0].profilePic.data;\n                src = Buffer.from(buff).toString('base64');\n                //setImage(src);\n                console.log(\"src => \", src.substr(0,10));\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    //On récupère l'image uploadée par le user pour la mettre à jour en base. \n    const changeImage = (img) => {\n        setImage(img.base64);\n        axios.put(UrlAPI + 'users/' + userInfos.id + '/image', { image: img.base64 })\n            .then(result => console.log(result))\n            .catch(err => console.log(err))\n    };\n    \n    return ( \n        <>\n            <CssBaseline />\n            <div className= { classes.profileContainer }> \n                <Avatar className= { classes.avatar } >\n                    <Person style={{fontSize: 60}} id=\"avatar\"/>\n                    <FileBase64 multiple={ false } onDone={changeImage} />\n                    <img id=\"image\" src={image} style={{ width: 'auto', height: 'auto'}} />\n                </Avatar>\n                <h3 className= { classes.userName }> {userInfos && userInfos.firstname + ' ' + userInfos.lastname}  </h3>\n                <p className= { classes.list } >\n                    <b>{ userInfos && userInfos.status}</b><br/>\n                    <b>Date d'embauche :</b> { userInfos && userInfos.hiringDate}<br/>\n                    <b>Email :</b> {userInfos && userInfos.email}<br/>\n                </p>\n            </div>\n            <div className= { classes.postContainer }>\n                <Link href='/accueil'><ArrowBack style={{ color: '#757575', fontSize: 35, position: 'absolute', left: '1ch', marginTop: '1ch', cursor: 'pointer' }} /></Link>\n                <CreatePost themes={themeList} />\n                {postList && postList.filter(post => (userInfos && (post.user == userInfos.id) && ((selectedThemes.includes(post.theme)) || (selectedThemes.length == 0)))).map(post => \n                    { \n                        return <Post key={post.id} post={post} />;\n                    }\n                )}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                {themeList && themeList.map((theme) => { \n                    return (\n                        <Button key={theme.id} \n                            className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                            onClick={(props) => { \n                                if (!selectedThemes.includes(theme.id)) {\n                                    setSelectedThemes([...selectedThemes, theme.id]);\n                                }\n                                else {\n                                    setSelectedThemes(selectedThemes.filter(item => { \n                                        return item !== theme.id; \n                                    }));\n                                }\n                            }} > \n                            {theme && theme.name} \n                        </Button>\n                    )\n                })}\n            </div>\n        </>\n    );\n};\n\n//<Theme filter={props.filter}  key={theme.id} theme={theme} />\nexport default ProfilePageBodyContainer;\n\n//a mettre dans File6Base4 : onDone={getImage}"]},"metadata":{},"sourceType":"module"}