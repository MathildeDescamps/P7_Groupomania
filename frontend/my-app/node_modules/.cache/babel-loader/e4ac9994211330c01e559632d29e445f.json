{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/LoginForm/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport clsx from 'clsx';\nimport { TextField, Button, IconButton, Input, InputLabel, InputAdornment, Typography, Link, Grid, FormControl, FormControlLabel, FormHelperText, Checkbox } from '@material-ui/core/';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport logo from '../../portalLogo.png';\nimport styled from 'styled-components';\nconst UrlAPI = 'http://localhost:3000/api/auth';\nconst useStyles = makeStyles(theme => ({\n  logo: {\n    height: '15ch',\n    marginTop: '23ch'\n  },\n  loginRoot: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#F1D4D4',\n    color: '#9C9D9C',\n    width: '50ch',\n    height: '30ch',\n    position: 'absolute',\n    top: 50,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    margin: 'auto',\n    paddingTop: '5ch'\n  },\n  signupRoot: {\n    display: 'none',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#F1D4D4',\n    color: '#9C9D9C',\n    width: '50ch',\n    height: '75ch',\n    position: 'absolute',\n    top: 140,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    margin: 'auto',\n    paddingTop: '3ch'\n  },\n  formField: {\n    width: '30ch',\n    marginBottom: '2ch',\n    backgroundColor: '#F6F5F5',\n    borderRadius: '10px'\n  },\n  label: {\n    marginLeft: '15px'\n  },\n  icon: {\n    marginRight: '10px'\n  },\n  checkbox: {\n    backgroundColor: 'white',\n    width: '40ch',\n    borderRadius: '10px',\n    padding: '10px',\n    marginBottom: '3ch',\n    marginTop: '1ch'\n  },\n  loginButton: {\n    backgroundColor: '#D75030',\n    width: '25ch',\n    color: 'white',\n    marginBottom: '6ch',\n    position: 'relative',\n    top: '20px',\n    '&:hover': {\n      backgroundColor: '#BF5438'\n    }\n  },\n  signupButton: {\n    backgroundColor: '#D75030',\n    width: '25ch',\n    color: 'white',\n    marginBottom: 'ch',\n    position: 'relative',\n    top: '-5px',\n    '&:hover': {\n      backgroundColor: '#BF5438'\n    }\n  },\n  link: {\n    color: '#D75030',\n    textDecoration: 'underlined'\n  }\n}));\n\nconst ShowSignup = () => {\n  document.getElementById(\"login-form\").style.display = \"none\";\n  document.getElementById(\"signup-form\").style.display = \"flex\";\n  document.getElementById(\"logo\").style.marginTop = \"10ch\";\n};\n\n_c = ShowSignup;\n\nconst LoginForm = () => {\n  _s();\n\n  //On crée les constantes login, password, etc et on les initialise. Ce sont des strings vides au départ mais elles seront mises à jour avec setName().\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [hiringDate, setHiringDate] = useState(\"\");\n  const classes = useStyles();\n\n  const handleLoginSubmit = e => {\n    //On place ici la logique a appliquer lorsque le user clique sur 'Se connecter'.\n    axios({\n      method: 'post',\n      url: UrlAPI + '/login',\n      data: {\n        email: email,\n        password: password\n      }\n    }).then(function (response) {\n      //On traite la suite une fois la réponse obtenue \n      console.log(response);\n    }).catch(function (error) {\n      //On traite ici les erreurs éventuellement survenues\n      console.log(error);\n    });\n  };\n\n  const handleSignupSubmit = e => {};\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"[ logo Postmania ]\",\n      className: classes.logo,\n      id: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"login-form\",\n      className: classes.loginRoot,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.formField),\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          className: classes.label,\n          htmlFor: \"standard-adornment-login\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: classes.label,\n          id: \"email-field\",\n          type: \"email\",\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n              className: classes.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this),\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.formField),\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          className: classes.label,\n          htmlFor: \"standard-adornment-password\",\n          children: \"Mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: classes.label,\n          id: \"password-field\",\n          type: showPassword ? 'text' : 'password',\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 53\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this),\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        className: classes.loginButton,\n        onClick: handleLoginSubmit,\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: classes.link,\n        href: \"#\",\n        onClick: ShowSignup,\n        children: \"Vous n'avez pas encore de compte ? S'inscrire.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"signup-form\",\n      className: classes.signupRoot,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.formField),\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          className: classes.label,\n          htmlFor: \"standard-adornment-login\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: classes.label,\n          id: \"email-field\",\n          type: \"email\",\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n              className: classes.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this),\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.formField),\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          className: classes.label,\n          htmlFor: \"standard-adornment-password\",\n          children: \"Mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: classes.label,\n          id: \"password-field\",\n          type: showPassword ? 'text' : 'password',\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 53\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this),\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.formField),\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          className: classes.label,\n          htmlFor: \"standard-adornment-firstname\",\n          children: \"Pr\\xE9nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: classes.label,\n          id: \"firstname-field\",\n          type: \"text\",\n          onChange: e => setFirstname(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.formField),\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          className: classes.label,\n          htmlFor: \"standard-adornment-lastname\",\n          children: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: classes.label,\n          id: \"lastname-field\",\n          type: \"text\",\n          onChange: e => setLastname(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.formField),\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          className: classes.label,\n          htmlFor: \"standard-adornment-status\",\n          children: \"Statut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: classes.label,\n          id: \"status-field\",\n          type: \"text\",\n          helperText: \"Some important text\",\n          onChange: e => setStatus(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          className: classes.label,\n          id: \"outlined-weight-helper-text\",\n          children: \"Ex : Directeur commerciale.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.formField),\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          className: classes.label,\n          id: \"hiringDate-field\",\n          type: \"date\",\n          onChange: e => setHiringDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          className: classes.label,\n          id: \"outlined-weight-helper-text\",\n          children: \"Date d'embauche\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.checkbox,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            name: \"RGPD\",\n            color: \"default\",\n            inputProps: {\n              'aria-label': 'checkbox with default color'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this),\n          label: \"En cochant cette case, je reconnais avoir pris connaissance de la charte RGPD de CAP Formation et en accepte les termes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        className: classes.signupButton,\n        onClick: handleSignupSubmit,\n        children: \"S'inscrire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LoginForm, \"uPL3YI4zZEiePWQE0z1220zRwaA=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowSignup\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/LoginForm/LoginForm.js"],"names":["React","Component","useState","clsx","TextField","Button","IconButton","Input","InputLabel","InputAdornment","Typography","Link","Grid","FormControl","FormControlLabel","FormHelperText","Checkbox","AccountCircle","Visibility","VisibilityOff","makeStyles","StylesProvider","axios","logo","styled","UrlAPI","useStyles","theme","height","marginTop","loginRoot","display","flexDirection","alignItems","backgroundColor","color","width","position","top","bottom","left","right","margin","paddingTop","signupRoot","formField","marginBottom","borderRadius","label","marginLeft","icon","marginRight","checkbox","padding","loginButton","signupButton","link","textDecoration","ShowSignup","document","getElementById","style","LoginForm","email","setEmail","password","setPassword","showPassword","setShowPassword","firstname","setFirstname","lastname","setLastname","status","setStatus","hiringDate","setHiringDate","classes","handleLoginSubmit","e","method","url","data","then","response","console","log","catch","error","handleSignupSubmit","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport clsx from 'clsx';\nimport { TextField, Button, IconButton, Input, InputLabel, InputAdornment ,Typography, Link, Grid, FormControl, FormControlLabel, FormHelperText, Checkbox } from '@material-ui/core/';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport logo from '../../portalLogo.png';\nimport styled from 'styled-components';\n\n\nconst UrlAPI = 'http://localhost:3000/api/auth';\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        height: '15ch',\n        marginTop: '23ch',\n    },\n    loginRoot: {\n        display: 'flex',\n        flexDirection : 'column',\n        alignItems: 'center',\n        backgroundColor: '#F1D4D4',\n        color: '#9C9D9C',\n        width: '50ch',\n        height: '30ch',\n        position: 'absolute',\n        top: 50,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        paddingTop: '5ch',\n    },\n    signupRoot: {\n        display: 'none',\n        flexDirection : 'column',\n        alignItems: 'center',\n        backgroundColor: '#F1D4D4',\n        color: '#9C9D9C',\n        width: '50ch',\n        height: '75ch',\n        position: 'absolute',\n        top: 140,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        paddingTop: '3ch',\n    },\n    formField: {\n        width: '30ch',\n        marginBottom: '2ch',\n        backgroundColor: '#F6F5F5',\n        borderRadius: '10px',\n    },\n    label: {\n        marginLeft: '15px',\n    },\n    icon: {\n        marginRight: '10px',\n    },\n    checkbox: {\n        backgroundColor: 'white',\n        width: '40ch',\n        borderRadius: '10px',\n        padding: '10px',\n        marginBottom: '3ch',\n        marginTop: '1ch',\n    },\n    loginButton: {\n        backgroundColor: '#D75030',\n        width: '25ch',\n        color: 'white',\n        marginBottom: '6ch',\n        position: 'relative',\n        top: '20px',\n        '&:hover': {\n            backgroundColor: '#BF5438'\n        },\n    },\n    signupButton: {\n        backgroundColor: '#D75030',\n        width: '25ch',\n        color: 'white',\n        marginBottom: 'ch',\n        position: 'relative',\n        top: '-5px',\n        '&:hover': {\n            backgroundColor: '#BF5438'\n        },\n    },\n    link: {\n        color: '#D75030',\n        textDecoration: 'underlined',\n    },\n}));\nconst ShowSignup = () => { \n\tdocument.getElementById(\"login-form\").style.display=\"none\";\n\tdocument.getElementById(\"signup-form\").style.display=\"flex\"; \n    document.getElementById(\"logo\").style.marginTop=\"10ch\";\n}\n\nconst LoginForm = () => {\n\n        //On crée les constantes login, password, etc et on les initialise. Ce sont des strings vides au départ mais elles seront mises à jour avec setName().\n        const [email, setEmail] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n        const [showPassword, setShowPassword] = useState(false);\n        const [firstname, setFirstname] = useState(\"\");\n        const [lastname, setLastname] = useState(\"\");\n        const [status, setStatus] = useState(\"\");\n        const [hiringDate, setHiringDate] = useState(\"\");\n\n        const classes = useStyles();\n\n        const handleLoginSubmit = (e) => {\n            //On place ici la logique a appliquer lorsque le user clique sur 'Se connecter'.\n            axios({\n                method: 'post',\n                url: UrlAPI + '/login',\n                data: { email : email, password: password}\n            })\n            .then(function (response) {\n                //On traite la suite une fois la réponse obtenue \n                console.log(response);\n            })\n            .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error);\n            });\n        };\n        const handleSignupSubmit = (e) => {};\n\n        const handleClickShowPassword = () => {\n            setShowPassword(!showPassword);\n        };\n\n        const handleMouseDownPassword = (event) => {\n            event.preventDefault();\n        };\n\n        return (\n            <div id=\"form-container\">\n                <img src={ logo } alt='[ logo Postmania ]' className={classes.logo} id=\"logo\" />\n                <form id=\"login-form\" className={classes.loginRoot} noValidate autoComplete=\"off\">\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-login\">Email</InputLabel>\n                        <Input className={classes.label} id=\"email-field\" type=\"email\" endAdornment={\n                            <InputAdornment position=\"end\">\n                                <AccountCircle className={classes.icon} />\n                            </InputAdornment>\n                        } onChange={(e) => setEmail(e.target.value)}/>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-password\">Mot de passe</InputLabel>\n                        <Input className={classes.label} id=\"password-field\" type={showPassword ? 'text' : 'password'} endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton aria-label=\"toggle password visibility\" onClick={handleClickShowPassword} onMouseDown={handleMouseDownPassword}>\n                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        } onChange={(e) => setPassword(e.target.value)}/>\n                    </FormControl>\n                    <Button size=\"large\" className={classes.loginButton} onClick={handleLoginSubmit}>Se connecter</Button>\n                    <Link className={classes.link} href=\"#\" onClick={ShowSignup} >Vous n'avez pas encore de compte ? S'inscrire.</Link>\n                </form>\n                <form id=\"signup-form\" className={classes.signupRoot} noValidate autoComplete=\"off\">\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-login\">Email</InputLabel>\n                        <Input className={classes.label} id=\"email-field\" type=\"email\" endAdornment={\n                            <InputAdornment position=\"end\">\n                                <AccountCircle className={classes.icon} />\n                            </InputAdornment>\n                        } onChange={(e) => setEmail(e.target.value)}/>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-password\">Mot de passe</InputLabel>\n                        <Input className={classes.label} id=\"password-field\" type={showPassword ? 'text' : 'password'} endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton aria-label=\"toggle password visibility\" onClick={handleClickShowPassword} onMouseDown={handleMouseDownPassword}>\n                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        } onChange={(e) => setPassword(e.target.value)}/>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-firstname\">Prénom</InputLabel>\n                        <Input className={classes.label} id=\"firstname-field\" type=\"text\" onChange={(e) => setFirstname(e.target.value)}/>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-lastname\">Nom</InputLabel>\n                        <Input className={classes.label} id=\"lastname-field\" type=\"text\" onChange={(e) => setLastname(e.target.value)}/>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <InputLabel className={classes.label} htmlFor=\"standard-adornment-status\">Statut</InputLabel>\n                        <Input className={classes.label} id=\"status-field\" type=\"text\" helperText=\"Some important text\" onChange={(e) => setStatus(e.target.value)}/>\n                        <FormHelperText className={classes.label} id=\"outlined-weight-helper-text\">Ex : Directeur commerciale.</FormHelperText>\n                    </FormControl>\n                    <FormControl className={clsx(classes.margin, classes.formField)}>\n                        <Input className={classes.label} id=\"hiringDate-field\" type=\"date\" onChange={(e) => setHiringDate(e.target.value)}/>\n                        <FormHelperText className={classes.label} id=\"outlined-weight-helper-text\">Date d'embauche</FormHelperText>\n                    </FormControl>\n                    <FormControl className={ classes.checkbox}>\n                        <FormControlLabel control={ \n                            <Checkbox name=\"RGPD\" color=\"default\" inputProps={{ 'aria-label': 'checkbox with default color' }} />\n                            } label=\"En cochant cette case, je reconnais avoir pris connaissance de la charte RGPD de CAP Formation et en accepte les termes.\"/>\n                    </FormControl>\n                    <Button size=\"large\" className={classes.signupButton} onClick={handleSignupSubmit}>S'inscrire</Button>\n                </form>\n            </div>\n        );\n    };\n\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}