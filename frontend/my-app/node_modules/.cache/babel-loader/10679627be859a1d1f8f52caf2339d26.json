{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Avatar, Button, Link } from '@material-ui/core';\nimport moment from 'moment';\nconst UrlAPI = 'http://localhost:3000/api'; // STYLE :\n\nconst useStyles = makeStyles(theme => ({\n  commentSection: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    backgroundColor: '#F4F4F4',\n    marginTop: '1ch',\n    padding: '1ch'\n  },\n  writeComment: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  commentButton: {\n    backgroundColor: '#555555',\n    color: 'white',\n    textTransform: 'lowercase',\n    height: '4.5ch',\n    width: '10%'\n  },\n  seeMoreButton: {\n    backgroundColor: '#555555',\n    color: 'white',\n    textTransform: 'lowercase',\n    height: '4ch',\n    alignSelf: 'flex-end',\n    marginTop: '1ch'\n  },\n  firstLetter: {\n    textTransform: 'capitalize'\n  },\n  writeCommentText: {\n    width: '90%',\n    height: '4.5ch',\n    marginRight: '1ch',\n    border: 'solid 2px #555555',\n    padding: '0.5ch',\n    color: '#555555',\n    fontWeight: '500',\n    fontFamily: 'Avenir, Segoe, UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif'\n  },\n  comments: {\n    backgroundColor: 'white',\n    width: '100%',\n    marginTop: '1ch',\n    padding: '1ch'\n  },\n  commentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    height: '6ch'\n  },\n  avatar: {\n    border: 'solid 2.5px #E3431D'\n  },\n  headerText: {\n    color: '#E3431D',\n    fontWeight: '500',\n    fontSize: '15px',\n    marginLeft: '1ch'\n  },\n  commentContent: {\n    width: '100%',\n    height: 'auto',\n    textAlign: 'left',\n    paddingLeft: '1ch',\n    paddingLeft: '1ch',\n    position: 'relative',\n    bottom: '10px'\n  }\n})); // LOGIQUE :\n\nconst Comments = ({\n  postId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [commentsList, setCommentsList] = useState([]);\n  const [commentContent, setCommentContent] = useState(\"\");\n  const [userList, setUserList] = useState(null);\n\n  const getUsers = async () => {\n    const response = await axios.get(UrlAPI + '/users').then(result => result.data).then(data => setUserList(data));\n  };\n\n  let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  useEffect(() => {\n    if (!userList) getUsers();\n    axios.get(UrlAPI + '/comments/' + postId).then(res => setCommentsList(res.data)).catch(err => console.log(err));\n  }, []);\n\n  const setCommentText = e => {\n    setCommentContent(e.target.value);\n  };\n\n  const handleComment = () => {\n    axios({\n      method: 'post',\n      url: UrlAPI + '/comments/' + postId,\n      data: {\n        user: currentUser.id,\n        post: postId,\n        content: commentContent\n      }\n    }).then(res => setCommentsList([res.data, ...commentsList])).catch(err => console.log(err));\n    setCommentContent(\"\");\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.commentSection,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.writeComment,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: classes.writeCommentText,\n        value: commentContent,\n        onChange: setCommentText,\n        type: \"text\",\n        placeholder: \"R\\xE9digez un commentaire...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleComment,\n        className: classes.commentButton,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.firstLetter,\n          children: \"C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 84\n        }, this), \"ommenter\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), userList && commentsList && commentsList.map(comment => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.comments,\n        children: userList.filter(author => comment.user == author.id).map(author => {\n          let src = \"\";\n\n          if (author.profilePic) {\n            let buff = author.profilePic.data;\n            src = Buffer.from(buff).toString();\n          }\n\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              className: classes.commentHeader,\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                className: classes.avatar,\n                children: src && /*#__PURE__*/_jsxDEV(\"img\", {\n                  id: \"image\",\n                  src: src,\n                  style: {\n                    width: '40px',\n                    height: '40px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.headerText,\n                children: author.firstname + \" \" + author.lastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" (\", moment(comment.createdAt).format(\"DD/MM/YYYY HH:m\"), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.commentContent,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.commentText,\n                children: comment.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this);\n        })\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.seeMoreButton,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.firstLetter,\n        children: \"V\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 55\n      }, this), \"oir plus de commentaires\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comments, \"cwZ2+ubV3QylJmKpuDz853oajxw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/Comments.js"],"names":["React","useState","useEffect","makeStyles","axios","Avatar","Button","Link","moment","UrlAPI","useStyles","theme","commentSection","display","flexDirection","width","backgroundColor","marginTop","padding","writeComment","alignItems","justifyContent","commentButton","color","textTransform","height","seeMoreButton","alignSelf","firstLetter","writeCommentText","marginRight","border","fontWeight","fontFamily","comments","commentHeader","avatar","headerText","fontSize","marginLeft","commentContent","textAlign","paddingLeft","position","bottom","Comments","postId","classes","commentsList","setCommentsList","setCommentContent","userList","setUserList","getUsers","response","get","then","result","data","currentUser","JSON","parse","sessionStorage","getItem","res","catch","err","console","log","setCommentText","e","target","value","handleComment","method","url","user","id","post","content","map","comment","filter","author","src","profilePic","buff","Buffer","from","toString","firstname","lastname","createdAt","format","commentText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Avatar, Button, Link } from '@material-ui/core';\nimport moment from 'moment';\n\nconst UrlAPI = 'http://localhost:3000/api';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    commentSection: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        backgroundColor: '#F4F4F4',\n        marginTop: '1ch',\n        padding: '1ch',\n    },\n    writeComment: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    commentButton: {\n        backgroundColor: '#555555',\n        color: 'white',\n        textTransform: 'lowercase',\n        height: '4.5ch',\n        width: '10%',\n\n    },\n    seeMoreButton: {\n        backgroundColor: '#555555',\n        color: 'white',\n        textTransform: 'lowercase',\n        height: '4ch',\n        alignSelf: 'flex-end',\n        marginTop: '1ch',\n    },\n    firstLetter: {\n        textTransform: 'capitalize',\n    },\n    writeCommentText: {\n        width: '90%',\n        height: '4.5ch',\n        marginRight: '1ch',\n        border: 'solid 2px #555555',\n        padding: '0.5ch',\n        color: '#555555',\n        fontWeight: '500',\n        fontFamily: 'Avenir, Segoe, UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n    },\n    comments: {\n        backgroundColor: 'white',\n        width: '100%',\n        marginTop: '1ch',\n        padding: '1ch',\n    },\n    commentHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        width: '100%',\n        height: '6ch',\n    },\n    avatar: {\n        border: 'solid 2.5px #E3431D',\n    },\n    headerText: {\n        color: '#E3431D',\n        fontWeight: '500',\n        fontSize: '15px',\n        marginLeft: '1ch',\n    },\n    commentContent: {\n        width: '100%',\n        height: 'auto',\n        textAlign: 'left',\n        paddingLeft: '1ch',\n        paddingLeft: '1ch',\n        position: 'relative',\n        bottom: '10px',\n    },\n}));\n\n// LOGIQUE :\n\nconst Comments = ({postId}) => {\n\n    const classes = useStyles();\n\n    const [commentsList, setCommentsList] = useState([]);\n    const [commentContent, setCommentContent] = useState(\"\");\n    const [userList, setUserList] = useState(null);\n\n    const getUsers = async () => {\n        const response = await axios.get(UrlAPI + '/users')\n        .then(result => result.data)\n        .then(data => setUserList(data))\n    }\n\n    let currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    useEffect ( () => {\n        if (!userList) getUsers();\n        axios.get(UrlAPI + '/comments/' + postId)\n        .then(res => setCommentsList(res.data))\n        .catch(err => console.log(err));\n    }, []);\n\n    const setCommentText = (e) => {\n        setCommentContent(e.target.value);\n    };\n\n    const handleComment = () => {\n        axios({\n                method: 'post',\n                url: UrlAPI + '/comments/' + postId,\n                data: {user: currentUser.id, post: postId, content: commentContent}\n            })\n            .then(res => setCommentsList([res.data, ...commentsList]))\n            .catch(err => console.log(err));\n        setCommentContent(\"\");\n        return;\n    };\n\n    return(\n        <div className={classes.commentSection}>\n            <div className={classes.writeComment}>\n                <textarea className={classes.writeCommentText} value={commentContent} onChange={setCommentText} type=\"text\" placeholder=\"Rédigez un commentaire...\"/>\n                <Button onClick={handleComment} className={classes.commentButton} ><span className={classes.firstLetter}>C</span>ommenter</Button>\n            </div>\n            {userList && commentsList && commentsList.map( (comment) => {\n                return (\n                    <div key={comment.id} className={classes.comments}>\n                        {userList.filter(author => (comment.user == author.id)).map(author => {\n                        let src=\"\";\n                        if (author.profilePic) {\n                            let buff = author.profilePic.data;\n                            src = Buffer.from(buff).toString();\n                        }\n                        return (\n                        <React.Fragment key={comment.id} >\n                            <Link className={classes.commentHeader}>\n                                <Avatar className={classes.avatar} >\n                                  {src && <img id=\"image\" src={src} style={{ width: '40px', height: '40px'}} /> }\n                                </Avatar>\n                                <p className={classes.headerText}>\n                                    {author.firstname + \" \" + author.lastname}\n                                </p>\n                            </Link>\n                            <span> ({moment(comment.createdAt).format(\"DD/MM/YYYY HH:m\")})</span>\n                            <div className={classes.commentContent}>\n                                <p className={classes.commentText}>{comment.content}</p>\n                            </div>\n                        </React.Fragment>\n                        ); }) }\n                    </div>\n                )\n            })}\n            <Button className={classes.seeMoreButton}><span className={classes.firstLetter}>V</span>oir plus de commentaires</Button>\n        </div>\n    )\n};\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}