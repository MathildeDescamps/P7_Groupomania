{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport axios from 'axios';\nconst UrlAPI = 'http://localhost:3000/api/'; // STYLE :\n\nconst useStyles = makeStyles(() => ({\n  postContainer: {\n    width: '80%',\n    position: 'relative',\n    paddingTop: '10ch'\n  },\n  themeContainer: {\n    backgroundColor: '#F1D4D4',\n    width: '20%',\n    height: '100%',\n    position: 'absolute',\n    position: 'fixed',\n    right: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch'\n  },\n  themeContainerHeader: {\n    backgroundColor: '#D7502F',\n    color: 'white',\n    fontSize: '28px',\n    fontWeight: '600',\n    textAlign: 'center',\n    padding: '1ch'\n  },\n  themeButton: {\n    backgroundColor: '#FFFFFE',\n    color: '#696A6B',\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    '&:hover': {\n      backgroundColor: '#D35233',\n      color: 'white'\n    }\n  }\n})); // LOGIQUE :\n\nconst PageBodyContainer = () => {\n  _s();\n\n  const [postList, setPostList] = useState(null);\n  const [themeList, setThemeList] = useState(null);\n  const [currentTheme, setCurrentTheme] = useState(null);\n  const classes = useStyles(); //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'posts').then(result => result.data).then(data => setPostList(data));\n  }, []); //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'themes').then(result => result.data).then(data => setThemeList(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postContainer,\n      children: postList && postList.filter(post => post.theme == currentTheme).map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.themeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.themeContainerHeader,\n        children: \"TH\\xC8MES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), themeList && themeList.map(theme => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.themeButton,\n          onClick: () => setCurrentTheme(theme.id),\n          children: theme && theme.name\n        }, theme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PageBodyContainer, \"Ol0xeS4aE7JMJy/4c2Fg32YUnU8=\", false, function () {\n  return [useStyles];\n});\n\n_c = PageBodyContainer;\nexport default PageBodyContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBodyContainer\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js"],"names":["React","useState","useEffect","useParams","makeStyles","CssBaseline","Button","Post","axios","UrlAPI","useStyles","postContainer","width","position","paddingTop","themeContainer","backgroundColor","height","right","top","marginTop","paddingLeft","paddingRight","themeContainerHeader","color","fontSize","fontWeight","textAlign","padding","themeButton","maxWidth","margin","PageBodyContainer","postList","setPostList","themeList","setThemeList","currentTheme","setCurrentTheme","classes","get","then","result","data","filter","post","theme","map","id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '80%',\n            position: 'relative',\n            paddingTop: '10ch',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            '&:hover': {\n                backgroundColor: '#D35233',\n                color: 'white',\n            },\n        },\n\n}));\n\n// LOGIQUE :\n\nconst PageBodyContainer = () => {\n    \n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [currentTheme, setCurrentTheme] = useState(null);\n\n    const classes = useStyles();\n    \n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => result.data)\n        .then(data => setPostList(data));\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data))\n    }, []);\n\n    return (\n        <>\n            <CssBaseline />\n            <div className= { classes.postContainer }>\n                {postList && postList.filter(post => (post.theme == currentTheme)).map(post => { \n                    return <Post key={post.id} post={post} />;\n                })}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                {themeList && themeList.map((theme) => { \n                    return (\n                        <Button key={theme.id} className={ classes.themeButton } onClick={() => setCurrentTheme(theme.id)} > \n                            {theme && theme.name} \n                        </Button>\n                    )\n                })}\n            </div>\n        </>\n    )\n};\n\nexport default PageBodyContainer;"]},"metadata":{},"sourceType":"module"}