{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core'; // STYLE :\n\nconst useStyles = makeStyles(theme => ({\n  createPostBlock: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100ch',\n    margin: 'auto'\n  },\n  createPostHeader: {\n    backgroundColor: '#D75030',\n    color: 'white',\n    width: '30ch',\n    padding: '2ch',\n    textAlign: 'center',\n    fontSize: '12px'\n  },\n  createPostBody: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#F2D3D4',\n    padding: '2ch',\n    width: '100%',\n    margin: 'auto',\n    marginBottom: '10ch'\n  },\n  createPostBodyContent: {\n    backgroundColor: '#FFFFFE',\n    width: '95%',\n    margin: 'auto',\n    padding: '2ch',\n    textAlign: 'left'\n  },\n  postContentInput: {\n    width: '100%',\n    height: '100%',\n    margin: 'auto'\n  },\n  buttons: {\n    display: 'flex',\n    width: '95%',\n    height: '3ch',\n    margin: 'auto',\n    marginTop: '2ch',\n    justifyContent: 'space-between'\n  },\n  buttonsText: {\n    color: '#D75030',\n    fontWeight: '600',\n    fontSize: '14px',\n    marginRight: '1ch'\n  },\n  dropDownList: {\n    width: '30%',\n    backgroundColor: '#D75030',\n    borderStyle: 'none',\n    color: '#FFFFFE',\n    paddingLeft: '1ch',\n    marginRight: '1ch',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  createTheme: {\n    color: '#686A6C',\n    width: '35%',\n    fontSize: '14px',\n    borderStyle: 'none',\n    paddingLeft: '1ch'\n  },\n  publish: {\n    backgroundColor: '#D75030',\n    color: '#FFFFFE',\n    borderRadius: '0',\n    width: '20%',\n    \"&:hover\": {\n      backgroundColor: '#B85030'\n    }\n  }\n})); // LOGIQUE :\n\nconst CreatePost = props => {\n  _s();\n\n  const classes = useStyles();\n  const [newPostTheme, setNewPostTheme] = useState('');\n\n  const handleChange = event => {\n    setNewPostTheme(event.target.value);\n    console.log(newPostTheme);\n  }; //Gestion d'import d'image(s) lors de la crÃ©ation d'un post.\n\n\n  const uploadedImage = useRef(null);\n  const imageUploader = useRef(null);\n\n  const handleImageUpload = e => {\n    const [file] = e.target.files;\n\n    if (file) {\n      const reader = new FileReader();\n      const {\n        current\n      } = uploadedImage;\n      current.file = file;\n\n      reader.onload = e => {\n        current.src = e.target.result;\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.createPostBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createPostHeader,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PUBLIER UN POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createPostBody,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.createPostBodyContent,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.postContentInput,\n          type: \"text\",\n          placeholder: \"Ecrivez le contenu de votre post ici...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"30ch\",\n            width: \"40ch\",\n            border: \"dotted 1px black\"\n          },\n          onClick: () => imageUploader.current.click(),\n          children: [\"Ajoutez une image...\", /*#__PURE__*/_jsxDEV(\"img\", {\n            ref: uploadedImage,\n            style: {\n              maxHeight: \"30ch\",\n              maxWidth: \"40ch\",\n              border: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          multiple: \"true\",\n          ref: imageUploader,\n          style: {\n            display: \"none\"\n          },\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: classes.dropDownList,\n          value: newPostTheme,\n          placeholder: \"Choisissez un th\\xE8me\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            selected: true,\n            \"data-default\": true,\n            children: \"Choisissez un th\\xE8me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), props.themes && props.themes.map(theme => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: theme.id,\n              children: theme.name\n            }, theme.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonsText,\n          children: \"OU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.createTheme,\n          type: \"text\",\n          id: \"new-theme\",\n          placeholder: \"Saisissez un nouveau th\\xE8me...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.publish,\n          children: \"PUBLIER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePost, \"2d9FBoAIaR3AFs4eHpVJ9Eyw0QU=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js"],"names":["React","useState","useEffect","useRef","makeStyles","axios","Button","useStyles","theme","createPostBlock","display","flexDirection","width","margin","createPostHeader","backgroundColor","color","padding","textAlign","fontSize","createPostBody","marginBottom","createPostBodyContent","postContentInput","height","buttons","marginTop","justifyContent","buttonsText","fontWeight","marginRight","dropDownList","borderStyle","paddingLeft","cursor","createTheme","publish","borderRadius","CreatePost","props","classes","newPostTheme","setNewPostTheme","handleChange","event","target","value","console","log","uploadedImage","imageUploader","handleImageUpload","e","file","files","reader","FileReader","current","onload","src","result","readAsDataURL","border","click","maxHeight","maxWidth","themes","map","id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    createPostBlock: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100ch',\n            margin: 'auto',  \n        },\n        createPostHeader: {\n            backgroundColor: '#D75030',\n            color: 'white',\n            width: '30ch',\n            padding: '2ch',\n            textAlign: 'center',\n            fontSize: '12px',\n        },\n        createPostBody: {\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: '#F2D3D4',\n            padding: '2ch',\n            width: '100%',\n            margin: 'auto',\n            marginBottom: '10ch',\n        },\n        createPostBodyContent: {\n            backgroundColor: '#FFFFFE',\n            width: '95%',\n            margin: 'auto',\n            padding: '2ch',\n            textAlign: 'left',\n        },  \n        postContentInput: {\n            width: '100%',\n            height: '100%',\n            margin: 'auto',\n        },\n        buttons: {\n            display: 'flex',\n            width: '95%',\n            height: '3ch',\n            margin: 'auto',\n            marginTop: '2ch',\n            justifyContent: 'space-between',\n        },\n        buttonsText: {\n            color: '#D75030',\n            fontWeight: '600',\n            fontSize: '14px',   \n            marginRight: '1ch',\n        },\n        dropDownList: {\n            width: '30%',\n            backgroundColor: '#D75030',\n            borderStyle: 'none',\n            color: '#FFFFFE',\n            paddingLeft: '1ch',\n            marginRight: '1ch',\n            fontSize: '14px',   \n            cursor: 'pointer',\n        },\n        createTheme: {\n            color: '#686A6C',\n            width: '35%',\n            fontSize: '14px',   \n            borderStyle: 'none',\n            paddingLeft: '1ch',\n        },\n        publish: {\n            backgroundColor: '#D75030',\n            color: '#FFFFFE',\n            borderRadius: '0',\n            width: '20%',\n            \"&:hover\": {\n                backgroundColor: '#B85030',\n            },\n        },\n}));\n\n// LOGIQUE :\n\nconst CreatePost = props => {\n\n    const classes = useStyles();\n    const [newPostTheme, setNewPostTheme] = useState('');\n    const handleChange = (event) => {\n        setNewPostTheme(event.target.value);\n        console.log(newPostTheme);\n    };\n    //Gestion d'import d'image(s) lors de la crÃ©ation d'un post.\n    const uploadedImage = useRef(null);\n    const imageUploader = useRef(null);\n    const handleImageUpload = e => {\n        const [file] = e.target.files;\n        if (file) {\n            const reader = new FileReader();\n            const {current} = uploadedImage;\n            current.file = file;\n            reader.onload = (e) => {\n                current.src = e.target.result;\n            }\n            reader.readAsDataURL(file);\n        }\n    };\n\n    return(\n        <div className= { classes.createPostBlock }>\n            <div className={classes.createPostHeader}>\n                <h2>PUBLIER UN POST</h2>\n            </div>\n            <div className={classes.createPostBody} >\n                <div className={classes.createPostBodyContent} >\n                    <input className={classes.postContentInput} type=\"text\" placeholder=\"Ecrivez le contenu de votre post ici...\" />\n                    <div \n                        style={{ height: \"30ch\", width: \"40ch\", border: \"dotted 1px black\" }} \n                        onClick={() => imageUploader.current.click()  }\n                    >\n                        Ajoutez une image...\n                        <img ref={uploadedImage} style={{ maxHeight: \"30ch\", maxWidth: \"40ch\", border: \"none\" }} />\n                    </div>\n                    <input \n                        type=\"file\" \n                        accept=\"image/*\" \n                        multiple = \"true\" \n                        ref={imageUploader} \n                        style={{ display: \"none\" }}\n                        onChange={handleImageUpload}\n                    />\n                </div>\n                <div className={classes.buttons}>\n                    <select className={classes.dropDownList} value={newPostTheme} placeholder=\"Choisissez un thÃ¨me\" onChange={handleChange}>\n                        <option value=\"\" selected data-default>Choisissez un thÃ¨me</option>\n                        {props.themes && props.themes.map((theme) => { \n                        return (\n                            <option key={theme.id} value={theme.id}>{theme.name}</option>\n                        ); })}\n                    </select>\n                    <div className={classes.buttonsText}>OU</div>\n                    <input className={classes.createTheme} type=\"text\" id=\"new-theme\" placeholder=\"Saisissez un nouveau thÃ¨me...\" />\n                    <Button className={classes.publish} >PUBLIER</Button>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}