{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button, Avatar } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\nimport FileBase64 from 'react-file-base64';\nconst UrlAPI = 'http://localhost:3000/api/'; // STYLE :\n\nconst useStyles = makeStyles(() => ({\n  postContainer: {\n    width: '60%',\n    position: 'relative',\n    paddingTop: '10ch',\n    margin: 'auto'\n  },\n  themeContainer: {\n    backgroundColor: '#F1D4D4',\n    width: '20%',\n    height: '100%',\n    position: 'absolute',\n    position: 'fixed',\n    right: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch'\n  },\n  themeContainerHeader: {\n    backgroundColor: '#D7502F',\n    color: 'white',\n    fontSize: '28px',\n    fontWeight: '600',\n    textAlign: 'center',\n    padding: '1ch'\n  },\n  themeButton: {\n    backgroundColor: '#FFFFFE',\n    color: '#696A6B',\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    \"&:hover\": {\n      backgroundColor: '#D35233',\n      color: '#FFFFFE'\n    }\n  },\n  activeTheme: {\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    backgroundColor: '#D35233',\n    color: 'white'\n  },\n  profileContainer: {\n    backgroundColor: '#FFFFFF',\n    width: '20%',\n    height: '100%',\n    position: 'absolute',\n    position: 'fixed',\n    left: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch',\n    textAlign: 'center'\n  },\n  avatar: {\n    margin: 'auto',\n    marginTop: '2ch',\n    width: '10ch',\n    height: '10ch',\n    \"&>span\": {\n      display: \"none\"\n    },\n    \"&:hover\": {\n      //opacity: '0.5',\n      \"&>span\": {\n        display: 'block',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      },\n      \"&>#avatar\": {\n        display: 'none'\n      }\n    }\n  },\n  userName: {\n    textDecoration: 'underline',\n    fontSize: '25px',\n    color: '#D75030'\n  },\n  list: {\n    listStyle: 'none',\n    color: '#545555',\n    marginLeft: '0',\n    lineHeight: '2'\n  }\n})); // LOGIQUE :\n\nconst ProfilePageBodyContainer = () => {\n  _s();\n\n  //On initialise le state.\n  const [postList, setPostList] = useState(null);\n  const [themeList, setThemeList] = useState(null);\n  const [selectedThemes, setSelectedThemes] = useState([]);\n  const [pic, setPic] = useState('');\n  const [image, setImage] = useState(\"\");\n  const classes = useStyles(); //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'posts').then(result => result.data).then(data => setPostList(data));\n  }, []); //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'themes').then(result => result.data).then(data => setThemeList(data));\n  }, []);\n  let url = window.location.pathname;\n  let userId = url.split('profile/')[1]; //On récupère la liste des users que l'on stocke dans le tableau 'userInfos'.\n\n  let userInfos;\n  useEffect(() => {\n    axios.get(UrlAPI + 'users/' + userId).then(res => {\n      console.log('voici => ', res.data[0]);\n      userInfos = res.data[0];\n    }).catch(err => console.log(err));\n  }, []);\n  console.log(userInfos);\n  /* const getImage = (img) => {\n      setImage(img.base64);\n      axios.put(UrlAPI + 'users/' + userId + '/image', { image: image })\n          .then(result => console.log(result))\n          .catch(err => console.log(err))\n  };\n   let buff = userInfos.profilePic.data;\n  let src = Buffer.from(buff).toString('base64');\n  setPic(src); */\n\n  return 'zou'\n  /* <>\n      <CssBaseline />\n      <div className= { classes.profileContainer }> \n          <Avatar className= { classes.avatar } >\n              <PersonIcon style={{fontSize: 60}} id=\"avatar\"/>\n              <FileBase64 multiple={ false } onDone={getImage} />\n              <img id=\"image\" src={pic} style={{ width: 'auto', height: 'auto'}} />\n          </Avatar>\n          <h3 className= { classes.userName }> {userInfos && userInfos.firstname + ' ' + userInfos.lastname}  </h3>\n          <p className= { classes.list } >\n              <b>{ userInfos.status}</b><br/>\n              <b>Date d'embauche :</b> { userInfos.hiringDate}<br/>\n              <b>Email :</b> {userInfos.email}<br/>\n          </p>\n      </div>\n      <div className= { classes.postContainer }>\n          <CreatePost themes={themeList} />\n          {postList && postList.filter(post => ((post.user == userInfos.id) && ((selectedThemes.includes(post.theme)) || (selectedThemes.length == 0)))).map(post => \n              { \n                  return <Post key={post.id} post={post} />;\n              }\n          )}\n      </div>\n      <div className={ classes.themeContainer } >\n          <div className={ classes.themeContainerHeader } >THÈMES</div>\n          {themeList && themeList.map((theme) => { \n              return (\n                  <Button key={theme.id} \n                      className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                      onClick={(props) => { \n                          if (!selectedThemes.includes(theme.id)) {\n                              setSelectedThemes([...selectedThemes, theme.id]);\n                          }\n                          else {\n                              setSelectedThemes(selectedThemes.filter(item => { \n                                  return item !== theme.id; \n                              }));\n                          }\n                      }} > \n                      {theme && theme.name} \n                  </Button>\n              )\n          })}\n      </div>\n  </> */\n  ;\n}; //<Theme filter={props.filter}  key={theme.id} theme={theme} />\n\n\n_s(ProfilePageBodyContainer, \"IUquNrQJcLD0wco8oKZRteC7DgI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProfilePageBodyContainer;\nexport default ProfilePageBodyContainer; //a mettre dans File6Base4 : onDone={getImage}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePageBodyContainer\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/ProfilePageBodyContainer.js"],"names":["React","useState","useEffect","useRef","useParams","makeStyles","CssBaseline","Button","Avatar","PersonIcon","Post","CreatePost","axios","FileBase64","UrlAPI","useStyles","postContainer","width","position","paddingTop","margin","themeContainer","backgroundColor","height","right","top","marginTop","paddingLeft","paddingRight","themeContainerHeader","color","fontSize","fontWeight","textAlign","padding","themeButton","maxWidth","activeTheme","profileContainer","left","avatar","display","textDecoration","cursor","userName","list","listStyle","marginLeft","lineHeight","ProfilePageBodyContainer","postList","setPostList","themeList","setThemeList","selectedThemes","setSelectedThemes","pic","setPic","image","setImage","classes","get","then","result","data","url","window","location","pathname","userId","split","userInfos","res","console","log","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button, Avatar } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\nimport FileBase64 from 'react-file-base64';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '60%',\n            position: 'relative',\n            paddingTop: '10ch',\n            margin: 'auto',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            \"&:hover\": {\n                backgroundColor: '#D35233',\n                color: '#FFFFFE',\n            },\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n        profileContainer: {\n            backgroundColor: '#FFFFFF',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            left: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n            textAlign: 'center',\n        },\n        avatar: {\n            margin: 'auto',\n            marginTop: '2ch',\n            width: '10ch',\n            height: '10ch',\n            \"&>span\": {\n                display: \"none\",\n            },\n            \"&:hover\": {\n                //opacity: '0.5',\n                \"&>span\": {\n                    display: 'block',\n                    textDecoration: 'underline',\n                    cursor: 'pointer',\n                },\n                \"&>#avatar\": {\n                    display: 'none',\n                },\n            },\n        },\n        userName: {\n            textDecoration: 'underline',\n            fontSize: '25px',\n            color: '#D75030',\n        },\n        list: {\n            listStyle: 'none',\n            color:'#545555',\n            marginLeft: '0',\n            lineHeight: '2',\n        },\n}));\n\n// LOGIQUE :\n\nconst ProfilePageBodyContainer = () => {\n        \n    //On initialise le state.\n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n    const [pic, setPic] = useState('');\n    const [image, setImage] = useState(\"\");\n\n    const classes = useStyles();\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => result.data)\n        .then(data => setPostList(data));\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data));\n    }, []);\n\n    let url = window.location.pathname;\n    let userId = url.split('profile/')[1];\n\n    //On récupère la liste des users que l'on stocke dans le tableau 'userInfos'.\n    let userInfos; \n    useEffect ( () => {\n        axios.get(UrlAPI + 'users/' + userId)\n            .then(res => { \n                console.log('voici => ', res.data[0]);\n                userInfos = res.data[0];\n            })\n            .catch(err => console.log(err));\n    }, []);\n    console.log(userInfos);\n    \n    /* const getImage = (img) => {\n        setImage(img.base64);\n        axios.put(UrlAPI + 'users/' + userId + '/image', { image: image })\n            .then(result => console.log(result))\n            .catch(err => console.log(err))\n    };\n\n    let buff = userInfos.profilePic.data;\n    let src = Buffer.from(buff).toString('base64');\n    setPic(src); */\n    \n    return ( 'zou'\n        /* <>\n            <CssBaseline />\n            <div className= { classes.profileContainer }> \n                <Avatar className= { classes.avatar } >\n                    <PersonIcon style={{fontSize: 60}} id=\"avatar\"/>\n                    <FileBase64 multiple={ false } onDone={getImage} />\n                    <img id=\"image\" src={pic} style={{ width: 'auto', height: 'auto'}} />\n                </Avatar>\n                <h3 className= { classes.userName }> {userInfos && userInfos.firstname + ' ' + userInfos.lastname}  </h3>\n                <p className= { classes.list } >\n                    <b>{ userInfos.status}</b><br/>\n                    <b>Date d'embauche :</b> { userInfos.hiringDate}<br/>\n                    <b>Email :</b> {userInfos.email}<br/>\n                </p>\n            </div>\n            <div className= { classes.postContainer }>\n                <CreatePost themes={themeList} />\n                {postList && postList.filter(post => ((post.user == userInfos.id) && ((selectedThemes.includes(post.theme)) || (selectedThemes.length == 0)))).map(post => \n                    { \n                        return <Post key={post.id} post={post} />;\n                    }\n                )}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                {themeList && themeList.map((theme) => { \n                    return (\n                        <Button key={theme.id} \n                            className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                            onClick={(props) => { \n                                if (!selectedThemes.includes(theme.id)) {\n                                    setSelectedThemes([...selectedThemes, theme.id]);\n                                }\n                                else {\n                                    setSelectedThemes(selectedThemes.filter(item => { \n                                        return item !== theme.id; \n                                    }));\n                                }\n                            }} > \n                            {theme && theme.name} \n                        </Button>\n                    )\n                })}\n            </div>\n        </> */\n    );\n};\n\n//<Theme filter={props.filter}  key={theme.id} theme={theme} />\nexport default ProfilePageBodyContainer;\n\n//a mettre dans File6Base4 : onDone={getImage}"]},"metadata":{},"sourceType":"module"}