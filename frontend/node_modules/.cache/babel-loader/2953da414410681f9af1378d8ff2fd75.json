{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\nconst UrlAPI = 'http://localhost:3000/api/'; // STYLE :\n\nconst useStyles = makeStyles(() => ({\n  postContainer: {\n    width: '80%',\n    position: 'relative',\n    paddingTop: '10ch'\n  },\n  themeContainer: {\n    backgroundColor: '#F1D4D4',\n    width: '20%',\n    height: '100%',\n    position: 'fixed',\n    right: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch'\n  },\n  themeContainerHeader: {\n    backgroundColor: '#D7502F',\n    color: 'white',\n    fontSize: '28px',\n    fontWeight: '600',\n    textAlign: 'center',\n    padding: '1ch'\n  },\n  themeFlexBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    height: '100%'\n  },\n  themesButtons: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  cancelFiltersButton: {\n    backgroundColor: '#D64F30',\n    color: 'white',\n    \"&:hover\": {\n      backgroundColor: '#FF5F39'\n    },\n    marginLeft: '1ch',\n    marginRight: '1ch',\n    marginTop: '1ch'\n  },\n  themeButton: {\n    backgroundColor: '#FFFFFE',\n    color: '#696A6B',\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    \"&:hover\": {\n      backgroundColor: '#D64F30',\n      color: '#FFFFFE'\n    }\n  },\n  activeTheme: {\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    backgroundColor: '#D35233',\n    color: 'white'\n  }\n})); // LOGIQUE :\n\nconst PageBodyContainer = props => {\n  _s();\n\n  const [postList, setPostList] = useState(null);\n  const [themeList, setThemeList] = useState(null);\n  const [selectedThemes, setSelectedThemes] = useState([]);\n  const classes = useStyles();\n  const users = props.userList;\n\n  const getUser = userid => {\n    return users.filter(user => user.id == userid);\n  }; //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'posts').then(result => result.data).then(data => {\n      setPostList(data.map(p => {\n        p.author = getUser(p.user);\n        return p;\n      }));\n    });\n  }, []); //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'themes').then(result => result.data).then(data => setThemeList(data));\n  }, []);\n\n  const cancelFilters = () => {\n    setSelectedThemes([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postContainer,\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        themes: themeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), postList && postList.filter(post => selectedThemes.includes(post.theme) || selectedThemes.length == 0).map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.themeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.themeContainerHeader,\n        children: \"TH\\xC8MES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.themeFlexBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.themesButtons,\n          children: themeList && themeList.map(theme => {\n            return /*#__PURE__*/_jsxDEV(Button, {\n              className: selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton,\n              onClick: () => {\n                if (!selectedThemes.includes(theme.id)) {\n                  setSelectedThemes([...selectedThemes, theme.id]);\n                } else {\n                  setSelectedThemes(selectedThemes.filter(item => {\n                    return item !== theme.id;\n                  }));\n                }\n              },\n              children: theme && theme.name\n            }, theme.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.cancelFiltersButton,\n          onClick: cancelFilters,\n          children: \"Retirer tous les filtres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PageBodyContainer, \"x3prm9b6RTdj1pHgUKDGsBc77pg=\", false, function () {\n  return [useStyles];\n});\n\n_c = PageBodyContainer;\nexport default PageBodyContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBodyContainer\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js"],"names":["React","useState","useEffect","makeStyles","CssBaseline","Button","Post","CreatePost","axios","UrlAPI","useStyles","postContainer","width","position","paddingTop","themeContainer","backgroundColor","height","right","top","marginTop","paddingLeft","paddingRight","themeContainerHeader","color","fontSize","fontWeight","textAlign","padding","themeFlexBox","display","flexDirection","justifyContent","themesButtons","flexWrap","cancelFiltersButton","marginLeft","marginRight","themeButton","maxWidth","margin","activeTheme","PageBodyContainer","props","postList","setPostList","themeList","setThemeList","selectedThemes","setSelectedThemes","classes","users","userList","getUser","userid","filter","user","id","get","then","result","data","map","p","author","cancelFilters","post","includes","theme","length","item","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '80%',\n            position: 'relative',\n            paddingTop: '10ch',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeFlexBox: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n            height: '100%',\n        },\n        themesButtons: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n        },\n        cancelFiltersButton: {\n            backgroundColor: '#D64F30',\n            color: 'white',\n            \"&:hover\": {\n                backgroundColor: '#FF5F39'\n            },\n            marginLeft: '1ch',\n            marginRight: '1ch',\n            marginTop: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            \"&:hover\": {\n                backgroundColor: '#D64F30',\n                color: '#FFFFFE',\n            },\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n}));\n\n// LOGIQUE :\n\nconst PageBodyContainer = (props) => {   \n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n\n    const classes = useStyles();\n\n    const users = props.userList;\n\n    const getUser = (userid) => {\n        return users.filter(user => (user.id == userid));\n    }\n    \n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => result.data)\n        .then(data => { \n            setPostList(data.map(p => { \n                p.author=getUser(p.user); \n                return p; \n            }));\n        });\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data))\n    }, []);\n\n    const cancelFilters = () => {\n        setSelectedThemes([]);\n    };\n\n    return (\n        <>\n            <CssBaseline />\n                <div className= { classes.postContainer }>\n                    <CreatePost themes={themeList} />\n                    {postList && postList.filter(post => ((selectedThemes.includes(post.theme))||(selectedThemes.length == 0))).map( (post) => { \n                        return <Post key={post.id} post={post}/>;\n                    })}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                    <div className={classes.themeFlexBox}>\n                        <div className={classes.themesButtons}>\n                            {themeList && themeList.map((theme) => { \n                                return (\n                                    <Button key={theme.id} \n                                        className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                                        onClick={() => { \n                                            if (!selectedThemes.includes(theme.id)) {\n                                                setSelectedThemes([...selectedThemes, theme.id]);\n                                            }\n                                            else {\n                                                setSelectedThemes(selectedThemes.filter(item => { \n                                                    return item !== theme.id; \n                                                }));\n                                            }\n                                        }} > \n                                        {theme && theme.name} \n                                    </Button>\n                                )\n                            })}\n                        </div>\n                        <Button className={classes.cancelFiltersButton} onClick={cancelFilters} >Retirer tous les filtres</Button>\n                    </div>\n            </div>\n        </>\n    )\n};\n\nexport default PageBodyContainer;"]},"metadata":{},"sourceType":"module"}