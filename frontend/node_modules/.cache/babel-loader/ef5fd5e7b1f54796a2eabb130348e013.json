{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport axios from 'axios';\nconst UrlAPI = 'http://localhost:3000/api/'; // STYLE :\n\nconst useStyles = makeStyles(() => ({\n  postContainer: {\n    width: '80%',\n    position: 'relative',\n    paddingTop: '10ch'\n  },\n  createPostBlock: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '120ch',\n    margin: 'auto'\n  },\n  createPostHeader: {\n    backgroundColor: '#D75030',\n    color: 'white',\n    width: '30ch',\n    padding: '2ch',\n    textAlign: 'center'\n  },\n  createPostBody: {\n    backgroundColor: '#F1D4D4'\n  },\n  themeContainer: {\n    backgroundColor: '#F1D4D4',\n    width: '20%',\n    height: '100%',\n    position: 'absolute',\n    position: 'fixed',\n    right: '0',\n    top: '0',\n    marginTop: '10ch',\n    paddingLeft: '1ch',\n    paddingRight: '1ch'\n  },\n  themeContainerHeader: {\n    backgroundColor: '#D7502F',\n    color: 'white',\n    fontSize: '28px',\n    fontWeight: '600',\n    textAlign: 'center',\n    padding: '1ch'\n  },\n  themeButton: {\n    backgroundColor: '#FFFFFE',\n    color: '#696A6B',\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch'\n  },\n  activeTheme: {\n    fontSize: '18px',\n    fontWeight: '400',\n    padding: '1ch',\n    maxWidth: '24ch',\n    width: '14ch',\n    textAlign: 'center',\n    margin: '1ch',\n    backgroundColor: '#D35233',\n    color: 'white'\n  }\n})); // LOGIQUE :\n\nconst PageBodyContainer = () => {\n  _s();\n\n  const [postList, setPostList] = useState(null);\n  const [themeList, setThemeList] = useState(null);\n  const [selectedThemes, setSelectedThemes] = useState([]);\n  const classes = useStyles(); //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'posts').then(result => result.data).then(data => setPostList(data));\n  }, []); //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n\n  useEffect(() => {\n    axios.get(UrlAPI + 'themes').then(result => result.data).then(data => setThemeList(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createPostBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.createPostHeader,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PUBLIER UN POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.createPostBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.postContainer,\n      children: postList && postList.filter(post => selectedThemes.includes(post.theme) || selectedThemes.length == 0).map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.themeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.themeContainerHeader,\n        children: \"TH\\xC8MES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), themeList && themeList.map(theme => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton,\n          onClick: props => {\n            if (!selectedThemes.includes(theme.id)) {\n              setSelectedThemes([...selectedThemes, theme.id]);\n            } else {\n              setSelectedThemes(selectedThemes.filter(item => {\n                return item !== theme.id;\n              }));\n            }\n          },\n          children: theme && theme.name\n        }, theme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; //}\n\n\n_s(PageBodyContainer, \"x3prm9b6RTdj1pHgUKDGsBc77pg=\", false, function () {\n  return [useStyles];\n});\n\n_c = PageBodyContainer;\nexport default PageBodyContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBodyContainer\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js"],"names":["React","useState","useEffect","useParams","makeStyles","CssBaseline","Button","Post","axios","UrlAPI","useStyles","postContainer","width","position","paddingTop","createPostBlock","display","flexDirection","margin","createPostHeader","backgroundColor","color","padding","textAlign","createPostBody","themeContainer","height","right","top","marginTop","paddingLeft","paddingRight","themeContainerHeader","fontSize","fontWeight","themeButton","maxWidth","activeTheme","PageBodyContainer","postList","setPostList","themeList","setThemeList","selectedThemes","setSelectedThemes","classes","get","then","result","data","filter","post","includes","theme","length","map","id","props","item","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst useStyles = makeStyles(() => ({\n        postContainer: {\n            width: '80%',\n            position: 'relative',\n            paddingTop: '10ch',\n        },\n        createPostBlock: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '120ch',\n            margin: 'auto',  \n        },\n        createPostHeader: {\n            backgroundColor: '#D75030',\n            color: 'white',\n            width: '30ch',\n            padding: '2ch',\n            textAlign: 'center',\n        },\n        createPostBody: {\n            backgroundColor: '#F1D4D4',\n        },\n        themeContainer: {\n            backgroundColor: '#F1D4D4',\n            width: '20%',\n            height: '100%',\n            position: 'absolute',\n            position: 'fixed',\n            right: '0', \n            top: '0',\n            marginTop: '10ch',      \n            paddingLeft: '1ch',\n            paddingRight: '1ch',\n        },\n        themeContainerHeader: {\n            backgroundColor: '#D7502F',\n            color: 'white',\n            fontSize: '28px',\n            fontWeight: '600',\n            textAlign: 'center',\n            padding: '1ch',\n        },\n        themeButton: {\n            backgroundColor: '#FFFFFE',\n            color: '#696A6B',\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n        },\n        activeTheme: {\n            fontSize: '18px',\n            fontWeight: '400',\n            padding: '1ch',\n            maxWidth: '24ch',\n            width: '14ch',\n            textAlign: 'center',\n            margin: '1ch',\n            backgroundColor: '#D35233',\n            color: 'white',\n        },\n\n}));\n\n// LOGIQUE :\n\nconst PageBodyContainer = () => {\n    \n    const [postList, setPostList] = useState(null);\n    const [themeList, setThemeList] = useState(null);\n    const [selectedThemes, setSelectedThemes] = useState([]);\n\n    const classes = useStyles();\n    \n    //On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'posts')\n        .then(result => result.data)\n        .then(data => setPostList(data));\n    }, []);\n\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    useEffect ( () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => setThemeList(data))\n    }, []);\n\n    return (\n        <>\n            <CssBaseline />\n            <div className= { classes.createPostBlock }>\n                    <div className={classes.createPostHeader}>\n                        <h2>PUBLIER UN POST</h2>\n                    </div>\n                    <div className={classes.createPostBody} >\n                    </div>\n            </div>\n            <div className= { classes.postContainer }>\n                {postList && postList.filter(post => ((selectedThemes.includes(post.theme))||(selectedThemes.length == 0))).map(post => { \n                    return <Post key={post.id} post={post} />;\n                })}\n            </div>\n            <div className={ classes.themeContainer } >\n                <div className={ classes.themeContainerHeader } >THÈMES</div>\n                {themeList && themeList.map((theme) => { \n                    return (\n                        <Button key={theme.id} \n                            className={selectedThemes.includes(theme.id) ? classes.activeTheme : classes.themeButton}\n                            onClick={(props) => { \n                                if (!selectedThemes.includes(theme.id)) {\n                                    setSelectedThemes([...selectedThemes, theme.id]);\n                                }\n                                else {\n                                    setSelectedThemes(selectedThemes.filter(item => { \n                                        return item !== theme.id; \n                                    }));\n                                }\n                            }} > \n                            {theme && theme.name} \n                        </Button>\n                    )\n                })}\n            </div>\n        </>\n    )\n};\n//}\n\nexport default PageBodyContainer;"]},"metadata":{},"sourceType":"module"}