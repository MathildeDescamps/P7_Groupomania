{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport ImageUploader from 'react-images-upload';\nimport authHeader from '../AuthForm/AuthHeader';\nconst UrlAPI = 'http://localhost:3000/api'; // STYLE :\n\nconst useStyles = makeStyles(theme => ({\n  createPostBlock: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '70%',\n    margin: 'auto',\n    marginTop: '4ch'\n  },\n  createPostHeader: {\n    backgroundColor: '#D75030',\n    color: 'white',\n    width: '25%',\n    padding: '1ch',\n    textAlign: 'left',\n    fontSize: '12px'\n  },\n  createPostBody: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#F2D3D4',\n    padding: '2ch',\n    width: '100%',\n    margin: 'auto',\n    marginBottom: '10ch'\n  },\n  createPostBodyContent: {\n    backgroundColor: '#FFFFFE',\n    width: '95%',\n    margin: 'auto',\n    padding: '2ch',\n    textAlign: 'left'\n  },\n  postTextarea: {\n    width: '100%',\n    height: 'auto',\n    fontFamily: 'Avenir, Segoe, UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n    border: 'none',\n    \"&:focus\": {\n      outline: 'none'\n    }\n  },\n  buttons: {\n    display: 'flex',\n    width: '95%',\n    height: '3.5ch',\n    margin: 'auto',\n    marginTop: '2ch',\n    justifyContent: 'space-between'\n  },\n  buttonsText: {\n    color: '#D75030',\n    fontWeight: '600',\n    fontSize: '14px',\n    marginRight: '1ch',\n    marginTop: '0.5ch'\n  },\n  dropDownList: {\n    width: '30%',\n    backgroundColor: '#D75030',\n    borderStyle: 'none',\n    color: '#FFFFFE',\n    paddingLeft: '1ch',\n    marginRight: '1ch',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  createTheme: {\n    color: '#686A6C',\n    width: '35%',\n    fontSize: '14px',\n    borderStyle: 'none',\n    paddingLeft: '1ch'\n  },\n  publish: {\n    backgroundColor: '#D75030',\n    color: '#FFFFFE',\n    borderRadius: '5px',\n    width: '15%',\n    fontWeight: '400',\n    \"&:hover\": {\n      backgroundColor: '#B85030'\n    }\n  }\n})); // LOGIQUE :\n\nconst CreatePost = props => {\n  _s();\n\n  const classes = useStyles();\n  const [content, setContent] = useState('');\n  const [user, setUser] = useState('');\n  const [theme, setTheme] = useState('');\n  const [pictures, setPictures] = useState([]);\n  const currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n  const handleChange = event => {\n    setTheme(event.target.value);\n  };\n\n  const handleContent = event => {\n    setContent(event.target.value);\n  }; //Gestion d'import d'image(s) lors de la création d'un post.\n\n\n  const onDrop = picture => {\n    setPictures(picture);\n  };\n\n  const handlePublication = () => {\n    axios({\n      method: 'post',\n      url: UrlAPI + '/posts',\n      data: {\n        content: content,\n        theme: theme,\n        user: currentUser.id\n      },\n      headers: authHeader()\n    }).then(function (response) {\n      //On traite la suite une fois la réponse obtenue \n      let postId = response.data.id;\n\n      if (pictures.length > 0) {\n        const fd = new FormData();\n        let pictureList = [];\n        pictureList = pictures.map(p => {\n          fd.append('image', p);\n        });\n        const config = {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'x-access-token': currentUser.token\n          }\n        };\n        axios.post(UrlAPI + '/posts/' + postId + '/images', fd, config).then(function (response) {\n          console.log('image:', response);\n          window.location.reload(false);\n        }).catch(function (error) {\n          //On traite ici les erreurs éventuellement survenues\n          console.log(error);\n        });\n      } else window.location.reload(false);\n    }).catch(function (error) {\n      //On traite ici les erreurs éventuellement survenues\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.createPostBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createPostHeader,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PUBLIER UN POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createPostBody,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.createPostBodyContent,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: classes.postTextarea,\n          placeholder: \"Ecrivez le contenu de votre post ici...\",\n          value: content,\n          onChange: handleContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n          withIcon: false,\n          buttonText: \"Ajoutez des images\",\n          onChange: onDrop,\n          imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n          maxFileSize: 5242880,\n          withPreview: true,\n          withLabel: false,\n          fileSizeError: \"Image trop volumineuse\",\n          buttonStyles: {\n            backgroundColor: '#757575',\n            borderRadius: '5px',\n            position: \"relative\",\n            margin: \"0\",\n            height: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: classes.dropDownList,\n          value: theme,\n          placeholder: \"Choisissez un th\\xE8me\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            defaultValue: true,\n            \"data-default\": true,\n            children: \"Choisissez un th\\xE8me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), props.themes && props.themes.map(theme => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: theme.id,\n              children: theme.name\n            }, theme.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonsText,\n          children: \"OU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.createTheme,\n          type: \"text\",\n          id: \"new-theme\",\n          placeholder: \"Saisissez un nouveau th\\xE8me...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlePublication,\n          className: classes.publish,\n          children: \"PUBLIER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePost, \"9LY0IGVlliSK5EkqW6Cd/wLB7yk=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreatePost;\n{\n  /* <div \n     style={{ height: \"auto\", width: \"40ch\", border: \"dotted 1px black\", textAlign: \"center\" }} \n     onClick={() => imageUploader.current.click()  }\n  >\n     Cliquez ici pour ajouter des images...\n     <img ref={uploadedImage} style={{ maxHeight: \"30ch\", maxWidth: \"40ch\", border: \"none\" }} />\n  </div>\n  <input \n     type=\"file\" \n     accept=\"image/*\" \n     multiple = \"true\" \n     ref={imageUploader} \n     style={{ display: \"none\" }}\n     onChange={handleImageUpload}\n  /> */\n}\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/CreatePost.js"],"names":["React","useState","makeStyles","axios","Button","ImageUploader","authHeader","UrlAPI","useStyles","theme","createPostBlock","display","flexDirection","width","margin","marginTop","createPostHeader","backgroundColor","color","padding","textAlign","fontSize","createPostBody","marginBottom","createPostBodyContent","postTextarea","height","fontFamily","border","outline","buttons","justifyContent","buttonsText","fontWeight","marginRight","dropDownList","borderStyle","paddingLeft","cursor","createTheme","publish","borderRadius","CreatePost","props","classes","content","setContent","user","setUser","setTheme","pictures","setPictures","currentUser","JSON","parse","sessionStorage","getItem","handleChange","event","target","value","handleContent","onDrop","picture","handlePublication","method","url","data","id","headers","then","response","postId","length","fd","FormData","pictureList","map","p","append","config","token","post","console","log","window","location","reload","catch","error","position","themes","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport ImageUploader from 'react-images-upload';\nimport authHeader from '../AuthForm/AuthHeader';\n\nconst UrlAPI = 'http://localhost:3000/api';\n\n// STYLE :\n\nconst useStyles = makeStyles((theme) => ({\n    createPostBlock: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '70%',\n            margin: 'auto',  \n            marginTop: '4ch',\n        },\n        createPostHeader: {\n            backgroundColor: '#D75030',\n            color: 'white',\n            width: '25%',\n            padding: '1ch',\n            textAlign: 'left',\n            fontSize: '12px',\n        },\n        createPostBody: {\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: '#F2D3D4',\n            padding: '2ch',\n            width: '100%',\n            margin: 'auto',\n            marginBottom: '10ch',\n        },\n        createPostBodyContent: {\n            backgroundColor: '#FFFFFE',\n            width: '95%',\n            margin: 'auto',\n            padding: '2ch',\n            textAlign: 'left',\n        },  \n        postTextarea: {\n            width: '100%',\n            height: 'auto',\n            fontFamily: 'Avenir, Segoe, UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n            border: 'none',\n            \"&:focus\": {\n                outline: 'none',\n            },\n        },\n        buttons: {\n            display: 'flex',\n            width: '95%',\n            height: '3.5ch',\n            margin: 'auto',\n            marginTop: '2ch',\n            justifyContent: 'space-between',\n        },\n        buttonsText: {\n            color: '#D75030',\n            fontWeight: '600',\n            fontSize: '14px',   \n            marginRight: '1ch',\n            marginTop: '0.5ch',\n        },\n        dropDownList: {\n            width: '30%',\n            backgroundColor: '#D75030',\n            borderStyle: 'none',\n            color: '#FFFFFE',\n            paddingLeft: '1ch',\n            marginRight: '1ch',\n            fontSize: '14px',   \n            cursor: 'pointer',\n        },\n        createTheme: {\n            color: '#686A6C',\n            width: '35%',\n            fontSize: '14px',   \n            borderStyle: 'none',\n            paddingLeft: '1ch',\n        },\n        publish: {\n            backgroundColor: '#D75030',\n            color: '#FFFFFE',\n            borderRadius: '5px',\n            width: '15%',\n            fontWeight: '400',\n            \"&:hover\": {\n                backgroundColor: '#B85030',\n            },\n        },\n}));\n\n// LOGIQUE :\n\nconst CreatePost = props => {\n\n    const classes = useStyles();\n    const [content, setContent] = useState('');\n    const [user, setUser] = useState('');\n    const [theme, setTheme] = useState('');\n    const [pictures, setPictures] = useState([]);\n\n    const currentUser = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n\n    const handleChange = (event) => {\n        setTheme(event.target.value);\n    };\n\n    const handleContent = (event) => {\n        setContent(event.target.value);\n    };\n    \n    //Gestion d'import d'image(s) lors de la création d'un post.\n    const onDrop = picture => {\n        setPictures(picture);\n    };\n\n    const handlePublication = () => {\n            axios({\n                method: 'post',\n                url: UrlAPI + '/posts',\n                data: { content : content, theme: theme, user: currentUser.id },\n                headers: authHeader(),\n            })\n            .then(function (response) {\n                //On traite la suite une fois la réponse obtenue \n                let postId = response.data.id;\n                if (pictures.length >0) {\n                    const fd = new FormData();\n                    let pictureList = [];\n                    pictureList = pictures.map(p => {\n                        fd.append('image', p);\n                    });                    \n                    const config = {\n                        headers: {\n                            'Content-Type' : 'multipart/form-data',\n                            'x-access-token': currentUser.token,\n                        }\n                    }\n                     axios.post(UrlAPI + '/posts/' + postId + '/images', fd, config)\n                        .then(function (response) {\n                            console.log('image:', response);\n                            window.location.reload(false);\n                        })\n                        .catch(function (error) {\n                            //On traite ici les erreurs éventuellement survenues\n                            console.log(error);\n                        });\n                }\n                else window.location.reload(false);\n            })\n            .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error);\n            });\n        };\n\n    return(\n        <div className= { classes.createPostBlock }>\n            <div className={classes.createPostHeader}>\n                <h2>PUBLIER UN POST</h2>\n            </div>\n            <div className={classes.createPostBody} >\n                <div className={classes.createPostBodyContent} >\n                    <textarea className={classes.postTextarea} placeholder=\"Ecrivez le contenu de votre post ici...\" value={content} onChange={handleContent}/>\n                    <ImageUploader\n                        withIcon={false}\n                        buttonText='Ajoutez des images'\n                        onChange={onDrop}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                        maxFileSize={5242880}\n                        withPreview={true}\n                        withLabel={false}\n                        fileSizeError='Image trop volumineuse'\n                        buttonStyles={{backgroundColor: '#757575', borderRadius: '5px', position: \"relative\", margin: \"0\", height: '30px'}}\n                    />\n                </div>\n                <div className={classes.buttons}>\n                    <select className={classes.dropDownList} value={theme} placeholder=\"Choisissez un thème\" onChange={handleChange}>\n                        <option value=\"\" defaultValue data-default>Choisissez un thème</option>\n                        {props.themes && props.themes.map((theme) => { \n                        return (\n                            <option key={theme.id} value={theme.id}>{theme.name}</option>\n                        ); })}\n                    </select>\n                    <div className={classes.buttonsText}>OU</div>\n                    <input className={classes.createTheme} type=\"text\" id=\"new-theme\" placeholder=\"Saisissez un nouveau thème...\" />\n                    <Button onClick={handlePublication} className={classes.publish} >PUBLIER</Button>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n{/* <div \n    style={{ height: \"auto\", width: \"40ch\", border: \"dotted 1px black\", textAlign: \"center\" }} \n    onClick={() => imageUploader.current.click()  }\n>\n    Cliquez ici pour ajouter des images...\n    <img ref={uploadedImage} style={{ maxHeight: \"30ch\", maxWidth: \"40ch\", border: \"none\" }} />\n</div>\n<input \n    type=\"file\" \n    accept=\"image/*\" \n    multiple = \"true\" \n    ref={imageUploader} \n    style={{ display: \"none\" }}\n    onChange={handleImageUpload}\n/> */}\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}