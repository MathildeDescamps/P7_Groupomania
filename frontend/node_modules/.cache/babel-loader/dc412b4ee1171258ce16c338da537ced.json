{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/LoginForm/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport clsx from 'clsx';\nimport { TextField, Button, Typography, Link } from '@material-ui/core/';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\nimport axios from 'axios';\nconst UrlAPI = 'http://localhost:3000/api/auth';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#F1D4D4',\n    color: '#9C9D9C',\n    width: '50ch',\n    height: '55ch',\n    position: 'absolute',\n    top: 110,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    margin: 'auto',\n    paddingTop: '5ch'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    width: '25ch',\n    marginBottom: '2ch',\n    backgroundColor: '#F6F5F5'\n  },\n  checkbox: {\n    backgroundColor: 'white',\n    width: '30ch'\n  },\n  checkboxLabel: {\n    fontSize: '5px'\n  },\n  button: {\n    backgroundColor: '#D75030',\n    width: '25ch',\n    color: 'white'\n  }\n}));\n\nconst LoginForm = () => {\n  _s();\n\n  //On crée les constantes login, password, etc et on les initialise. Ce sont des strings vides au départ mais elles seront mises à jour avec setName().\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [hiringDate, setHiringDate] = useState(\"\");\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    //On place ici la logique a appliquer lorsque le user clique sur 'Se connecter'.\n    axios({\n      method: 'post',\n      url: UrlAPI + '/login',\n      data: {\n        email: email,\n        password: password\n      }\n    }).then(function (response) {\n      //On traite la suite une fois la réponse obtenue \n      console.log(response);\n    }).catch(function (error) {\n      //On traite ici les erreurs éventuellement survenues\n      console.log(error);\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: (classes.margin, classes.textField),\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"input-with-icon-adornment\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"input-with-icon-adornment\",\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this),\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.textField),\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-password\",\n          children: \"Mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"password-field\",\n          type: showPassword ? 'text' : 'password',\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this),\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        className: classes.checkbox,\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"RGPD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this),\n        style: \"font-size: 10px;\",\n        label: \"En cochant cette case, je reconnais avoir pris connaissance de la charte RGPD de CAP Formation et en accepte les termes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        onClick: handleSubmit,\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        onClick: handleSubmit,\n        variant: \"body2\",\n        children: \"Vous n'avez pas encore de compte ? S'inscrire.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LoginForm, \"uPL3YI4zZEiePWQE0z1220zRwaA=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/LoginForm/LoginForm.js"],"names":["React","Component","useState","clsx","TextField","Button","Typography","Link","FormControlLabel","Checkbox","IconButton","Input","InputLabel","InputAdornment","FormControl","AccountCircle","Visibility","VisibilityOff","makeStyles","StylesProvider","axios","UrlAPI","useStyles","theme","root","display","flexDirection","alignItems","backgroundColor","color","width","height","position","top","bottom","left","right","margin","paddingTop","spacing","textField","marginBottom","checkbox","checkboxLabel","fontSize","button","LoginForm","email","setEmail","password","setPassword","showPassword","setShowPassword","firstname","setFirstname","lastname","setLastname","status","setStatus","hiringDate","setHiringDate","classes","handleSubmit","e","method","url","data","then","response","console","log","catch","error","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport clsx from 'clsx';\nimport { TextField, Button, Typography, Link } from '@material-ui/core/';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\nimport axios from 'axios';\nconst UrlAPI = 'http://localhost:3000/api/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection : 'column',\n    alignItems: 'center',\n    backgroundColor: '#F1D4D4',\n    color: '#9C9D9C',\n    width: '50ch',\n    height: '55ch',\n    position: 'absolute',\n    top: 110,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    margin: 'auto',\n    paddingTop: '5ch',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    width: '25ch',\n    marginBottom: '2ch',\n    backgroundColor: '#F6F5F5',\n  },\n    checkbox: {\n        backgroundColor: 'white',\n        width: '30ch',\n    },\n    checkboxLabel: {\n        fontSize: '5px',\n    },\n    button: {\n        backgroundColor: '#D75030',\n        width: '25ch',\n        color: 'white',\n    }\n}));\n\nconst LoginForm = () => {\n\n        //On crée les constantes login, password, etc et on les initialise. Ce sont des strings vides au départ mais elles seront mises à jour avec setName().\n        const [email, setEmail] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n        const [showPassword, setShowPassword] = useState(false);\n        const [firstname, setFirstname] = useState(\"\");\n        const [lastname, setLastname] = useState(\"\");\n        const [status, setStatus] = useState(\"\");\n        const [hiringDate, setHiringDate] = useState(\"\");\n\n        const classes = useStyles();\n\n        const handleSubmit = (e) => {\n            //On place ici la logique a appliquer lorsque le user clique sur 'Se connecter'.\n            axios({\n                method: 'post',\n                url: UrlAPI + '/login',\n                data: { email : email, password: password}\n            })\n            .then(function (response) {\n                //On traite la suite une fois la réponse obtenue \n                console.log(response);\n            })\n            .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error);\n            });\n        };\n\n        const handleClickShowPassword = () => {\n            setShowPassword(!showPassword);\n        };\n\n        const handleMouseDownPassword = (event) => {\n            event.preventDefault();\n        };\n\n        return (\n            <div>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n              <FormControl className={classes.margin, classes.textField}>\n                    {<InputLabel htmlFor=\"input-with-icon-adornment\">Email</InputLabel>}\n                    <Input\n                    id=\"input-with-icon-adornment\"\n                    startAdornment={\n                        <InputAdornment position=\"start\">\n                        <AccountCircle />\n                        </InputAdornment>\n                    }\n                    onChange={(e) => setEmail(e.target.value)}\n                    />\n                </FormControl>\n                <FormControl className={clsx(classes.margin, classes.textField)}>\n                    {<InputLabel htmlFor=\"standard-adornment-password\">Mot de passe</InputLabel>}\n                    <Input id=\"password-field\" \n                        type={showPassword ? 'text' : 'password'}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                >\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                        onChange={(e) => setPassword(e.target.value)}/>\n                </FormControl>\n                    <FormControlLabel className={classes.checkbox} control={ \n                        <Checkbox name=\"RGPD\" />\n                    } style=\"font-size: 10px;\"\n                    label=\"En cochant cette case, je reconnais avoir pris connaissance de la charte RGPD de CAP Formation et en accepte les termes.\"\n                    />\n                    <Button className={classes.button} onClick={handleSubmit}>Se connecter</Button>\n                    <Link href=\"#\" onClick={handleSubmit} variant=\"body2\">\n    Vous n'avez pas encore de compte ? S'inscrire.\n  </Link>\n                </form>\n            </div>\n        );\n    };\n\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}