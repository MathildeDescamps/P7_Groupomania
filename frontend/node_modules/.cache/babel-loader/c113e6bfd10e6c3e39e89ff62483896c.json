{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/LoginForm/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { TextField, Button } from '@material-ui/core/';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\nimport axios from 'axios';\n\nconst LoginForm = () => {\n  _s();\n\n  //On crée les constantes login, password, etc et on les initialise. Ce sont des strings vides au départ mais elles seront mises à jour avec setName().\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [hiringDate, setHiringDate] = useState(\"\");\n\n  const handleSubmit = e => {\n    //On place ici la logique a appliquer lorsque le user clique sur 'Se connecter'.\n    axios({\n      method: 'post',\n      url: 'http://localhost:3000/api/auth/login',\n      data: {\n        email: email,\n        password: password\n      }\n    }).then(function (reponse) {\n      //On traite la suite une fois la réponse obtenue \n      console.log(reponse);\n    }).catch(function (erreur) {\n      //On traite ici les erreurs éventuellement survenues\n      console.log(erreur);\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"email-field\",\n        label: \"Email\",\n        variant: \"filled\",\n        type: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"password-field\",\n        label: \"Mot de passe\",\n        variant: \"filled\",\n        type: showPassword ? 'text' : 'password',\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"toggle password visibility\",\n            onClick: handleClickShowPassword,\n            onMouseDown: handleMouseDownPassword,\n            children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 56\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 73\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this),\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"RGPD\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this),\n        label: \"En cochant cette case, je reconnais avoir pris connaissance de la charte RGPD de CAP Formation et en accepte les termes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSubmit,\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LoginForm, \"S9oViSj1CsNAeWVvk0m0FR4wkdQ=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/LoginForm/LoginForm.js"],"names":["React","Component","useState","TextField","Button","FormControlLabel","Checkbox","IconButton","InputAdornment","makeStyles","StylesProvider","axios","LoginForm","email","setEmail","password","setPassword","showPassword","setShowPassword","firstname","setFirstname","lastname","setLastname","status","setStatus","hiringDate","setHiringDate","handleSubmit","e","method","url","data","then","reponse","console","log","catch","erreur","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","target","value","values"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { TextField, Button } from '@material-ui/core/';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\nimport axios from 'axios';\n\nconst LoginForm = () => {\n\n        //On crée les constantes login, password, etc et on les initialise. Ce sont des strings vides au départ mais elles seront mises à jour avec setName().\n        const [email, setEmail] = useState(\"\");\n        const [password, setPassword] = useState(\"\");\n        const [showPassword, setShowPassword] = useState(false);\n        const [firstname, setFirstname] = useState(\"\");\n        const [lastname, setLastname] = useState(\"\");\n        const [status, setStatus] = useState(\"\");\n        const [hiringDate, setHiringDate] = useState(\"\");\n\n        const handleSubmit = (e) => {\n            //On place ici la logique a appliquer lorsque le user clique sur 'Se connecter'.\n            axios({\n                method: 'post',\n                url: 'http://localhost:3000/api/auth/login',\n                data: { email : email, password: password}\n            })\n            .then(function (reponse) {\n                //On traite la suite une fois la réponse obtenue \n                console.log(reponse);\n            })\n            .catch(function (erreur) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(erreur);\n            });\n        };\n\n        const handleClickShowPassword = () => {\n            setShowPassword(!showPassword);\n        };\n\n        const handleMouseDownPassword = (event) => {\n            event.preventDefault();\n        };\n\n        return (\n            <div>\n                <form noValidate autoComplete=\"off\">\n                    <TextField id=\"email-field\" label=\"Email\" variant=\"filled\" type=\"email\"\n                        onChange={(e) => setEmail(e.target.value)} />\n                    <TextField id=\"password-field\" label=\"Mot de passe\" variant=\"filled\" \n                        type={showPassword ? 'text' : 'password'}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                onMouseDown={handleMouseDownPassword}\n                                >\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                        onChange={(e) => setPassword(e.target.value)}/>\n                    <FormControlLabel control={ \n                        <Checkbox name=\"RGPD\" color=\"primary\" />\n                    }\n                    label=\"En cochant cette case, je reconnais avoir pris connaissance de la charte RGPD de CAP Formation et en accepte les termes.\"\n                    />\n                    <Button variant=\"contained\" onClick={handleSubmit}>Se connecter</Button>\n                </form>\n            </div>\n        );\n    };\n\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}