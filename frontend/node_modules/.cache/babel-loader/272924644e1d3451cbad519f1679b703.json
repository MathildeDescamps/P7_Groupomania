{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport axios from 'axios';\nconst UrlAPI = 'http://localhost:3000/api/'; // STYLE :\n\nconst PageBodyWrapper = styled.div`\n    width: 100%;\n`;\n_c = PageBodyWrapper;\nconst PostContainer = styled.div`\n    width: 80px;\n    position: relative;\n    paddingTop: 10ch;\n`;\n_c2 = PostContainer;\nconst ThemeContainer = styled.div`\n    backgroundColor: #F1D4D4;\n    width: 20%;\n    height: 100%;\n    position: absolute;\n    position: fixed;\n    right: 0; \n    top: 0;\n    marginTop: 10ch;      \n    paddingLeft: 1ch;\n    paddingRight: 1ch;\n`;\n_c3 = ThemeContainer;\nconst ThemeContainerHeader = styled.div`\n    backgroundColor: #D7502F;\n    color: white;\n    fontSize: 28px;\n    fontWeight: 600;\n    textAlign: center;\n    padding: 1ch;\n`;\n_c4 = ThemeContainerHeader;\nconst ThemeButton = styled.button`\n    backgroundColor: #FFFFFE;\n    color: #696A6B;\n    fontSize: 18px;\n    fontWeight: 400;\n    padding: 1ch;\n    maxWidth: 24ch;\n    width: 14ch;\n    textAlign: center;\n    margin: 1ch;\n    &:hover: {\n        backgroundColor: #D35233;\n        color: white;\n    };\n`; // const useStyles = makeStyles(() => ({\n//         postContainer: {\n//             width: '80%',\n//             position: 'relative',\n//             paddingTop: '10ch',\n//         },\n//         themeContainer: {\n//             backgroundColor: '#F1D4D4',\n//             width: '20%',\n//             height: '100%',\n//             position: 'absolute',\n//             position: 'fixed',\n//             right: '0', \n//             top: '0',\n//             marginTop: '10ch',      \n//             paddingLeft: '1ch',\n//             paddingRight: '1ch',\n//         },\n//         themeContainerHeader: {\n//             backgroundColor: '#D7502F',\n//             color: 'white',\n//             fontSize: '28px',\n//             fontWeight: '600',\n//             textAlign: 'center',\n//             padding: '1ch',\n//         },\n//         themeButton: {\n//             backgroundColor: '#FFFFFE',\n//             color: '#696A6B',\n//             fontSize: '18px',\n//             fontWeight: '400',\n//             padding: '1ch',\n//             maxWidth: '24ch',\n//             width: '14ch',\n//             textAlign: 'center',\n//             margin: '1ch',\n//             '&:hover': {\n//                 backgroundColor: '#D35233',\n//                 color: 'white',\n//             },\n//         },\n// }));\n// LOGIQUE :\n\n_c5 = ThemeButton;\n\nclass PageBodyContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPosts = () => {\n      axios.get(UrlAPI + 'posts').then(result => result.data).then(data => this.state = {\n        setPostList: data\n      });\n    };\n\n    this.getThemes = () => {\n      axios.get(UrlAPI + 'themes').then(result => result.data).then(data => this.state = {\n        setThemeList: data\n      });\n    };\n\n    this.state = {\n      postList: null,\n      themeList: null //classes: useStyles(),\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageBodyWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostContainer, {\n        children: this.state.postList && this.state.postList.map(post => {\n          return /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ThemeContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ThemeContainerHeader, {\n          children: \"TH\\xC8MES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), this.state.themeList && this.state.themeList.map(theme => {\n          return /*#__PURE__*/_jsxDEV(ThemeButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: theme && theme.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n; //<Theme filter={props.filter}  key={theme.id} theme={theme} />\n\nexport default PageBodyContainer;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PageBodyWrapper\");\n$RefreshReg$(_c2, \"PostContainer\");\n$RefreshReg$(_c3, \"ThemeContainer\");\n$RefreshReg$(_c4, \"ThemeContainerHeader\");\n$RefreshReg$(_c5, \"ThemeButton\");","map":{"version":3,"sources":["/Users/mathildedescamps/Git/OpenClassrooms/P7/frontend/my-app/src/components/PostAndTheme/PageBodyContainer.js"],"names":["React","Component","useState","useEffect","useParams","styled","createGlobalStyle","CssBaseline","Button","Post","axios","UrlAPI","PageBodyWrapper","div","PostContainer","ThemeContainer","ThemeContainerHeader","ThemeButton","button","PageBodyContainer","constructor","props","getPosts","get","then","result","data","state","setPostList","getThemes","setThemeList","postList","themeList","render","map","post","id","theme","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,4BAAf,C,CAEA;;AAEA,MAAMC,eAAe,GAAGP,MAAM,CAACQ,GAAI;AACnC;AACA,CAFA;KAAMD,e;AAIN,MAAME,aAAa,GAAGT,MAAM,CAACQ,GAAI;AACjC;AACA;AACA;AACA,CAJA;MAAMC,a;AAMN,MAAMC,cAAc,GAAGV,MAAM,CAACQ,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAME,c;AAaN,MAAMC,oBAAoB,GAAGX,MAAM,CAACQ,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMG,oB;AASN,MAAMC,WAAW,GAAGZ,MAAM,CAACa,MAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;MA5DMD,W;;AA8DN,MAAME,iBAAN,SAAgClB,SAAhC,CAA0C;AAE1CmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,QATmB,GASR,MAAM;AACjBZ,MAAAA,KAAK,CAACa,GAAN,CAAUZ,MAAM,GAAG,OAAnB,EACKa,IADL,CACUC,MAAM,IAAIA,MAAM,CAACC,IAD3B,EAEKF,IAFL,CAEUE,IAAI,IAAI,KAAKC,KAAL,GAAa;AAACC,QAAAA,WAAW,EAAGF;AAAf,OAF/B;AAGC,KAbkB;;AAAA,SAefG,SAfe,GAeH,MAAM;AACdnB,MAAAA,KAAK,CAACa,GAAN,CAAUZ,MAAM,GAAG,QAAnB,EACCa,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IADvB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,KAAL,GAAa;AAACG,QAAAA,YAAY,EAAGJ;AAAhB,OAF3B;AAGH,KAnBc;;AAEf,SAAKC,KAAL,GAAa;AACTI,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,SAAS,EAAE,IAFF,CAGT;;AAHS,KAAb;AAKD;;AAcCC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,eAAD;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA,kBACK,KAAKN,KAAL,CAAWI,QAAX,IAAuB,KAAKJ,KAAL,CAAWI,QAAX,CAAoBG,GAApB,CAAwBC,IAAI,IAAI;AACxD,8BAAO,QAAC,IAAD;AAAoB,YAAA,IAAI,EAAEA;AAA1B,aAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAA2C,SADnB;AAD5B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,cAAD;AAAA,gCACI,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKT,KAAL,CAAWK,SAAX,IAAwB,KAAKL,KAAL,CAAWK,SAAX,CAAqBE,GAArB,CAAyBG,KAAK,IAAI;AACvD,8BACI,QAAC,WAAD;AAAA,mCACI,QAAC,MAAD;AAAA,wBACKA,KAAK,IAAIA,KAAK,CAACC;AADpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARwB,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AA7CqC;;AA8CzC,C,CAED;;AACA,eAAenB,iBAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { CssBaseline, Button } from '@material-ui/core';\nimport Post from './Post';\nimport axios from 'axios';\n\nconst UrlAPI = 'http://localhost:3000/api/';\n\n// STYLE :\n\nconst PageBodyWrapper = styled.div`\n    width: 100%;\n`;\n\nconst PostContainer = styled.div`\n    width: 80px;\n    position: relative;\n    paddingTop: 10ch;\n`;\n\nconst ThemeContainer = styled.div`\n    backgroundColor: #F1D4D4;\n    width: 20%;\n    height: 100%;\n    position: absolute;\n    position: fixed;\n    right: 0; \n    top: 0;\n    marginTop: 10ch;      \n    paddingLeft: 1ch;\n    paddingRight: 1ch;\n`;\n\nconst ThemeContainerHeader = styled.div`\n    backgroundColor: #D7502F;\n    color: white;\n    fontSize: 28px;\n    fontWeight: 600;\n    textAlign: center;\n    padding: 1ch;\n`;\n\nconst ThemeButton = styled.button`\n    backgroundColor: #FFFFFE;\n    color: #696A6B;\n    fontSize: 18px;\n    fontWeight: 400;\n    padding: 1ch;\n    maxWidth: 24ch;\n    width: 14ch;\n    textAlign: center;\n    margin: 1ch;\n    &:hover: {\n        backgroundColor: #D35233;\n        color: white;\n    };\n`;\n\n// const useStyles = makeStyles(() => ({\n//         postContainer: {\n//             width: '80%',\n//             position: 'relative',\n//             paddingTop: '10ch',\n//         },\n//         themeContainer: {\n//             backgroundColor: '#F1D4D4',\n//             width: '20%',\n//             height: '100%',\n//             position: 'absolute',\n//             position: 'fixed',\n//             right: '0', \n//             top: '0',\n//             marginTop: '10ch',      \n//             paddingLeft: '1ch',\n//             paddingRight: '1ch',\n//         },\n//         themeContainerHeader: {\n//             backgroundColor: '#D7502F',\n//             color: 'white',\n//             fontSize: '28px',\n//             fontWeight: '600',\n//             textAlign: 'center',\n//             padding: '1ch',\n//         },\n//         themeButton: {\n//             backgroundColor: '#FFFFFE',\n//             color: '#696A6B',\n//             fontSize: '18px',\n//             fontWeight: '400',\n//             padding: '1ch',\n//             maxWidth: '24ch',\n//             width: '14ch',\n//             textAlign: 'center',\n//             margin: '1ch',\n//             '&:hover': {\n//                 backgroundColor: '#D35233',\n//                 color: 'white',\n//             },\n//         },\n\n// }));\n\n// LOGIQUE :\n\nclass PageBodyContainer extends Component {\n    \nconstructor(props) {\n    super(props);\n    this.state = {\n        postList: null,\n        themeList: null,\n        //classes: useStyles(),\n    };\n  };\n//On envoi une requête GET à l'API pour récupérer un tableau 'postList' contenant des objets (1 objet / post).\ngetPosts = () => {\naxios.get(UrlAPI + 'posts')\n    .then(result => result.data)\n    .then(data => this.state = {setPostList: (data)});\n};\n    //On envoi une requête GET à l'API pour récupérer un tableau 'themeList' contenant des objets (1 objet / theme).\n    getThemes = () => {\n        axios.get(UrlAPI + 'themes')\n        .then(result => result.data)\n        .then(data => this.state = {setThemeList: (data)});\n    };\n\n    render() {\n        return (\n            <PageBodyWrapper>\n                <CssBaseline />\n                <PostContainer>\n                    {this.state.postList && this.state.postList.map(post => { \n                    return <Post key={post.id} post={post} />;})}\n                </PostContainer>\n                <ThemeContainer >\n                    <ThemeContainerHeader>THÈMES</ThemeContainerHeader>\n                    {this.state.themeList && this.state.themeList.map(theme => { \n                        return (\n                            <ThemeButton>\n                                <Button> \n                                    {theme && theme.name} \n                                </Button>\n                            </ThemeButton>\n                        )\n                    })}\n                </ThemeContainer>\n            </PageBodyWrapper>\n        );\n    };\n};\n\n//<Theme filter={props.filter}  key={theme.id} theme={theme} />\nexport default PageBodyContainer;"]},"metadata":{},"sourceType":"module"}